{
  "name": "FINANCE",
  "compatibilityLevel": 1500,
  "model": {
    "culture": "en-US",
    "discourageImplicitMeasures": true,
    "dataSources": [
      {
        "type": "structured",
        "name": "SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "azr-sql-dai-entdl-500.database.windows.net",
            "database": "azr-adw-dai-entdl-500"
          },
          "authentication": null,
          "query": null
        },
        "credential": {
          "AuthenticationKind": "OAuth2",
          "kind": "SQL",
          "path": "azr-sql-dai-entdl-500.database.windows.net;azr-adw-dai-entdl-500",
          "Expires": "Wed, 07 Oct 2020 08:57:14 GMT",
          "RefreshToken": "********"
        }
      }
    ],
    "tables": [
      {
        "name": "FACT_COPA",
        "isHidden": true,
        "columns": [
          {
            "name": "COPA_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COPA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "BUSI_ACT_TYPE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BUSI_ACT_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "POSTNG_DATE_INT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "POSTNG_DATE_INT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CRNCY_TYPE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CRNCY_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CRNCY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CRNCY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "GOODS_ISS_DATE_INT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "GOODS_ISS_DATE_INT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "LAST_GOODS_ISS_DATE_INT_KEY",
            "dataType": "int64",
            "sourceColumn": "LAST_GOODS_ISS_DATE_INT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "BP_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SOLD_TO_BP_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SOLD_TO_BP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SHP_TO_BP_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SHP_TO_BP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "END_CUST_BP_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "END_CUST_BP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CUST_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CUST_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SOLD_TO_CUST_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SOLD_TO_CUST_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SHP_TO_CUST_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SHP_TO_CUST_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "END_CUST_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "END_CUST_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COMPANY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COMPANY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PLANT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PLANT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRFT_CTR_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PRFT_CTR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MTL_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MTL_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_GRP_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MATL_GRP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_TYPE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MATL_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORG_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_ORG_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_DIST_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_DIST_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_DOC_TYPE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_DOC_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "FUNCL_AREA_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FUNCL_AREA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CUST_ACCT_ASGNMT_GRP_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CUST_ACCT_ASGNMT_GRP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "INCOTERMS_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "INCOTERMS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PROD_HRCHY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PROD_HRCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRFT_CTR_HRCHY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PRFT_CTR_HRCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_QTY_UOM_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_QTY_UOM_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SETLMNT_QTY_UOM_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SETLMNT_QTY_UOM_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRODN_ORD_DLVRD_QTY_UOM_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PRODN_ORD_DLVRD_QTY_UOM_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COPA_HEADER_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COPA_HEADER_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COPA_CODES_1_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COPA_CODES_1_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COPA_CODES_2_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COPA_CODES_2_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COPA_TEXT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COPA_TEXT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MIDRANGE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MIDRANGE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ADJD_COST_CMPNT_AMT",
            "dataType": "double",
            "sourceColumn": "ADJD_COST_CMPNT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "ADMIN_EXP_COST",
            "dataType": "double",
            "sourceColumn": "ADMIN_EXP_COST",
            "encodingHint": "value"
          },
          {
            "name": "BILLBL_OUTBND_FRT_COST",
            "dataType": "double",
            "sourceColumn": "BILLBL_OUTBND_FRT_COST",
            "encodingHint": "value"
          },
          {
            "name": "CAPTLZD_SFTWR_EXP_COST",
            "dataType": "double",
            "sourceColumn": "CAPTLZD_SFTWR_EXP_COST",
            "encodingHint": "value"
          },
          {
            "name": "CASH_DISC_AMT",
            "dataType": "double",
            "sourceColumn": "CASH_DISC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "COST_GOODS_SOLD",
            "dataType": "double",
            "sourceColumn": "COST_GOODS_SOLD",
            "encodingHint": "value"
          },
          {
            "name": "TOT_GOODS_MFGD_FXD_COST",
            "dataType": "double",
            "sourceColumn": "TOT_GOODS_MFGD_FXD_COST",
            "encodingHint": "value"
          },
          {
            "name": "COST_GOODS_SOLD_ADJMT_AMT",
            "dataType": "double",
            "sourceColumn": "COST_GOODS_SOLD_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "CUST_DISC_AMT",
            "dataType": "double",
            "sourceColumn": "CUST_DISC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "CUSTMS_BRKRG_COST",
            "dataType": "double",
            "sourceColumn": "CUSTMS_BRKRG_COST",
            "encodingHint": "value"
          },
          {
            "name": "DIR_MATL_COST",
            "dataType": "double",
            "sourceColumn": "DIR_MATL_COST",
            "encodingHint": "value"
          },
          {
            "name": "DISC_ADJMT_AMT",
            "dataType": "double",
            "sourceColumn": "DISC_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "DSTBN_COST",
            "dataType": "double",
            "sourceColumn": "DSTBN_COST",
            "encodingHint": "value"
          },
          {
            "name": "DUTY_BRKRG_COST",
            "dataType": "double",
            "sourceColumn": "DUTY_BRKRG_COST",
            "encodingHint": "value"
          },
          {
            "name": "ENGRNG_EXP_COST",
            "dataType": "double",
            "sourceColumn": "ENGRNG_EXP_COST",
            "encodingHint": "value"
          },
          {
            "name": "EXTD_LIST_PRC_AMT",
            "dataType": "double",
            "sourceColumn": "EXTD_LIST_PRC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "EXTRNL_PROCRMT_COST",
            "dataType": "double",
            "sourceColumn": "EXTRNL_PROCRMT_COST",
            "encodingHint": "value"
          },
          {
            "name": "FNSHD_GOODS_COST",
            "dataType": "double",
            "sourceColumn": "FNSHD_GOODS_COST",
            "encodingHint": "value"
          },
          {
            "name": "STK_VAL_AMT",
            "dataType": "double",
            "sourceColumn": "STK_VAL_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_SLS_SECNDRY_COST",
            "dataType": "double",
            "sourceColumn": "SETLMNT_SLS_SECNDRY_COST",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_BILLD_EXP_AMT",
            "dataType": "double",
            "sourceColumn": "SETLMNT_BILLD_EXP_AMT",
            "encodingHint": "value"
          },
          {
            "name": "FULL_BDN_ABSORP_COST",
            "dataType": "double",
            "sourceColumn": "FULL_BDN_ABSORP_COST",
            "encodingHint": "value"
          },
          {
            "name": "MACH_ABSORP_COST",
            "dataType": "double",
            "sourceColumn": "MACH_ABSORP_COST",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_COST_SLS_PRIM_AMT",
            "dataType": "double",
            "sourceColumn": "SETLMNT_COST_SLS_PRIM_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_EXP_AMT",
            "dataType": "double",
            "sourceColumn": "SETLMNT_EXP_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_REVNU_AMT",
            "dataType": "double",
            "sourceColumn": "SETLMNT_REVNU_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SUBCONTRG_EXP_AMT",
            "dataType": "double",
            "sourceColumn": "SUBCONTRG_EXP_AMT",
            "encodingHint": "value"
          },
          {
            "name": "GOODS_USG_COST",
            "dataType": "double",
            "sourceColumn": "GOODS_USG_COST",
            "encodingHint": "value"
          },
          {
            "name": "PRODN_ORD_DLVRD_QTY",
            "dataType": "double",
            "sourceColumn": "PRODN_ORD_DLVRD_QTY",
            "encodingHint": "value"
          },
          {
            "name": "IMPORT_DUTY_COST",
            "dataType": "double",
            "sourceColumn": "IMPORT_DUTY_COST",
            "encodingHint": "value"
          },
          {
            "name": "INBND_FRT_COST",
            "dataType": "double",
            "sourceColumn": "INBND_FRT_COST",
            "encodingHint": "value"
          },
          {
            "name": "INDIR_MATL_COST",
            "dataType": "double",
            "sourceColumn": "INDIR_MATL_COST",
            "encodingHint": "value"
          },
          {
            "name": "INPT_PRC_VARNC_AMT",
            "dataType": "double",
            "sourceColumn": "INPT_PRC_VARNC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "INPT_PRC_VARNC_SCNDRY_AMT",
            "dataType": "double",
            "sourceColumn": "INPT_PRC_VARNC_SCNDRY_AMT",
            "encodingHint": "value"
          },
          {
            "name": "INPT_QTY_VARNC_AMT",
            "dataType": "double",
            "sourceColumn": "INPT_QTY_VARNC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "INPT_QTY_VARNC_SCNDRY_AMT",
            "dataType": "double",
            "sourceColumn": "INPT_QTY_VARNC_SCNDRY_AMT",
            "encodingHint": "value"
          },
          {
            "name": "INTRCO_MARKUP_AMT",
            "dataType": "double",
            "sourceColumn": "INTRCO_MARKUP_AMT",
            "encodingHint": "value"
          },
          {
            "name": "INTRCO_SRVC_CHRG_AMT",
            "dataType": "double",
            "sourceColumn": "INTRCO_SRVC_CHRG_AMT",
            "encodingHint": "value"
          },
          {
            "name": "INTRCO_TRNSFR_ADJMT_AMT",
            "dataType": "double",
            "sourceColumn": "INTRCO_TRNSFR_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "INTRCO_TRNSFR_COST",
            "dataType": "double",
            "sourceColumn": "INTRCO_TRNSFR_COST",
            "encodingHint": "value"
          },
          {
            "name": "LGSTCS_OVRHD_COST",
            "dataType": "double",
            "sourceColumn": "LGSTCS_OVRHD_COST",
            "encodingHint": "value"
          },
          {
            "name": "LOT_SIZE_VARNC_AMT",
            "dataType": "double",
            "sourceColumn": "LOT_SIZE_VARNC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "LOT_SIZE_VARNC_SCNDRY_AMT",
            "dataType": "double",
            "sourceColumn": "LOT_SIZE_VARNC_SCNDRY_AMT",
            "encodingHint": "value"
          },
          {
            "name": "MIXED_PRC_VARNC_AMT",
            "dataType": "double",
            "sourceColumn": "MIXED_PRC_VARNC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "MIXED_PRC_VARNC_SCNDRY_AMT",
            "dataType": "double",
            "sourceColumn": "MIXED_PRC_VARNC_SCNDRY_AMT",
            "encodingHint": "value"
          },
          {
            "name": "MKTG_OVRHD_COST",
            "dataType": "double",
            "sourceColumn": "MKTG_OVRHD_COST",
            "encodingHint": "value"
          },
          {
            "name": "OPRTG_PRFT_AMT",
            "dataType": "double",
            "sourceColumn": "OPRTG_PRFT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "OTHER_COST_SLS_AMT",
            "dataType": "double",
            "sourceColumn": "OTHER_COST_SLS_AMT",
            "encodingHint": "value"
          },
          {
            "name": "OTHER_OVRHD_COST",
            "dataType": "double",
            "sourceColumn": "OTHER_OVRHD_COST",
            "encodingHint": "value"
          },
          {
            "name": "OTHER_SLS_DEDCTN_AMT",
            "dataType": "double",
            "sourceColumn": "OTHER_SLS_DEDCTN_AMT",
            "encodingHint": "value"
          },
          {
            "name": "OTHER_VARNC_AMT",
            "dataType": "double",
            "sourceColumn": "OTHER_VARNC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "OUTBND_FXD_COST",
            "dataType": "double",
            "sourceColumn": "OUTBND_FXD_COST",
            "encodingHint": "value"
          },
          {
            "name": "OUTPT_PRC_VARNC_AMT",
            "dataType": "double",
            "sourceColumn": "OUTPT_PRC_VARNC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "OUTPT_PRC_VARNC_SCNDRY_AMT",
            "dataType": "double",
            "sourceColumn": "OUTPT_PRC_VARNC_SCNDRY_AMT",
            "encodingHint": "value"
          },
          {
            "name": "PRMTN_EXP_COST",
            "dataType": "double",
            "sourceColumn": "PRMTN_EXP_COST",
            "encodingHint": "value"
          },
          {
            "name": "PROD_FXD_COST",
            "dataType": "double",
            "sourceColumn": "PROD_FXD_COST",
            "encodingHint": "value"
          },
          {
            "name": "PRODN_VARNC_COST",
            "dataType": "double",
            "sourceColumn": "PRODN_VARNC_COST",
            "encodingHint": "value"
          },
          {
            "name": "QTY_DISC_AMT",
            "dataType": "double",
            "sourceColumn": "QTY_DISC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "RAW_MATL_COST",
            "dataType": "double",
            "sourceColumn": "RAW_MATL_COST",
            "encodingHint": "value"
          },
          {
            "name": "RBTE_ADJMT_A606_AMT",
            "dataType": "double",
            "sourceColumn": "RBTE_ADJMT_A606_AMT",
            "encodingHint": "value"
          },
          {
            "name": "RD_COST",
            "dataType": "double",
            "sourceColumn": "RD_COST",
            "encodingHint": "value"
          },
          {
            "name": "REMNG_IMPT_VARNC_AMT",
            "dataType": "double",
            "sourceColumn": "REMNG_IMPT_VARNC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "REMNG_IMPT_VARNC_SCNDRY_AMT",
            "dataType": "double",
            "sourceColumn": "REMNG_IMPT_VARNC_SCNDRY_AMT",
            "encodingHint": "value"
          },
          {
            "name": "REMNG_OUTPT_VARNC_AMT",
            "dataType": "double",
            "sourceColumn": "REMNG_OUTPT_VARNC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "RESTK_FEE_AMT",
            "dataType": "double",
            "sourceColumn": "RESTK_FEE_AMT",
            "encodingHint": "value"
          },
          {
            "name": "REVNU_ADJMT_AMT",
            "dataType": "double",
            "sourceColumn": "REVNU_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "REVNU_AMT",
            "dataType": "double",
            "sourceColumn": "REVNU_AMT",
            "encodingHint": "value"
          },
          {
            "name": "RSRC_USG_VARNC_AMT",
            "dataType": "double",
            "sourceColumn": "RSRC_USG_VARNC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "RSRC_USG_VARNC_SCNDRY_AMT",
            "dataType": "double",
            "sourceColumn": "RSRC_USG_VARNC_SCNDRY_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SCRP_VARNC_AMT",
            "dataType": "double",
            "sourceColumn": "SCRP_VARNC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SCRP_VARNC_SCNDRY_AMT",
            "dataType": "double",
            "sourceColumn": "SCRP_VARNC_SCNDRY_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SEMI_FNSHD_GOODS_COST",
            "dataType": "double",
            "sourceColumn": "SEMI_FNSHD_GOODS_COST",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_DISC_AMT",
            "dataType": "double",
            "sourceColumn": "SETLMNT_DISC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_DISC_CLM_AMT",
            "dataType": "double",
            "sourceColumn": "SETLMNT_DISC_CLM_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_DISC_PRMTN_INCNTV_AMT",
            "dataType": "double",
            "sourceColumn": "SETLMNT_DISC_PRMTN_INCNTV_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_NET_MARG_AMT",
            "dataType": "double",
            "sourceColumn": "SETLMNT_NET_MARG_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_OTHER_VARNC_AMT",
            "dataType": "double",
            "sourceColumn": "SETLMNT_OTHER_VARNC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_OUTBND_FRT_COST",
            "dataType": "double",
            "sourceColumn": "SETLMNT_OUTBND_FRT_COST",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_QTY",
            "dataType": "double",
            "sourceColumn": "SETLMNT_QTY",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_RBTE_AMT",
            "dataType": "double",
            "sourceColumn": "SETLMNT_RBTE_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_RBTE_CLM_AMT",
            "dataType": "double",
            "sourceColumn": "SETLMNT_RBTE_CLM_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SETLMNT_RBTE_PRMTN_INCNTV_AMT",
            "dataType": "double",
            "sourceColumn": "SETLMNT_RBTE_PRMTN_INCNTV_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SFSAC_CLM_AMT",
            "dataType": "double",
            "sourceColumn": "SFSAC_CLM_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SFSAC_LGCY_CLM_AMT",
            "dataType": "double",
            "sourceColumn": "SFSAC_LGCY_CLM_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SFSAC_SLS_ADJMT_AMT",
            "dataType": "double",
            "sourceColumn": "SFSAC_SLS_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SLS_COMSN_AMT",
            "dataType": "double",
            "sourceColumn": "SLS_COMSN_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SLS_DISC_AMT",
            "dataType": "double",
            "sourceColumn": "SLS_DISC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SLS_EXP_RECVRY_AMT",
            "dataType": "double",
            "sourceColumn": "SLS_EXP_RECVRY_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SLS_ORD_DLVRD_QTY",
            "dataType": "double",
            "sourceColumn": "SLS_ORD_DLVRD_QTY",
            "encodingHint": "value"
          },
          {
            "name": "SLS_QTY",
            "dataType": "double",
            "sourceColumn": "SLS_QTY",
            "encodingHint": "value"
          },
          {
            "name": "SLS_RBTE_AMT",
            "dataType": "double",
            "sourceColumn": "SLS_RBTE_AMT",
            "encodingHint": "value"
          },
          {
            "name": "SPCL_DIR_SLS_COST",
            "dataType": "double",
            "sourceColumn": "SPCL_DIR_SLS_COST",
            "encodingHint": "value"
          },
          {
            "name": "STD_MARG_AMT",
            "dataType": "double",
            "sourceColumn": "STD_MARG_AMT",
            "encodingHint": "value"
          },
          {
            "name": "STD_MARG_EXCL_INTRCO_AMT",
            "dataType": "double",
            "sourceColumn": "STD_MARG_EXCL_INTRCO_AMT",
            "encodingHint": "value"
          },
          {
            "name": "STD_MARG_SLS_MO_EXCL_INTRCO_AMT",
            "dataType": "double",
            "sourceColumn": "STD_MARG_SLS_MO_EXCL_INTRCO_AMT",
            "encodingHint": "value"
          },
          {
            "name": "STD_MARG_SLS_MTH_AMT",
            "dataType": "double",
            "sourceColumn": "STD_MARG_SLS_MTH_AMT",
            "encodingHint": "value"
          },
          {
            "name": "DISC_VAL",
            "dataType": "double",
            "sourceColumn": "DISC_VAL",
            "encodingHint": "value"
          },
          {
            "name": "NET_VAL",
            "dataType": "double",
            "sourceColumn": "NET_VAL",
            "encodingHint": "value"
          },
          {
            "name": "TOT_OVRHD_COST",
            "dataType": "double",
            "sourceColumn": "TOT_OVRHD_COST",
            "encodingHint": "value"
          },
          {
            "name": "TOT_REVNU_AMT",
            "dataType": "double",
            "sourceColumn": "TOT_REVNU_AMT",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "encodingHint": "value",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "TOT_SLS_COST",
            "dataType": "double",
            "sourceColumn": "TOT_SLS_COST",
            "encodingHint": "value"
          },
          {
            "name": "TOT_SLS_DEDCTN_AMT",
            "dataType": "double",
            "sourceColumn": "TOT_SLS_DEDCTN_AMT",
            "encodingHint": "value"
          },
          {
            "name": "TOT_VARNC_AMT",
            "dataType": "double",
            "sourceColumn": "TOT_VARNC_AMT",
            "encodingHint": "value"
          },
          {
            "name": "TRADE_GOODS_USG_COST",
            "dataType": "double",
            "sourceColumn": "TRADE_GOODS_USG_COST",
            "encodingHint": "value"
          },
          {
            "name": "VOL_RBTE_AMT",
            "dataType": "double",
            "sourceColumn": "VOL_RBTE_AMT",
            "encodingHint": "value"
          },
          {
            "name": "WRN_CNCSSN_COST",
            "dataType": "double",
            "sourceColumn": "WRN_CNCSSN_COST",
            "encodingHint": "value"
          },
          {
            "name": "SLS_OFFICE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_OFFICE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Date_DTE_KEY",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "DATE_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COUNTRY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COUNTRY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CTRY_SUBDIV_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CTRY_SUBDIV_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "HYPERION_PRFT_CTR_HRCHY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "HYPERION_PRFT_CTR_HRCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COPA_HEADER_2_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COPA_HEADER_2_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COPA_HEADER_3_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COPA_HEADER_3_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "TOT_CMPNTS_DIR_COST",
            "dataType": "double",
            "sourceColumn": "TOT_CMPNTS_DIR_COST",
            "encodingHint": "value"
          },
          {
            "name": "COUNTRY_REGION_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COUNTRY_REGION_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_SLS_KEY",
            "dataType": "int64",
            "sourceColumn": "MATL_SLS_KEY"
          },
          {
            "name": "COGS_ADJMT_AMT",
            "dataType": "double",
            "sourceColumn": "COGS_ADJMT_AMT"
          },
          {
            "name": "SETLMNT_BILLD_EXP_COST",
            "dataType": "double",
            "sourceColumn": "SETLMNT_BILLD_EXP_COST"
          },
          {
            "name": "SETLMNT_EXPS_COST",
            "dataType": "double",
            "sourceColumn": "SETLMNT_EXPS_COST"
          },
          {
            "name": "TOT_REVNU_605_AMT",
            "dataType": "double",
            "sourceColumn": "TOT_REVNU_605_AMT",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "TOT_REVNU_606_AMT",
            "dataType": "double",
            "sourceColumn": "TOT_REVNU_606_AMT",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "TOT_REVNU_ORIG_AMT",
            "dataType": "double",
            "sourceColumn": "TOT_REVNU_ORIG_AMT",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "BILLBL_OUTBND_ADJMT_FRT_COST",
            "dataType": "double",
            "sourceColumn": "BILLBL_OUTBND_ADJMT_FRT_COST"
          },
          {
            "name": "DW_CREATED_DTTM",
            "dataType": "dateTime",
            "sourceColumn": "DW_CREATED_DTTM"
          },
          {
            "name": "DW_UPDATED_DTTM",
            "dataType": "dateTime",
            "sourceColumn": "DW_UPDATED_DTTM"
          }
        ],
        "partitions": [
          {
            "name": "FACT_COPA",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "     FIN_COPA_V_FACT_COPA_AAS = Source{[Schema=\"FIN_COPA\",Item=\"V_FACT_COPA_AAS\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_COPA_V_FACT_COPA_AAS,{\"COPA_KEY\", \"BUSI_ACT_TYPE_KEY\", \"POSTNG_DATE_INT_KEY\", \"CRNCY_TYPE_KEY\", \"CRNCY_KEY\", \"GOODS_ISS_DATE_INT_KEY\", \"LAST_GOODS_ISS_DATE_INT_KEY\", \"BP_KEY\", \"SOLD_TO_BP_KEY\", \"SHP_TO_BP_KEY\", \"END_CUST_BP_KEY\", \"CUST_KEY\", \"SOLD_TO_CUST_KEY\", \"SHP_TO_CUST_KEY\", \"END_CUST_KEY\", \"COMPANY_KEY\", \"PLANT_KEY\", \"COUNTRY_KEY\", \"CTRY_SUBDIV_KEY\", \"PRFT_CTR_KEY\", \"HYPERION_PRFT_CTR_HRCHY_KEY\", \"MTL_KEY\", \"MATL_GRP_KEY\", \"MATL_TYPE_KEY\", \"SLS_ORG_KEY\", \"SLS_DIST_KEY\", \"SLS_OFFICE_KEY\", \"SLS_DOC_TYPE_KEY\", \"FUNCL_AREA_KEY\", \"CUST_ACCT_ASGNMT_GRP_KEY\", \"INCOTERMS_KEY\", \"PROD_HRCHY_KEY\", \"PRFT_CTR_HRCHY_KEY\", \"SLS_QTY_UOM_KEY\", \"SETLMNT_QTY_UOM_KEY\", \"PRODN_ORD_DLVRD_QTY_UOM_KEY\", \"COPA_HEADER_KEY\", \"COPA_HEADER_2_KEY\", \"COPA_HEADER_3_KEY\", \"COPA_CODES_1_KEY\", \"COPA_CODES_2_KEY\", \"COPA_TEXT_KEY\", \"MIDRANGE_KEY\", \"COUNTRY_REGION_KEY\", \"MATL_SLS_KEY\", \"ADJD_COST_CMPNT_AMT\", \"ADMIN_EXP_COST\", \"BILLBL_OUTBND_ADJMT_FRT_COST\", \"BILLBL_OUTBND_FRT_COST\", \"CAPTLZD_SFTWR_EXP_COST\", \"CASH_DISC_AMT\", \"COGS_ADJMT_AMT\", \"COST_GOODS_SOLD\", \"TOT_GOODS_MFGD_FXD_COST\", \"COST_GOODS_SOLD_ADJMT_AMT\", \"CUST_DISC_AMT\", \"CUSTMS_BRKRG_COST\", \"DIR_MATL_COST\", \"DISC_ADJMT_AMT\", \"DSTBN_COST\", \"DUTY_BRKRG_COST\", \"ENGRNG_EXP_COST\", \"EXTD_LIST_PRC_AMT\", \"EXTRNL_PROCRMT_COST\", \"FNSHD_GOODS_COST\", \"STK_VAL_AMT\", \"SETLMNT_SLS_SECNDRY_COST\", \"SETLMNT_BILLD_EXP_AMT\", \"FULL_BDN_ABSORP_COST\", \"MACH_ABSORP_COST\", \"SETLMNT_COST_SLS_PRIM_AMT\", \"SETLMNT_EXP_AMT\", \"SUBCONTRG_EXP_AMT\", \"GOODS_USG_COST\", \"PRODN_ORD_DLVRD_QTY\", \"IMPORT_DUTY_COST\", \"INBND_FRT_COST\", \"INDIR_MATL_COST\", \"INPT_PRC_VARNC_AMT\", \"INPT_PRC_VARNC_SCNDRY_AMT\", \"INPT_QTY_VARNC_AMT\", \"INPT_QTY_VARNC_SCNDRY_AMT\", \"INTRCO_MARKUP_AMT\", \"INTRCO_SRVC_CHRG_AMT\", \"INTRCO_TRNSFR_ADJMT_AMT\", \"INTRCO_TRNSFR_COST\", \"LGSTCS_OVRHD_COST\", \"LOT_SIZE_VARNC_AMT\", \"LOT_SIZE_VARNC_SCNDRY_AMT\", \"MIXED_PRC_VARNC_AMT\", \"MIXED_PRC_VARNC_SCNDRY_AMT\", \"MKTG_OVRHD_COST\", \"OPRTG_PRFT_AMT\", \"OTHER_COST_SLS_AMT\", \"OTHER_OVRHD_COST\", \"OTHER_SLS_DEDCTN_AMT\", \"OTHER_VARNC_AMT\", \"OUTBND_FXD_COST\", \"OUTPT_PRC_VARNC_AMT\", \"OUTPT_PRC_VARNC_SCNDRY_AMT\", \"PRMTN_EXP_COST\", \"PROD_FXD_COST\", \"PRODN_VARNC_COST\", \"QTY_DISC_AMT\", \"RAW_MATL_COST\", \"RBTE_ADJMT_A606_AMT\", \"RD_COST\", \"REMNG_IMPT_VARNC_AMT\", \"REMNG_IMPT_VARNC_SCNDRY_AMT\", \"REMNG_OUTPT_VARNC_AMT\", \"RESTK_FEE_AMT\", \"REVNU_ADJMT_AMT\", \"REVNU_AMT\", \"RSRC_USG_VARNC_AMT\", \"RSRC_USG_VARNC_SCNDRY_AMT\", \"SCRP_VARNC_AMT\", \"SCRP_VARNC_SCNDRY_AMT\", \"SEMI_FNSHD_GOODS_COST\", \"SETLMNT_BILLD_EXP_COST\", \"SETLMNT_DISC_AMT\", \"SETLMNT_DISC_CLM_AMT\", \"SETLMNT_DISC_PRMTN_INCNTV_AMT\", \"SETLMNT_EXPS_COST\", \"SETLMNT_NET_MARG_AMT\", \"SETLMNT_OTHER_VARNC_AMT\", \"SETLMNT_OUTBND_FRT_COST\", \"SETLMNT_QTY\", \"SETLMNT_RBTE_AMT\", \"SETLMNT_RBTE_CLM_AMT\", \"SETLMNT_RBTE_PRMTN_INCNTV_AMT\", \"SETLMNT_REVNU_AMT\", \"SFSAC_CLM_AMT\", \"SFSAC_LGCY_CLM_AMT\", \"SFSAC_SLS_ADJMT_AMT\", \"SLS_COMSN_AMT\", \"SLS_DISC_AMT\", \"SLS_EXP_RECVRY_AMT\", \"SLS_ORD_DLVRD_QTY\", \"SLS_QTY\", \"SLS_RBTE_AMT\", \"SPCL_DIR_SLS_COST\", \"STD_MARG_AMT\", \"STD_MARG_EXCL_INTRCO_AMT\", \"STD_MARG_SLS_MO_EXCL_INTRCO_AMT\", \"STD_MARG_SLS_MTH_AMT\", \"DISC_VAL\", \"NET_VAL\", \"TOT_OVRHD_COST\", \"TOT_REVNU_605_AMT\", \"TOT_REVNU_606_AMT\", \"TOT_REVNU_ORIG_AMT\", \"TOT_REVNU_AMT\", \"TOT_SLS_COST\", \"TOT_SLS_DEDCTN_AMT\", \"TOT_VARNC_AMT\", \"TRADE_GOODS_USG_COST\", \"VOL_RBTE_AMT\", \"WRN_CNCSSN_COST\", \"TOT_CMPNTS_DIR_COST\", \"DATE_DTE_KEY\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "     FIN_COPA_V_FACT_COPA_AAS = Source{[Schema=\"FIN_COPA\",Item=\"V_FACT_COPA_AAS\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_COPA_V_FACT_COPA_AAS,{\"FACT_COPA_KEY\", \"DW_CREATED_DTTM\", \"DW_UPDATED_DTTM\", \"COPA_KEY\", \"BUSI_ACT_TYPE_KEY\", \"POSTNG_DATE_INT_KEY\", \"CRNCY_TYPE_KEY\", \"CRNCY_KEY\", \"GOODS_ISS_DATE_INT_KEY\", \"LAST_GOODS_ISS_DATE_INT_KEY\", \"BP_KEY\", \"SOLD_TO_BP_KEY\", \"SHP_TO_BP_KEY\", \"END_CUST_BP_KEY\", \"CUST_KEY\", \"SOLD_TO_CUST_KEY\", \"SHP_TO_CUST_KEY\", \"END_CUST_KEY\", \"COMPANY_KEY\", \"PLANT_KEY\", \"COUNTRY_KEY\", \"CTRY_SUBDIV_KEY\", \"PRFT_CTR_KEY\", \"HYPERION_PRFT_CTR_HRCHY_KEY\", \"MTL_KEY\", \"MATL_GRP_KEY\", \"MATL_TYPE_KEY\", \"SLS_ORG_KEY\", \"SLS_DIST_KEY\", \"SLS_OFFICE_KEY\", \"SLS_DOC_TYPE_KEY\", \"FUNCL_AREA_KEY\", \"CUST_ACCT_ASGNMT_GRP_KEY\", \"INCOTERMS_KEY\", \"PROD_HRCHY_KEY\", \"PRFT_CTR_HRCHY_KEY\", \"SLS_QTY_UOM_KEY\", \"SETLMNT_QTY_UOM_KEY\", \"PRODN_ORD_DLVRD_QTY_UOM_KEY\", \"COPA_HEADER_KEY\", \"COPA_HEADER_2_KEY\", \"COPA_HEADER_3_KEY\", \"COPA_CODES_1_KEY\", \"COPA_CODES_2_KEY\", \"COPA_TEXT_KEY\", \"MIDRANGE_KEY\", \"ADJD_COST_CMPNT_AMT\", \"ADMIN_EXP_COST\", \"BILLBL_EXP_605_COST\", \"BILLBL_EXP_606_COST\", \"BILLBL_OUTBND_ADJMT_FRT_COST \", \"BILLBL_OUTBND_FRT_COST\", \"CAPTLZD_SFTWR_EXP_COST\", \"CASH_DISC_AMT\", \"COGS_ADJMT_A605_AMT\", \"COGS_ADJMT_A606_AMT\", \"COST_GOODS_SOLD\", \"TOT_GOODS_MFGD_FXD_COST\", \"COST_GOODS_SOLD_ADJMT_AMT\", \"CUST_DISC_AMT\", \"CUSTMS_BRKRG_COST\", \"DIR_MATL_COST\", \"DISC_ADJMT_AMT\", \"DSTBN_COST\", \"DUTY_BRKRG_COST\", \"ENGRNG_EXP_COST\", \"EXP_605_COST\", \"EXP_606_COST\", \"EXTD_LIST_PRC_AMT\", \"EXTRNL_PROCRMT_COST\", \"FNSHD_GOODS_COST\", \"STK_VAL_AMT\", \"SETLMNT_SLS_SECNDRY_COST\", \"SETLMNT_BILLD_EXP_AMT\", \"FULL_BDN_ABSORP_COST\", \"MACH_ABSORP_COST\", \"SETLMNT_COST_SLS_PRIM_AMT\", \"SETLMNT_EXP_AMT\", \"SETLMNT_REVNU_AMT\", \"SUBCONTRG_EXP_AMT\", \"GOODS_USG_COST\", \"PRODN_ORD_DLVRD_QTY\", \"IMPORT_DUTY_COST\", \"INBND_FRT_COST\", \"INDIR_MATL_COST\", \"INPT_PRC_VARNC_AMT\", \"INPT_PRC_VARNC_SCNDRY_AMT\", \"INPT_QTY_VARNC_AMT\", \"INPT_QTY_VARNC_SCNDRY_AMT\", \"INTRCO_MARKUP_AMT\", \"INTRCO_SRVC_CHRG_AMT\", \"INTRCO_TRNSFR_ADJMT_AMT\", \"INTRCO_TRNSFR_COST\", \"LGSTCS_OVRHD_COST\", \"LOT_SIZE_VARNC_AMT\", \"LOT_SIZE_VARNC_SCNDRY_AMT\", \"MIXED_PRC_VARNC_AMT\", \"MIXED_PRC_VARNC_SCNDRY_AMT\", \"MKTG_OVRHD_COST\", \"OPRTG_PRFT_AMT\", \"OTHER_COST_SLS_AMT\", \"OTHER_OVRHD_COST\", \"OTHER_SLS_DEDCTN_AMT\", \"OTHER_VARNC_AMT\", \"OUTBND_FXD_COST\", \"OUTPT_PRC_VARNC_AMT\", \"OUTPT_PRC_VARNC_SCNDRY_AMT\", \"PRMTN_EXP_COST\", \"PROD_FXD_COST\", \"PRODN_VARNC_COST\", \"QTY_DISC_AMT\", \"RAW_MATL_COST\", \"RBTE_ADJMT_A606_AMT\", \"RD_COST\", \"REMNG_IMPT_VARNC_AMT\", \"REMNG_IMPT_VARNC_SCNDRY_AMT\", \"REMNG_OUTPT_VARNC_AMT\", \"REPORTED_REVENUE_AMT\", \"RESTK_FEE_AMT\", \"REVNU_605_AMT\", \"REVNU_606_AMT\", \"REVNU_ADJMT_A605_AMT\", \"REVNU_ADJMT_A606_AMT\", \"REVNU_ADJMT_AMT\", \"REVNU_AMT\", \"RSRC_USG_VARNC_AMT\", \"RSRC_USG_VARNC_SCNDRY_AMT\", \"SCRP_VARNC_AMT\", \"SCRP_VARNC_SCNDRY_AMT\", \"SEMI_FNSHD_GOODS_COST\", \"SETLMNT_BILLD_EXP_605_COST\", \"SETLMNT_BILLD_EXP_606_COST\", \"SETLMNT_DISC_605_AMT\", \"SETLMNT_DISC_606_AMT\", \"SETLMNT_DISC_AMT\", \"SETLMNT_DISC_CLM_AMT\", \"SETLMNT_DISC_PRMTN_INCNTV_AMT\", \"SETLMNT_EXPS_605_COST\", \"SETLMNT_EXPS_606_COST\", \"SETLMNT_NET_MARG_AMT\", \"SETLMNT_OTHER_VARNC_AMT\", \"SETLMNT_OUTBND_FRT_COST\", \"SETLMNT_QTY\", \"SETLMNT_RBTE_AMT\", \"SETLMNT_RBTE_CLM_AMT\", \"SETLMNT_RBTE_PRMTN_INCNTV_AMT\", \"SETLMNT_REVNU_605_AMT \", \"SETLMNT_REVNU_606_AMT\", \"SFSAC_CLM_AMT\", \"SFSAC_LGCY_CLM_AMT\", \"SFSAC_SLS_ADJMT_AMT\", \"SLS_COMSN_AMT\", \"SLS_DISC_605_AMT\", \"SLS_DISC_606_AMT\", \"SLS_DISC_AMT\", \"SLS_EXP_RECVRY_AMT\", \"SLS_ORD_DLVRD_QTY\", \"SLS_QTY\", \"SLS_RBTE_AMT\", \"SPCL_DIR_SLS_COST\", \"STD_MARG_605_AMT\", \"STD_MARG_605_EXCL_INTRCO_AMT\", \"STD_MARG_605_PCT\", \"STD_MARG_606_AMT\", \"STD_MARG_606_EXCL_INTRCO_AMT\", \"STD_MARG_606_PCT\", \"STD_MARG_AMT\", \"STD_MARG_EXCL_INTRCO_AMT\", \"STD_MARG_PCT\", \"STD_MARG_SLS_MO_EXCL_INTRCO_AMT\", \"STD_MARG_SLS_MTH_AMT\", \"STD_MARG_SLS_MTH_PCT\", \"DISC_VAL\", \"NET_VAL\", \"TOT_OVRHD_COST\", \"TOT_REVNU_605_AMT\", \"TOT_REVNU_606_AMT\", \"TOT_REVNU_AMT\", \"TOT_REVNU_SLS_MTH_606_AMT\", \"TOT_SLS_605_COST\", \"TOT_SLS_606_COST\", \"TOT_SLS_COST\", \"TOT_SLS_DEDCTN_AMT\", \"TOT_VARNC_AMT\", \"TRADE_GOODS_USG_COST\", \"VOL_RBTE_AMT\", \"WRN_CNCSSN_COST\", \"DATE_DTE_KEY\"})",
                  "  ",
                  "in",
                  "     #\"Removed Other Columns\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Current Period",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT * FROM FIN_COPA.V_FACT_COPA_AAS ",
                "where year(date_dte_key) =year(getdate())",
                "      and Month(date_dte_key) >= Month(getdate())-1\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT * FROM FIN_COPA.V_FACT_COPA_AAS ",
                  "where year(date_dte_key) =year(getdate())",
                  "      and Month(date_dte_key) >= Month(getdate())-1\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Current Year",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT * FROM FIN_COPA.V_FACT_COPA_AAS ",
                "where year(date_dte_key) =year(getdate())",
                "      and Month(date_dte_key) < Month(getdate())-1 \"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT * FROM FIN_COPA.V_FACT_COPA_AAS ",
                  "where year(date_dte_key) =year(getdate())",
                  "      and Month(date_dte_key) < Month(getdate())-1 \"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevYear",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \" SELECT * FROM FIN_COPA.V_FACT_COPA_AAS where",
                "year(date_dte_key) =year(getdate()) -1 \"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \" SELECT * FROM FIN_COPA.V_FACT_COPA_AAS where",
                  "year(date_dte_key) =year(getdate()) -1 \"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevYear-1",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT * FROM FIN_COPA.V_FACT_COPA_AAS ",
                "      where year(date_dte_key) =year(getdate()) -2\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT * FROM FIN_COPA.V_FACT_COPA_AAS ",
                  "      where year(date_dte_key) =year(getdate()) -2\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevYear-2",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT * FROM FIN_COPA.V_FACT_COPA_AAS ",
                "      where year(date_dte_key) =year(getdate()) -3\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT * FROM FIN_COPA.V_FACT_COPA_AAS ",
                  "      where year(date_dte_key) =year(getdate()) -3\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevYear-3",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT * FROM FIN_COPA.V_FACT_COPA_AAS ",
                "      where year(date_dte_key) =year(getdate()) -4\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT * FROM FIN_COPA.V_FACT_COPA_AAS ",
                  "      where year(date_dte_key) =year(getdate()) -4\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevYear-4",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT * FROM FIN_COPA.V_FACT_COPA_AAS ",
                "      where year(date_dte_key) =year(getdate()) -5\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT * FROM FIN_COPA.V_FACT_COPA_AAS ",
                  "      where year(date_dte_key) =year(getdate()) -5\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevYear-5",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT * FROM FIN_COPA.V_FACT_COPA_AAS ",
                "      where year(date_dte_key) =year(getdate()) -6\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT * FROM FIN_COPA.V_FACT_COPA_AAS ",
                  "      where year(date_dte_key) =year(getdate()) -6\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "DIM_BUSI_ACCT_TYPE",
        "columns": [
          {
            "name": "BUSI_ACT_TYPE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated by the enterprise data warehouse in increments of 1, such as 100,101,102...) for the primary key in the business activity type table within the data warehouse, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "BUSI_ACT_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COPA Transaction Type",
            "dataType": "string",
            "description": "code in SAP for the type of transaction posted to SAP COPA for use in analysis (such as 1 for CRM services, 2 for CRM sales, A for incoming sales orders, or F for billings), stored as a nvarchar",
            "sourceColumn": "COPA Transaction Type",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "COPA Trans Type Short Desc",
            "dataType": "string",
            "description": "description associated with the code in SAP for the type of transaction posted to SAP COPA for use in analysis (such as Entries for CRM Serv for 1, Entries for CRM Sale for 2, Incoming sales order for A, or billing data for F), stored as a nvarchar",
            "sourceColumn": "COPA Trans Type Short Desc",
            "encodingHint": "hash"
          },
          {
            "name": "Copa Trans Type and Desc",
            "dataType": "string",
            "description": "concatenation of the Copa Transaction Type and the associated COPA Transaction Type Description (such as C-Order/proj.settlemnt or E-Single trans costing), stored as a nvarchar",
            "sourceColumn": "Copa Trans Type and Desc",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_BUSI_ACCT_TYPE = Source{[Schema=\"GLBL\",Item=\"V_DIM_BUSI_ACCT_TYPE_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_BUSI_ACCT_TYPE,{\"BUSI_ACT_TYPE_KEY\", \"COPA Transaction Type\", \"COPA Trans Type Short Desc\", \"Copa Trans Type and Desc\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_COMPANY",
        "columns": [
          {
            "name": "COMPANY_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated by the enterprise data warehouse in increments of 1, such as 100,101,102...) for the primary key in the company table within the data warehouse, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "COMPANY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Company Code",
            "dataType": "string",
            "description": "code in SAP used to organize accounting information related to business transactions, representing the smallest organizational unit for which a complete self-contained set of accounts can be drawn up for purposes of external reporting, financial statements, and profit and loss statements, stored as a VARCHAR",
            "sourceColumn": "Company Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Company Code Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP (such as US for Company Code 1000, Canada for 2000, Germany for 4016, France for 4013, Netherlands for 4100) used to organize accounting information related to business transactions, representing the smallest organizational unit for which a complete self-contained set of accounts can be drawn up for purposes of external reporting, financial statements, and profit and loss statements, stored as a nvarchar",
              "",
              "The Company Code is also the third level in the Rockwell Automation internal organization hierarchy in SAP, which ensures consistent standard financial reporting and has the structure:",
              "1) Operating Concern",
              "2) Controlling Area",
              "3) Company Code",
              "4) Business Area",
              "5) Cost Center\""
            ],
            "sourceColumn": "Company Code Description",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Company Country Code",
            "dataType": "string",
            "sourceColumn": "Company Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "List Price Currency Code",
            "dataType": "string",
            "sourceColumn": "List Price Currency Code",
            "encodingHint": "hash"
          },
          {
            "name": "Chart Of Accounts Code",
            "dataType": "string",
            "sourceColumn": "Chart Of Accounts Code",
            "encodingHint": "hash"
          },
          {
            "name": "Credit Control Area Code",
            "dataType": "string",
            "sourceColumn": "Credit Control Area Code",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Year Variant",
            "dataType": "string",
            "sourceColumn": "Fiscal Year Variant",
            "encodingHint": "hash"
          },
          {
            "name": "Company Code And Description",
            "dataType": "string",
            "description": [
              "\"concatenation of the Company Code in SAP and the associated Company Code Description (such as 1000 - Rockwell Automation, 2000 - Rockwell Canada, or 3014 - R.A. Columbia S.A.) used to organize accounting information related to business transactions, representing the smallest organizational unit for which a complete self-contained set of accounts can be drawn up for purposes of external reporting, financial statements, and profit and loss statements, stored as a nvarchar",
              "",
              "The Company Code is also the third level in the Rockwell Automation internal organization hierarchy in SAP, which ensures consistent standard financial reporting and has the structure:",
              "1) Operating Concern",
              "2) Controlling Area",
              "3) Company Code",
              "4) Business Area",
              "5) Cost Center\""
            ],
            "sourceColumn": "Company Code And Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_COMPANY_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_COMPANY_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_COMPANY_BusNm,{\"COMPANY_KEY\", \"Company Code\", \"Company Country Code\", \"List Price Currency Code\", \"Chart Of Accounts Code\", \"Credit Control Area Code\", \"Fiscal Year Variant\", \"Company Code Description\", \"Company Code And Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_COPA",
        "columns": [
          {
            "name": "COPA_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COPA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Copa Document ID",
            "dataType": "string",
            "sourceColumn": "Copa Document ID",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "   FIN_COPA_V_DIM_COPA = Source{[Schema=\"FIN_COPA\",Item=\"V_DIM_COPA_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_COPA_V_DIM_COPA,{\"COPA_KEY\", \"Copa Document ID\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_CRNCY",
        "columns": [
          {
            "name": "CRNCY_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated by the enterprise data warehouse in increments of 1, such as 100,101,102...) for the primary key in the currency table within the data warehouse, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "CRNCY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Currency Code",
            "dataType": "string",
            "description": "the category of currency exchange rates (such as M for monthly rate, which is the moving monthly average rate for the previous calendar month as recorded in Hyperion;  D for the daily rate;  P for the annual planning rate; …) as defined in SAP for the given record",
            "sourceColumn": "Currency Code",
            "encodingHint": "hash"
          },
          {
            "name": "Currency Name",
            "dataType": "string",
            "description": "The name of a global currency.",
            "sourceColumn": "Currency Name",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CRNCY = Source{[Schema=\"GLBL\",Item=\"V_DIM_CRNCY_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CRNCY,{\"CRNCY_KEY\", \"Currency Code\", \"Currency Name\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_CRNCY_CVRSN",
        "columns": [
          {
            "name": "CRNCY_CVRSN_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated by the enterprise data warehouse in increments of 1, such as 100,101,102...) for the primary key in the currency conversion table within the data warehouse, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "CRNCY_CVRSN_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "FROM_CRNCY_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated by the enterprise data warehouse in increments of 1, such as 100,101,102...) for the from currency foreign key in the currency conversion table, which links to the primary key in the currency table within the data warehouse, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "FROM_CRNCY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "TO_CRNCY_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated by the enterprise data warehouse in increments of 1, such as 100,101,102...) for the to currency foreign key in the currency conversion table, which links to the primary key in the currency table within the data warehouse, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "TO_CRNCY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "RATE_EFF_FROM_DTE_INT_KEY",
            "dataType": "int64",
            "description": "the date on which the currency exchange rate is effective (which may be a past, present, or future date), stored as a BigInt",
            "isHidden": true,
            "sourceColumn": "RATE_EFF_FROM_DTE_INT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "RATE_EFF_TO_DTE_INT_KEY",
            "dataType": "int64",
            "description": "the date on which the currency exchange rate is no longer effective (which may be a past, present, or future date), stored as a BigInt",
            "isHidden": true,
            "sourceColumn": "RATE_EFF_TO_DTE_INT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "EXCHG_RATE",
            "dataType": "double",
            "description": "the value to be used to convert the \"from currency\" to the \"to currency\" during the time period specified by the rate effective from and to date keys, also known as the exchange rate, stored as a decimal",
            "isHidden": true,
            "sourceColumn": "EXCHG_RATE",
            "encodingHint": "hash"
          },
          {
            "name": "Rate Type",
            "dataType": "string",
            "description": "the category of currency exchange rates (such as M for monthly rate, which is the moving monthly average rate for the previous calendar month as recorded in Hyperion;  D for the daily rate;  P for the annual planning rate; …) as defined in SAP for the given record, stored as a nvarchar",
            "sourceColumn": "RATE_TYPE",
            "encodingHint": "hash"
          },
          {
            "name": "Rate Effective From Date",
            "dataType": "dateTime",
            "sourceColumn": "RATE_EFF_FROM_DATE_DTE",
            "encodingHint": "hash"
          },
          {
            "name": "Rate Effective To Date",
            "dataType": "dateTime",
            "sourceColumn": "RATE_EFF_TO_DATE_DTE",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CRNCY_CVRSN = Source{[Schema=\"GLBL\",Item=\"V_DIM_CRNCY_CVRSN\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CRNCY_CVRSN,{\"CRNCY_CVRSN_KEY\", \"RATE_TYPE\", \"FROM_CRNCY_KEY\", \"TO_CRNCY_KEY\", \"RATE_EFF_FROM_DTE_INT_KEY\", \"RATE_EFF_TO_DTE_INT_KEY\", \"EXCHG_RATE\"}),",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(#\"Removed Other Columns\", \"RATE_EFF_FROM_DTE_INT_KEY\", \"RATE_EFF_FROM_DTE_INT_KEY - Copy\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Duplicated Column\",{{\"RATE_EFF_FROM_DTE_INT_KEY - Copy\", \"RATE_EFF_FROM_DATE_DTE\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"RATE_EFF_FROM_DATE_DTE\", type text}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Changed Type\",{{\"RATE_EFF_FROM_DATE_DTE\", type date}}),",
                "    #\"Duplicated Column1\" = Table.DuplicateColumn(#\"Changed Type1\", \"RATE_EFF_FROM_DTE_INT_KEY\", \"RATE_EFF_FROM_DTE_INT_KEY - Copy\"),",
                "    #\"Removed Other Columns1\" = Table.SelectColumns(#\"Duplicated Column1\",{\"CRNCY_CVRSN_KEY\", \"RATE_TYPE\", \"FROM_CRNCY_KEY\", \"TO_CRNCY_KEY\", \"RATE_EFF_FROM_DTE_INT_KEY\", \"RATE_EFF_TO_DTE_INT_KEY\", \"EXCHG_RATE\", \"RATE_EFF_FROM_DATE_DTE\"}),",
                "    #\"Duplicated Column2\" = Table.DuplicateColumn(#\"Removed Other Columns1\", \"RATE_EFF_TO_DTE_INT_KEY\", \"RATE_EFF_TO_DTE_INT_KEY - Copy\"),",
                "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Duplicated Column2\",{{\"RATE_EFF_TO_DTE_INT_KEY - Copy\", type text}}),",
                "    #\"Changed Type3\" = Table.TransformColumnTypes(#\"Changed Type2\",{{\"RATE_EFF_TO_DTE_INT_KEY - Copy\", type date}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type3\",{{\"RATE_EFF_TO_DTE_INT_KEY - Copy\", \"RATE_EFF_TO_DATE_DTE\"}})",
                "in",
                "    #\"Renamed Columns1\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_CRNCY_DCML_ADJMT",
        "isHidden": true,
        "columns": [
          {
            "name": "CRNCY_DCML_ADJMT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated by the enterprise data warehouse in increments of 1, such as 100,101,102...) for the primary key in the currency decimal adjustment table within the data warehouse, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "CRNCY_DCML_ADJMT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Controlling Area Currency Code",
            "dataType": "string",
            "description": "code for the currency (such as MYR for Malaysia ringgit or USD for United States dollars) in SAP, based on the controlling area, stored as a nvarchar",
            "sourceColumn": "Controlling Area Currency Code",
            "encodingHint": "hash"
          },
          {
            "name": "ISO Currency Name",
            "dataType": "string",
            "description": "the name of the currency associated with the given three-letter ISO Currency Code, stored as a nvarchar",
            "sourceColumn": "ISO Currency Name",
            "encodingHint": "hash"
          },
          {
            "name": "Decimal Places",
            "dataType": "int64",
            "description": "number of digits after the decimal point required for the given currency for display and transactions, stored as an integer",
            "sourceColumn": "Decimal Places",
            "encodingHint": "hash"
          },
          {
            "name": "Decimal Shift Correction Multiplier",
            "dataType": "double",
            "description": [
              "\"multiplication factor needed to calculate the true local currency value for a given value stored in a SAP table in a given ISO Currency Code, stored as a decimal",
              "",
              "true local currency value = value stored in SAP table * Decimal Shift Correction Multiplier",
              "",
              "SAP stores values in currency tables to 2 decimal places (data type = decimal(17,2), with up to 15 digits before the decimal and 2 after the decimal).  For currencies with a different number of decimal places, table TCURX specifies the actual number of decimal places.  Based on the information in this table, the SAP system shifts the decimal place for the data stored in tables and displays the true local currency.\""
            ],
            "sourceColumn": "Decimal Shift Correction Multiplier",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CRNCY_DCML_ADJMT = Source{[Schema=\"GLBL\",Item=\"V_DIM_CRNCY_DCML_ADJMT_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CRNCY_DCML_ADJMT,{\"CRNCY_DCML_ADJMT_KEY\", \"Controlling Area Currency Code\", \"ISO Currency Name\", \"Decimal Places\", \"Decimal Shift Correction Multiplier\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Hierarchy1"
          }
        ]
      },
      {
        "name": "DIM_CRNCY_TYPE",
        "columns": [
          {
            "name": "CRNCY_TYPE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated by the enterprise data warehouse in increments of 1, such as 100,101,102...) for the primary key in the Currency Type table within the data warehouse, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "CRNCY_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Currency Type Code",
            "dataType": "string",
            "description": "code in SAP for the type of currency used within RA00 (the common Controlling Area used globally at Rockwell Automation), which is always 10 (Company code currency), stored as a nvarchar",
            "sourceColumn": "Currency Type Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Currency Type Description",
            "dataType": "string",
            "description": "description associated with the code in SAP for the type of currency used within RA00 (the common Controlling Area used globally at Rockwell Automation), which is always \"Company code currency\", stored as a nvarchar",
            "sourceColumn": "Currency Type Description",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Currency Type Code and Description",
            "dataType": "string",
            "sourceColumn": "Currency Type Code and Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CRNCY_TYPE_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CRNCY_TYPE_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CRNCY_TYPE_BusNm,{\"CRNCY_TYPE_KEY\", \"Currency Type Code\", \"Currency Type Description\", \"Currency Type Code and Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Hierarchy1"
          }
        ]
      },
      {
        "name": "DIM_CUST_ACCT_ASGNMT_GRP",
        "columns": [
          {
            "name": "CUST_ACCT_ASGNMT_GRP_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated by the enterprise data warehouse in increments of 1, such as 100,101,102...) for the primary key in the Customer Account Assignment Group table within the data warehouse, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "CUST_ACCT_ASGNMT_GRP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Account Assignment Group",
            "dataType": "string",
            "description": [
              "classification (see examples below) to segregate accounts during the automatic determination of revenue in SAP, stored as a nvarchar",
              "",
              "01 = 3rd Party Vendor Revenue",
              "02 = Intercompany/Intracompany Revenue",
              "Z1 = 3rd Party Vendor Sales",
              "Z2 = 3rd Party Vendor Cost of Goods Sold (COGS)",
              "Z3 = Stock Transfer Order India AAG"
            ],
            "sourceColumn": "Customer Account Assignment Group",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Cust Acct Asgnmt Group Descr",
            "dataType": "string",
            "description": [
              "description associated with Customer Account Assignment Group codes (see examples below), which segregate accounts during the automatic determination of revenue in SAP, stored as a nvarchar",
              "",
              "02 = Intercompany/Intracompany Revenue",
              "Z1 = 3rd Party Vendor Sales",
              "Z2 = 3rd Party Vendor Cost of Goods Sold (COGS)",
              "Z3 = Stock Transfer Order India AAG"
            ],
            "sourceColumn": "Cust Acct Asgnmt Group Descr",
            "encodingHint": "hash"
          },
          {
            "name": "Cust Account Asgnmt Group Code and Desc",
            "dataType": "string",
            "description": "concatenation of the Customer Account Assignment Group Code in SAP and the description associated with that code (such as 01 - 3rd Party Vendor, 02 - Intercompany/Intracompany Revenue, and Z1 - 3rd Party Vendor Sales), stored as a VARCHAR",
            "sourceColumn": "Cust Account Asgnmt Group Code and Desc",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CUST_ACCT_ASGNMT_GRP = Source{[Schema=\"GLBL\",Item=\"V_DIM_CUST_ACCT_ASGNMT_GRP_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CUST_ACCT_ASGNMT_GRP,{\"CUST_ACCT_ASGNMT_GRP_KEY\", \"Customer Account Assignment Group\", \"Cust Acct Asgnmt Group Descr\", \"Cust Account Asgnmt Group Code and Desc\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_FUNCL_AREA",
        "columns": [
          {
            "name": "FUNCL_AREA_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "FUNCL_AREA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Functional Area Code",
            "dataType": "string",
            "description": [
              "code in SAP that represents a line item on the income statement (such as 1000 for Sales-3rd Party Sales, 2000 for Standard Cost of Sales, 2100 for Inventory Adjustment-Scrap Sales, 5000 for Field Sales, 6005 for Marketing-Commercial, and 7000 for Admin), stored as a nvarchar",
              "",
              "All general ledger accounts in SAP are assigned to a Functional Area, which is then associated with an HFM account."
            ],
            "sourceColumn": "Functional Area Code",
            "encodingHint": "hash"
          },
          {
            "name": "Functional Area Description",
            "dataType": "string",
            "description": [
              "description associated with the code in SAP that represents a line item on the income statement (such as 1000 for Sales-3rd Party Sales, 2000 for Standard Cost of Sales, 2100 for Inventory Adjustment-Scrap Sales, 5000 for Field Sales, 6005 for Marketing-Commercial, and 7000 for Admin), stored as a nvarchar",
              "",
              "All general ledger accounts in SAP are assigned to a Functional Area, which is then associated with an HFM account."
            ],
            "sourceColumn": "Functional Area Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_FUNCL_AREA = Source{[Schema=\"GLBL\",Item=\"V_DIM_FUNCL_AREA_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_FUNCL_AREA,{\"FUNCL_AREA_KEY\", \"Functional Area Code\", \"Functional Area Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_INCOTERMS",
        "columns": [
          {
            "name": "INCOTERMS_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "INCOTERMS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Incoterms Code",
            "dataType": "string",
            "description": "code for an International Commercial Term (such as FOB for Free On Board, FCA for Free Carrier, CFR for Cost and Freight, and CPT for Carriage Paid To), which is one of a series of pre-defined commercial terms published by the International Chamber of Commerce (ICC) and specifies the obligations, costs, and risks involved in the delivery of goods from the seller to the buyer, stored as a nvarchar",
            "sourceColumn": "Incoterms Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Incoterms Description",
            "dataType": "string",
            "description": "description associated with a code for an International Commercial Term (such as Free On Board for FOB, Free Carrier for FCA, Cost and Freight for CFR, and Carriage Paid To for CPT), which is one of a series of pre-defined commercial terms published by the International Chamber of Commerce (ICC) and specifies the obligations, costs, and risks involved in the delivery of goods from the seller to the buyer, stored as a nvarchar",
            "sourceColumn": "Incoterms Description",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Incoterms Code and Description",
            "dataType": "string",
            "description": "concatenation of the Incoterms Code and the Incoterms Description associated with that code (such as CFR - Costs and freight, DAF - Delivered at frontier and FOB - Free on board), stored as a nvarchar",
            "sourceColumn": "Incoterms Code and Description",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_INCOTERMS = Source{[Schema=\"GLBL\",Item=\"V_DIM_INCOTERMS_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_INCOTERMS,{\"INCOTERMS_KEY\", \"Incoterms Code\", \"Incoterms Description\", \"Incoterms Code and Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_MATL",
        "columns": [
          {
            "name": "MATL_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "MATL_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SERIES",
            "dataType": "string",
            "description": [
              "alphabetical designator on the product, used to indicate significant change(s) to the product (typically used for hardware products), stored as a nvarchar",
              "",
              "The Series enables plant services and repair manufacturing to idenitify the part accurately.",
              "",
              "When a Catalog Identifier is specified on an order, the current Series of the product is the one that SAP will provide as a default."
            ],
            "sourceColumn": "Series",
            "encodingHint": "hash"
          },
          {
            "name": "Material Identifier",
            "dataType": "string",
            "description": "identifier (such as 1768-ENBT A for a CompactLogix L4X EtherNet/IP Module, series A) from the material master data in SAP for the product (which could be a finished good, purchased item, sub-assembly, cost item, service item, ...), stored as a nvarchar",
            "sourceColumn": "Material Identifier",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Business Unit Code",
            "dataType": "string",
            "description": "Retrieving data. Wait a few seconds and try to cut or copy again.",
            "sourceColumn": "Business Unit Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Catalog Identifier",
            "dataType": "string",
            "description": "Retrieving data. Wait a few seconds and try to cut or copy again.",
            "sourceColumn": "Catalog Identifier",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Product Hierarchy Code",
            "dataType": "string",
            "description": [
              "the code for the entire Rockwell Automation product hierarchy node (see example below), stored as a nvarchar",
              "",
              "For example:",
              "SFC = Safety Components (business unit) ",
              "SFCA051 = Safety non contact switches (product category)",
              "SFCA0513A202 = Guardshield light curtains (product line)",
              "SFCA0513A2024A1278 = 440L-Guardshield point of operation (product group - also known as the Product Hierarchy)"
            ],
            "sourceColumn": "Product Hierarchy Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Product Lifecycle Status",
            "dataType": "string",
            "description": "short description of the current lifecycle status of the specified product (such as Active for the most current product offering within a category, Active Mature for a product that is fully supported but a newer product or family exists, End of Life for a product with an announced discontinued date, Discontinued for a product that is no longer manufactured or procured, Not Applicable - Service, and Invalid), stored as a nvarchar",
            "sourceColumn": "Product Lifecycle Status",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Material Base Unit Of Measure",
            "dataType": "string",
            "description": "the unit of measure used for calculating the costs of the given material, which may differ from the stock or sale unit of measure (for example, the base unit of measure may be \"each\", but may be sold only by the dozen), stored as a nvarchar",
            "sourceColumn": "Material Base Unit Of Measure",
            "encodingHint": "hash"
          },
          {
            "name": "Material UoM Multiplier Denominator",
            "dataType": "int64",
            "description": [
              "denominator of the ratio used to convert a quantity related to the given purchase order (or stock transport order) line item from the PO Quantity Unit Of Measure to the Material Base Unit Of Measure, stored as a integer",
              "",
              "Quantity In Material Base Unit Of Measure = Quantity In PO Quantity Unit Of Measure * (Unit Of Measure Multiplier Numerator / Unit Of Measure Multiplier Denominator)",
              "",
              "For example:",
              "A material is purchased by weight, but managed by Rockwell Automation by the piece.",
              "5kg = 3 pieces",
              "Quantity on PO = 10",
              "PO Quantity Unit Of Measure  = kg",
              "Material Base Unit Of Measure = piece",
              "Unit Of Measure Multiplier Numerator = 3",
              "Unit Of Measure Multiplier Denominator = 5",
              "Quantity In Material Base Unit Of Measure = 10kg * (3/5) = 6 pieces"
            ],
            "sourceColumn": "Material UoM Multiplier Denominator",
            "encodingHint": "hash"
          },
          {
            "name": "Material UoM Multiplier Numerator",
            "dataType": "int64",
            "description": [
              "numerator of the ratio used to convert a quantity related to the given purchase order (or stock transport order) line item from the PO Quantity Unit Of Measure to the Material Base Unit Of Measure, stored as a integer",
              "",
              "Quantity In Material Base Unit Of Measure = Quantity In PO Quantity Unit Of Measure * (Unit Of Measure Multiplier Numerator / Unit Of Measure Multiplier Denominator)",
              "",
              "For example:",
              "A material is purchased by weight, but managed by Rockwell Automation by the piece.",
              "5kg = 3 pieces",
              "Quantity on PO = 10",
              "PO Quantity Unit Of Measure  = kg",
              "Material Base Unit Of Measure = piece",
              "Unit Of Measure Multiplier Numerator = 3",
              "Unit Of Measure Multiplier Denominator = 5",
              "Quantity In Material Base Unit Of Measure = 10kg * (3/5) = 6 pieces"
            ],
            "sourceColumn": "Material UoM Multiplier Numerator",
            "encodingHint": "hash"
          },
          {
            "name": "Bulletin Number",
            "dataType": "string",
            "description": "Retrieving data. Wait a few seconds and try to cut or copy again.",
            "sourceColumn": "Bulletin Number",
            "encodingHint": "hash"
          },
          {
            "name": "Configurable Material Indicator",
            "dataType": "string",
            "description": "Retrieving data. Wait a few seconds and try to cut or copy again.",
            "sourceColumn": "Configurable Material Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Commodity Code",
            "dataType": "string",
            "description": "Retrieving data. Wait a few seconds and try to cut or copy again.",
            "sourceColumn": "Commodity Code",
            "encodingHint": "hash"
          },
          {
            "name": "Cross-Plant Config Material ID",
            "dataType": "string",
            "description": "Retrieving data. Wait a few seconds and try to cut or copy again.",
            "sourceColumn": "Cross-Plant Config Material ID",
            "encodingHint": "hash"
          },
          {
            "name": "Material Dimension Unit Of Measure",
            "dataType": "string",
            "description": "the unit of measure (such as CM for centimeters) for the Material Length, Width, and Height dimensions of the given material, stored as a string",
            "sourceColumn": "Material Dimension Unit Of Measure",
            "encodingHint": "hash"
          },
          {
            "name": "Material Document Identifier",
            "dataType": "string",
            "description": "identifier in SAP (such as 10000325365) for the document that stores the drawing of the given material, stored as a nvarchar",
            "sourceColumn": "Material Document Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Material Document Type Code",
            "dataType": "string",
            "description": "code in SAP for the type of business transaction related to the given material (such as DRW for an engineering/design drawing; FRM for a manufacturing info form​ that lists all new materials, with attributes, that are to be extended to one or more plant​s; PRJ for a project document; PUB for a publication; or SWR for related software), used not only to classify the associated documents but also to control which material master record attributes must be specified, stored as a nvarchar",
            "sourceColumn": "Material Document Type Code",
            "encodingHint": "hash"
          },
          {
            "name": "Material Document Version",
            "dataType": "string",
            "description": "number in SAP (such as 45) for the version of the drawing for the given material, used to track changes, stored as a nvarchar",
            "sourceColumn": "Material Document Version",
            "encodingHint": "hash"
          },
          {
            "name": "Material Gross Weight",
            "dataType": "double",
            "description": "sum of the weight of the material (the Net Weight) and its packaging, stored as a decimal in the Material Weight Unit Of Measure",
            "sourceColumn": "Material Gross Weight",
            "encodingHint": "hash"
          },
          {
            "name": "Material Height Dimension",
            "dataType": "double",
            "description": "the height dimension measurement of the material, without packaging, stored as a decimal in the Material Dimension Unit Of Measure",
            "sourceColumn": "Material Height Dimension",
            "encodingHint": "hash"
          },
          {
            "name": "Material Length Dimension",
            "dataType": "double",
            "description": "the length dimension measurement of the material, without packaging, stored as a decimal in the Material Dimension Unit Of Measure",
            "sourceColumn": "Material Length Dimension",
            "encodingHint": "hash"
          },
          {
            "name": "Repair Lifecycle Description",
            "dataType": "string",
            "description": [
              "short description of the repair lifecycle status (see list below) of the specified product, stored as a nvarchar",
              "",
              "CURRENT = a returned item that is a Rockwell Automation product that is current series and still under warranty",
              "",
              "LEGACY = a returned item that is a Rockwell Automation product that is not current series, but still under warranty",
              "",
              "CONSUMABLE = a returned item that is a Rockwell Automation product that is not economically feasible to repair"
            ],
            "sourceColumn": "Repair Lifecycle Description",
            "encodingHint": "hash"
          },
          {
            "name": "Material Description",
            "dataType": "string",
            "description": "description from the material master data in SAP associated with the given product (such as \"CompactLogix L4X EtherNet/IP Module, series A\" for Material Identifier 1768-ENBT A), stored as a string",
            "sourceColumn": "Material Description",
            "encodingHint": "hash"
          },
          {
            "name": "Material General Item Cat Grp",
            "dataType": "string",
            "description": [
              "classification of materials (see examples below) used during sales document processing in SAP to control internal/external sales, drop ship, etc, stored as a nvarchar",
              "",
              "ZPLS = RA product",
              "Z3RP = third-party cross-dock product",
              "Z3RM = third-party direct ship product"
            ],
            "sourceColumn": "Material General Item Cat Grp",
            "encodingHint": "hash"
          },
          {
            "name": "Material Group",
            "dataType": "string",
            "description": "category defined by Rockwell Automation (such as 01MKE for Material Variant or 121010 for Marketing & Advertising) that identifies the group or role that will process the material master data, stored as a nvarchar",
            "sourceColumn": "Material Group",
            "encodingHint": "hash"
          },
          {
            "name": "Material Master Record Created Date",
            "dataType": "dateTime",
            "description": "date on which the given material master record was created in SAP, stored as a timestamp in yyyy-MM-dd HH:mm:ss format, where HH:mm:ss are all zeroes",
            "sourceColumn": "Material Master Record Created Date",
            "encodingHint": "hash"
          },
          {
            "name": "Material Type Code",
            "dataType": "string",
            "description": "code that represents the type of the material in the material master data (such as ZCFG for a material that is configured at the time of sale, or ZREP for a repair, where the repair product identifier is derived based on the catalog number for the product as sold), stored as a nvarchar",
            "sourceColumn": "Material Type Code",
            "encodingHint": "hash"
          },
          {
            "name": "Material Net Weight",
            "dataType": "double",
            "description": "the weight of the material (alone, without packaging), stored as a decimal in the Material Weight Unit Of Measure",
            "sourceColumn": "Material Net Weight",
            "encodingHint": "hash"
          },
          {
            "name": "PO Quantity UOM",
            "dataType": "string",
            "description": [
              "the unit of measure used to specify the quantity on a purchase order (or stock transport order) line item when procuring the given material (such as EA for each), stored as a nvarchar",
              "",
              "The PO Quantity UOM and the PO Price Quantity UOM may be the same, or different."
            ],
            "sourceColumn": "PO Quantity UOM",
            "encodingHint": "hash"
          },
          {
            "name": "Product Category",
            "dataType": "string",
            "description": "the second level in the Rockwell Automation product hierarchy and a logical representation of product offerings within a business unit (such as ACSA173 for Channel Software, ACSA172 for Peripherals, ACSA1723A682 for Hardware, and ACSA1723A6824A3261 for Cables & Adapters), stored as an nvarchar",
            "sourceColumn": "Product Category",
            "encodingHint": "hash"
          },
          {
            "name": "Product Group",
            "dataType": "string",
            "description": [
              "the fourth and lowest level in the Rockwell Automation product hierarchy, below the Product Line, stored as an alphanumeric string",
              "",
              "For example:",
              "SFC = Safety Components (business unit) ",
              "SFCA051 = Safety non contact switches (product category)",
              "SFCA0513A202 = Guardshield light curtains (product line)",
              "SFCA0513A2024A1278 = 440L-Guardshield point of operation (product group - also known as the Product Hierarchy)"
            ],
            "sourceColumn": "Product Group",
            "encodingHint": "hash"
          },
          {
            "name": "Prod Hier Code And Desc",
            "dataType": "string",
            "description": [
              "concatenation of the code for the entire Rockwell Automation product hierarchy node and the description associated with that code (such as ACSA1793A7064A3362 RA Toolkits, CCTA1003A4724A5022 RAPID Line, CCTA1043B1094A5147 RASwin Subscription, ",
              "FLDA1243B098 RA Technical Migrations, or PLSA201 RAAMP), stored as a nvarchar"
            ],
            "sourceColumn": "Prod Hier Code And Desc",
            "encodingHint": "hash"
          },
          {
            "name": "Product Line",
            "dataType": "string",
            "description": "the third level in the Rockwell Automation product hierarchy (such as ACSA1733A684 for Toolkits), below the Product Category, stored as an alphanumeric string",
            "sourceColumn": "Product Line",
            "encodingHint": "hash"
          },
          {
            "name": "Serial Number",
            "dataType": "string",
            "description": [
              "the globally unique number (such as 51318807) for a product (finished good) that identifies its specific equipment master record in SAP, stored as a string",
              "",
              "Serial numbers are assigned by SAP to assemble-to-order (ATO) and configure-to-order (CTO) products during the release of a production order based on the serial number profile of the material master being produced.  (In the future, when scanning is implemented in SAP plants, serial numbers will be captured for all outbound deliveries.)  A serial number may contain numbers, letters, check digits, and noise characters, and links the production order to the sales order.  Serial numbers are used to track goods movements, sales and shipments to Sold To and Ship To Customers, warranties, returns, and repairs."
            ],
            "sourceColumn": "Serial Number",
            "encodingHint": "hash"
          },
          {
            "name": "Material Transportation Group Code",
            "dataType": "string",
            "description": [
              "code in SAP for the group of materials to be delivered using the same route and transportation (such as Z001 for RA Transport Goods or Z002 for Dangerous Goods), stored as a nvarchar",
              "",
              "The Transportation Group Code is used to schedule routes automatically during sales order and delivery note processing, as well as for stock transport orders."
            ],
            "sourceColumn": "Material Transportation Group Code",
            "encodingHint": "hash"
          },
          {
            "name": "Material Volume Dimension",
            "dataType": "double",
            "description": [
              "the product of the length, width, and height dimensions of the material, without packaging, stored as a decimal in the Material Volume Unit Of Measure",
              "",
              "Material Volume = Material Length * Material Width * Material Height"
            ],
            "sourceColumn": "Material Volume Dimension",
            "encodingHint": "hash"
          },
          {
            "name": "Material Volume Unit Of Measure",
            "dataType": "string",
            "description": "the unit of measure (such as CCM for cubic centimeters) for the Material Volume of the given material, stored as a nvarchar",
            "sourceColumn": "Material Volume Unit Of Measure",
            "encodingHint": "hash"
          },
          {
            "name": "Material Width Dimension",
            "dataType": "double",
            "description": "the width dimension measurement of the material, without packaging, stored as a decimal in the Material Dimension Unit Of Measure",
            "sourceColumn": "Material Width Dimension",
            "encodingHint": "hash"
          },
          {
            "name": "Material Weight Unit Of Measure",
            "dataType": "string",
            "description": "the unit of measure (such as KG for kilograms) for the Material Gross and Net Weights of the given material, stored as a nvarchar",
            "sourceColumn": "Material Weight Unit Of Measure",
            "encodingHint": "hash"
          },
          {
            "name": "Material Identifier and Description ",
            "dataType": "string",
            "description": "concatenation of the material identifier in SAP and the associated material description (such as 1768-ENBT A - CompactLogix L4X EtherNet/IP Module, series A), stored as a nvarchar",
            "sourceColumn": "Material Identifier and Description ",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_MATL_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_MATL_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_MATL_BusNm,{\"MATL_KEY\", \"Material Identifier\", \"Material Base Unit Of Measure\", \"Material UoM Multiplier Denominator\", \"Material UoM Multiplier Numerator\", \"Bulletin Number\", \"Business Unit Code\", \"Catalog Identifier\", \"Configurable Material Indicator\", \"Commodity Code\", \"Cross-Plant Config Material ID\", \"Material Dimension Unit Of Measure\", \"Material Document Identifier\", \"Material Document Type Code\", \"Material Document Version\", \"Material Gross Weight\", \"Material Height Dimension\", \"Material Length Dimension\", \"Repair Lifecycle Description\", \"Material Description\", \"Material General Item Cat Grp\", \"Material Group\", \"Material Master Record Created Date\", \"Material Type Code\", \"Material Net Weight\", \"PO Quantity UOM\", \"Product Category\", \"Product Group\", \"Prod Hier Code And Desc\", \"Product Hierarchy Code\", \"Product Lifecycle Status\", \"Product Line\", \"Series\", \"Serial Number\", \"Material Transportation Group Code\", \"Material Volume Dimension\", \"Material Volume Unit Of Measure\", \"Material Width Dimension\", \"Material Weight Unit Of Measure\", \"Material Identifier and Description \"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_MATL_SLS",
        "columns": [
          {
            "name": "MATL_SLS_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "MATL_SLS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Price Group Code",
            "dataType": "string",
            "description": [
              "the fourth level in the Rockwell Automation material pricing hierarchy, which represents the amount of a discount off of list price to be applied to a specific group of Catalog Identifiers (such as 194, which represents \"\"700-HA: Tube Base\"\") for aggressive negotiations, stored as a nvarchar",
              "",
              "The pricing hierarchy ensures consistent standard pricing and discount levels in the marketplace for similar products or services, and has the structure:",
              "1) Technology Segment",
              "2) Discount Schedule",
              "3) Price Family",
              "4) Price Group Code",
              "5) Catalog Number"
            ],
            "sourceColumn": "Price Group Code",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Organization Code",
            "dataType": "string",
            "description": "a company code in SAP (four digits stored as text, for example,  US = 1000, Canada = 2000, Germany = 4016, France = 4013, Netherlands = 4100) representing the smallest organizational unit (\"sales org\") for which a complete self-contained set of accounts can be drawn up for purposes of external reporting, financial statements, and profit and loss statements, stored as a nvarchar",
            "sourceColumn": "Sales Organization Code",
            "encodingHint": "hash"
          },
          {
            "name": "Distribution Channel Code",
            "dataType": "string",
            "description": "code to identify the type of sale within a sales organization in SAP (such as 01 for Rockwell D/Channel, meaning direct sales), stored as a nvarchar",
            "sourceColumn": "Distribution Channel Code",
            "encodingHint": "hash"
          },
          {
            "name": "Material Identifier",
            "dataType": "string",
            "description": "identifier (such as 1768-ENBT A for a CompactLogix L4X EtherNet/IP Module, series A) from the material master data in SAP for the product (which could be a finished good, purchased item, sub-assembly, cost item, service item, ...), stored as a nvarchar",
            "sourceColumn": "Material Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Stock Status Code",
            "dataType": "string",
            "description": [
              "code in SAP that identifies whether the given material is stocked (01, meaning stored in inventory and used as needed) or not (02, meaning ordered as needed to fulfill defined demand), stored as a nvarchar",
              "",
              "Known as Volume Rebate Group in SAP, this field is being used for a different purpose at Rockwell Automation."
            ],
            "sourceColumn": "Stock Status Code",
            "encodingHint": "hash"
          },
          {
            "name": "Prod Allowed for Pre-Auth Rtn Ind",
            "dataType": "string",
            "description": [
              "indicator in SAP for whether Rockwell Automation accepts the given product as an \"\"everyday return\"\" within 90 days of the original Rockwell Automation ship date (X if yes, or blank if not), stored as a nvarchar",
              "",
              "If pre-authorized returns are allowed, the customer must also provide the invoice, and typically a restocking fee of 10% or 25% (as defined by policy) will be charged."
            ],
            "sourceColumn": "Prod Allowed for Pre-Auth Rtn Ind",
            "encodingHint": "hash"
          },
          {
            "name": "Prod Allowed for Return Ind",
            "dataType": "string",
            "description": "indicator in SAP for whether Rockwell Automation accepts the given product to be returned by distributors in the given sales organization per the Rockwell Automation scheduled return policy (X if accepted, or blank if not), stored as a nvarchar",
            "sourceColumn": "Prod Allowed for Return Ind",
            "encodingHint": "hash"
          },
          {
            "name": "Product Brand Code",
            "dataType": "string",
            "description": "code in SAP that identifies the marketing brand within Rockwell Automation (such as 001 for Allen-Bradley, or 002 for Rockwell Software, or 013 for Sprecher+Schuh) for the given product and sales organization, stored as a nvarchar",
            "sourceColumn": "Product Brand Code",
            "encodingHint": "hash"
          },
          {
            "name": "Published Product Indicator",
            "dataType": "string",
            "description": "indicator for whether the given product is included in the Rockwell Automation product catalog and available for ordering through the rockwellautomation.com web site, portals, Sales, Customer Care, or SSB (X if published, blank if not), stored as a nvarchar",
            "sourceColumn": "Published Product Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Product Current Series Indicator",
            "dataType": "string",
            "description": [
              "indicator (X if yes, or blank if no) for whether the series of the given material is the current series of the product to be sold in the given sales organization, stored as a nvarchar",
              "",
              "When a Catalog Identifier is specified on an order, SAP populates the current Series of the product as a default.",
              "",
              "The series identifies changes to a product through its life cycle, and the Rockwell Automation sales organizations also use it to ensure correct usage and consumption of the product."
            ],
            "sourceColumn": "Product Current Series Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Product Dir Ship Deliv Plant Code",
            "dataType": "string",
            "description": "code in SAP for the plant (4 digits stored as text, such as 1020 for Twinsburg, 1090 for the Champaign Distribution Center, 4000 for the Central European Distribution Center, or 4080 for the EMEA main service hub) from which the given material will be shipped directly to the customer, if the given product is configured in the material master data for direct shipment, stored as a nvarchar",
            "sourceColumn": "Product Dir Ship Deliv Plant Code",
            "encodingHint": "hash"
          },
          {
            "name": "Product Direct Shipment Indicator",
            "dataType": "string",
            "description": [
              "indicator in SAP for whether the given product will be shipped from the delivering plant to the customer directly upon sales order entry in the given sales organization (X if yes, or blank if not), stored as a nvarchar",
              "",
              "When shipping to a customer directly, the sales order will be routed for fulfillment to the delivering plant based on the sales organization responsible for the order."
            ],
            "sourceColumn": "Product Direct Shipment Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Discount Schedule",
            "dataType": "string",
            "description": [
              "the second level in the Rockwell Automation material pricing hierarchy, which is a way of grouping materials to which you want to apply the same conditions for pricing (such as B5 for Global Logic Product , which is part of the ICB Technology Segment), for the given material, stored as a nvarchar",
              "",
              "If a special pricing agreement does not exist between Rockwell Automation and the customer, Rockwell Automation applies a Standard Book Discount percentage based on the Sales Organization and Customer Price Group combination (which identifies the Discount Schedule to apply).",
              "",
              "The pricing hierarchy ensures consistent standard pricing and discount levels in the marketplace for similar products or services, and has the structure:",
              "1) Technology Segment",
              "2) Discount Schedule",
              "3) Price Family",
              "4) Price Group Code",
              "5) Catalog Number"
            ],
            "sourceColumn": "Discount Schedule",
            "encodingHint": "hash"
          },
          {
            "name": "Delivering Plant Code",
            "dataType": "string",
            "description": [
              "code in SAP for the plant (4 digits stored as text, such as 1020 for Twinsburg, 1090 for the Champaign Distribution Center, 4000 for the Central European Distribution Center, and 4080 for the EMEA main service hub) at which the specified material is produced, or goods and services are provided, stored as a nvarchar",
              "This plant is also known as the \"\"delivering\"\" or \"\"sending\"\" plant.",
              "",
              "The Plant Code is needed to calculate landed costs."
            ],
            "sourceColumn": "Delivering Plant Code",
            "encodingHint": "hash"
          },
          {
            "name": "Product Deliv Qty Rndg Val",
            "dataType": "double",
            "description": [
              "number of units, or multiples thereof, required of the given product on a sales order in the given sales organization, stored as a decimal in the sales unit of measure",
              "",
              "For example, if someone enters 1800.00 as the Sales Order Line Item Quantity in the Sales Unit Of Measure, and the Product Delivery Quantity Rounding Value is 1000.00, then SAP displays a message to indicate that only multiples of the Product Delivery Quantity Rounding Value are allowed."
            ],
            "sourceColumn": "Product Deliv Qty Rndg Val",
            "encodingHint": "hash"
          },
          {
            "name": "Distribution Channel Status Code",
            "dataType": "string",
            "description": [
              "code in SAP (see examples below) that describes whether or how the given product may be used for a sale within the given sales organization, stored as a nvarchar",
              "",
              "NA = Not Applicable",
              "Z2 = Pricing Not Complete (not yet available for sale)",
              "Z5 = Memo/MFG Hold (not available for sale)",
              "Z6 = Open for Order Entry (available for sale)",
              "Z7 = Under Development (not yet available for sale)",
              "Z8 = Obsolete (no longer available for sale)",
              "ZE = Discnt w/o Replace (available for sale at a discount, and no replacement product identified)",
              "ZG = Run Out (available for sale until stock is no longer available, and no more units will be manufactured)",
              "ZJ = Duplicate-Do Not Use",
              "ZK =  Discnt w/Manual Rplc (sell at a discount, with replacement product identified)",
              "ZM = Material Extension (not yet available for sale)",
              "ZN = End of Life (available for sale, but stock may be limited because product life cycle nearing end)",
              "ZR = Prd Mgr Restriction (not available for sale per Product Manager)",
              "ZX = Prd Compliance Hold (not available for sale)"
            ],
            "sourceColumn": "Distribution Channel Status Code",
            "encodingHint": "hash"
          },
          {
            "name": "Dist Channel Status Eff From Date",
            "dataType": "dateTime",
            "description": [
              "the date on which the given Distribution Channel Status became effective, stored as a DATETIME in yyyy-MM-dd HH:mm:ss format, where HH:mm:ss are all zeroes",
              ""
            ],
            "sourceColumn": "Dist Channel Status Eff From Date",
            "encodingHint": "hash"
          },
          {
            "name": "Product Expected Delivering Plant Code",
            "dataType": "string",
            "description": [
              "code in SAP for the plant (4 digits stored as text, such as 1020 for Twinsburg, 1090 for the Champaign Distribution Center, 4000 for the Central European Distribution Center, or 4080 for the EMEA main service hub) from which the given product will actually be shipped to the customer, based on the sales organization responsible for the sales order, stored as a nvarchar",
              "",
              "When a Catalog Identifier is specified on an order, SAP populates the Product Delivering Plant Code as a default, but may be overridden by the Product Expected Delivering Plant Code."
            ],
            "sourceColumn": "Product Expected Delivering Plant Code",
            "encodingHint": "hash"
          },
          {
            "name": "Harmonized Tariff Schedule 8D Code",
            "dataType": "string",
            "description": "the first eight digits (such as 8536.50.40 for motor starters) of the Harmonized Tariff Schedule Code ten-digit code (such as 8536.50.4000 for motor starters) from the Harmonized Tariff Schedule of the United States Annotated (HTSA) that classifies the given material for import to the United States and is used to determine tariffs and for statistical reporting, stored as a nvarchar without the period (\".\") separators shown in the HTSA (for example, 85365040 for motor starters)",
            "sourceColumn": "Harmonized Tariff Schedule 8D Code",
            "encodingHint": "hash"
          },
          {
            "name": "Harmonized Tariff Schedule Code",
            "dataType": "string",
            "description": "ten-digit code (such as 8536.50.4000 for motor starters) from the Harmonized Tariff Schedule of the United States Annotated (HTSA) that classifies the given material for import to the United States and is used to determine tariffs and for statistical reporting, stored as a nvarchar without the period (\".\") separators shown in the HTSA (for example, 8536504000 for motor starters)",
            "sourceColumn": "Harmonized Tariff Schedule Code",
            "encodingHint": "hash"
          },
          {
            "name": "Product Minimum Delivery Quantity",
            "dataType": "double",
            "description": "minimum number of units required of the given product that can be delivered to a customer in the given sales organization, stored as a decimal in the sales unit of measure",
            "sourceColumn": "Product Minimum Delivery Quantity",
            "encodingHint": "hash"
          },
          {
            "name": "Product Minimum Order Quantity",
            "dataType": "double",
            "description": "minimum number of units required of the given product on a sales order in the given sales organization, stored as a decimal in the sales unit of measure",
            "sourceColumn": "Product Minimum Order Quantity",
            "encodingHint": "hash"
          },
          {
            "name": "Price Family Code",
            "dataType": "string",
            "description": [
              "the third level in the Rockwell Automation material pricing hierarchy, which represents a group of Price Group Codes (such as A28, which represents \"\"GP Ice Cube Relays\"\") for less aggressive negotiations, for the given material, stored as a nvarchar",
              "",
              "The pricing hierarchy ensures consistent standard pricing and discount levels in the marketplace for similar products or services, and has the structure:",
              "1) Technology Segment",
              "2) Discount Schedule",
              "3) Price Family",
              "4) Price Group Code",
              "5) Catalog Number"
            ],
            "sourceColumn": "Price Family Code",
            "encodingHint": "hash"
          },
          {
            "name": "Preferred Product Indicator ",
            "dataType": "string",
            "description": "indicator for whether the given product is available for shipment quickly (X if available without wait time, or blank if not), stored as a nvarchar",
            "sourceColumn": "Preferred Product Indicator ",
            "encodingHint": "hash"
          },
          {
            "name": "Product Available Date",
            "dataType": "dateTime",
            "description": [
              "the date (which may be a past, present, or future date) on which the given product became or will first become available for sale to customers, stored as a DateTime in yyyy-MM-dd HH:mm:ss format, where HH:mm:ss are all zeroes",
              "",
              "The Product Life Cycle Status of a product must be Active before it can become available in stock (that is, the Product Active Date must be the same as or earlier than the Product Available Date)."
            ],
            "sourceColumn": "Product Available Date",
            "encodingHint": "hash"
          },
          {
            "name": "Product Country Of Origin Code",
            "dataType": "string",
            "description": "code in SAP for the country in which the given material was originally produced or manufactured (such as US for the United States, CA for Canada, or CN for China), as documented by the Global Trade Compliance team in the material master data for the given Rockwell Automation sales organization that will sell the product, stored as a two-character string",
            "sourceColumn": "Product Country Of Origin Code",
            "encodingHint": "hash"
          },
          {
            "name": "Published Product Lead Time Days",
            "dataType": "int64",
            "description": "number of calendar days from the date on which a sales order line item for the given product is created to the date on which the product is expected to be shipped, as it appears in the Rockwell Automation catalog, stored as an integer",
            "sourceColumn": "Published Product Lead Time Days",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Unit Of Measure",
            "dataType": "string",
            "description": [
              "the unit of measure used when selling the product, which may differ from the base unit of measure (for example, the base unit of measure may be EA for \"\"each\"\", but may be sold only by the dozen), stored as a nvarchar",
              "",
              "Known as VRKME in SAP"
            ],
            "sourceColumn": "Sales Unit Of Measure",
            "encodingHint": "hash"
          },
          {
            "name": "Technology Segment",
            "dataType": "string",
            "description": [
              "the top level in the Rockwell Automation material pricing hierarchy, which represents the key organizations within Rockwell Automation responsible for products (such as ICB for the Industrial Components Business) and is used for channel management reporting, stored as a string",
              "",
              "The pricing hierarchy ensures consistent standard pricing and discount levels in the marketplace for similar products or services, and has the structure:",
              "1) Technology Segment",
              "2) Discount Schedule",
              "3) Price Family",
              "4) Price Group Code",
              "5) Catalog Number"
            ],
            "sourceColumn": "Technology Segment",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_MATL_SLS = Source{[Schema=\"GLBL\",Item=\"V_DIM_MATL_SLS_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_MATL_SLS,{\"MATL_SLS_KEY\", \"Sales Organization Code\", \"Distribution Channel Code\", \"Material Identifier\", \"Stock Status Code\", \"Prod Allowed for Pre-Auth Rtn Ind\", \"Prod Allowed for Return Ind\", \"Product Brand Code\", \"Published Product Indicator\", \"Product Current Series Indicator\", \"Product Dir Ship Deliv Plant Code\", \"Product Direct Shipment Indicator\", \"Discount Schedule\", \"Delivering Plant Code\", \"Product Deliv Qty Rndg Val\", \"Distribution Channel Status Code\", \"Dist Channel Status Eff From Date\", \"Product Expected Delivering Plant Code\", \"Harmonized Tariff Schedule 8D Code\", \"Harmonized Tariff Schedule Code\", \"Product Minimum Delivery Quantity\", \"Product Minimum Order Quantity\", \"Price Family Code\", \"Price Group Code\", \"Preferred Product Indicator \", \"Product Available Date\", \"Product Country Of Origin Code\", \"Published Product Lead Time Days\", \"Sales Unit Of Measure\", \"Technology Segment\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_MATL_TYPE",
        "columns": [
          {
            "name": "MATL_TYPE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "MATL_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Material Type Code",
            "dataType": "string",
            "description": "code that represents the type of the material in the material master data (such as ZCFG for a material that is configured at the time of sale, or ZREP for a repair, where the repair product identifier is derived based on the catalog number for the product as sold), stored as a nvarchar",
            "sourceColumn": "Material Type Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Material Type Description",
            "dataType": "string",
            "description": "description associated with the code that represents the type of the material in the material master data (such as RA Configurable Materials for ZCFG, or Repair for ZREP), stored as a string",
            "sourceColumn": "Material Type Description",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Material Type Code and Description",
            "dataType": "string",
            "description": "concatenation of the Material Type Code and the associated description (such as ZCFG - RA Configurable Materials and ZCNV - RA-Cust Owned Materials), stored as a nvarchar",
            "sourceColumn": "Material Type Code and Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_MATL_TYPE = Source{[Schema=\"GLBL\",Item=\"V_DIM_MATL_TYPE_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_MATL_TYPE,{\"MATL_TYPE_KEY\", \"Material Type Code\", \"Material Type Description\", \"Material Type Code and Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_MATL_GRP",
        "columns": [
          {
            "name": "MATL_GRP_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "MATL_GRP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Material Group Description",
            "dataType": "string",
            "description": "description associated with the category defined by Rockwell Automation (such as 01MKE for Material Variant or 121010 for Marketing & Advertising) that identifies the group or role that will process the material master data, stored as a nvarchar",
            "sourceColumn": "Material Group Description",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Material Group Identifier",
            "dataType": "string",
            "description": "category defined by Rockwell Automation (such as 01MKE for Material Variant or 121010 for Marketing & Advertising) that identifies the group or role that will process the material master data, stored as a string",
            "sourceColumn": "Material Group Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Material Group ID and Desc",
            "dataType": "string",
            "description": "concatenation of the Material Group Identifier and the description associated with the identifier (such as 01MKE - Material Variant and 121010 - Marketing & Advert), stored as a nvarchar",
            "sourceColumn": "Material Group ID and Desc",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_MATL_GRP = Source{[Schema=\"GLBL\",Item=\"V_DIM_MATL_GRP_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_MATL_GRP,{\"MATL_GRP_KEY\", \"Material Group Identifier\", \"Material Group Description\", \"Material Group ID and Desc\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_MIDRANGE",
        "columns": [
          {
            "name": "MIDRANGE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MIDRANGE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Midrange Category Description",
            "dataType": "string",
            "sourceColumn": "Midrange Category Description",
            "encodingHint": "hash"
          },
          {
            "name": "Midrange Group Description",
            "dataType": "string",
            "description": "description associated with a specific set of \"product hierarchies\" for midrange processing capacity controllers (controllers or attachments/accessories for controllers), categorized into the midrange group, as defined by Rockwell Automation Finance, stored as a nvarchar",
            "sourceColumn": "Midrange Group Description",
            "encodingHint": "hash"
          },
          {
            "name": "Midrange Subgroup Description",
            "dataType": "string",
            "description": [
              "description associated with a specific set of \"\"product hierarchies\"\" for midrange processing capacity controllers (controllers or attachments/accessories for controllers), categorized into the midrange sub-group, as defined by Rockwell Automation Finance, stored as a varchar",
              "",
              "The mid-range subgroup is a lower level node within a mid-range group."
            ],
            "sourceColumn": "Midrange Subgroup Description",
            "encodingHint": "hash"
          },
          {
            "name": "Midrange Percent",
            "dataType": "double",
            "sourceColumn": "Midrange Percent",
            "encodingHint": "hash"
          },
          {
            "name": "Midrange Note Text",
            "dataType": "string",
            "sourceColumn": "Midrange Note Text",
            "encodingHint": "hash"
          },
          {
            "name": "Midrange Product Hierarchy Code",
            "dataType": "string",
            "sourceColumn": "Midrange Product Hyerarchy Code",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_V_DIM_MIDRANGE = Source{[Schema=\"FIN\",Item=\"V_DIM_MIDRANGE_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_V_DIM_MIDRANGE,{\"MIDRANGE_KEY\", \"Midrange Product Hyerarchy Code\", \"Midrange Category Description\", \"Midrange Group Description\", \"Midrange Subgroup Description\", \"Midrange Percent\", \"Midrange Note Text\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_PLANT",
        "columns": [
          {
            "name": "PLANT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "PLANT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Plant Code",
            "dataType": "string",
            "description": "code in SAP for the physical location (4 digits stored as text, such as 1020 for Twinsburg, 1090 for the Champaign Distribution Center, 4000 for the Central European Distribution Center, and 4080 for the EMEA main service hub) at which material is produced and stored as inventory, or goods and services are provided, stored as a string",
            "sourceColumn": "Plant Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Plant Name",
            "dataType": "string",
            "description": "description associated with the Plant Code in SAP (such as Twinsburg for Plant Code 1020 and European Distribution Center for Plant Code 4000), stored as a nvarchar",
            "sourceColumn": "Plant Name",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Plant Company Code",
            "dataType": "string",
            "description": [
              "code in SAP (four digits stored as text, for example, US = 1000, Canada = 2000, Germany = 4016, France = 4013, Netherlands = 4100) used to organize accounting information related to business transactions, representing the smallest organizational unit for which a complete self-contained set of accounts can be drawn up for purposes of external reporting, financial statements, and profit and loss statements, stored as a nvarchar",
              "",
              "The Company Code is also the third level in the Rockwell Automation internal organization hierarchy in SAP, which ensures consistent standard financial reporting and has the structure:",
              "1) Operating Concern",
              "2) Controlling Area",
              "3) Company Code",
              "4) Business Area",
              "5) Cost Center"
            ],
            "sourceColumn": "Plant Company Code",
            "encodingHint": "hash"
          },
          {
            "name": "Plant Country Code",
            "dataType": "string",
            "description": "code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a nvarchar",
            "sourceColumn": "Plant Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "Distribution Channel Code",
            "dataType": "string",
            "description": "code to identify the type of sale within a sales organization in SAP (such as 01 for Rockwell D/Channel, meaning direct sales), stored as a nvarchar",
            "sourceColumn": "Distribution Channel Code",
            "encodingHint": "hash"
          },
          {
            "name": "Factory Calendar Code",
            "dataType": "string",
            "description": "code in SAP for the calendar that define the days of operation for a specifc plant (such as ZP for Monterrey Planta #1 Factory Calendar), stored as a nvarchar",
            "sourceColumn": "Factory Calendar Code",
            "encodingHint": "hash"
          },
          {
            "name": "Ship To BP Identfier",
            "dataType": "string",
            "description": [
              "business partner identifier in SAP for the company (such as a Rockwell Automation plant, a distributor, or an end customer) to which Rockwell Automation shipped the given product, stored as a nvarchar",
              "",
              "For a stock transfer order (where one Rockwell Automation location receives the product from another plant or distribution center), the Ship To Business Partner Identifier is a Rockwell Automation (internal) business partner identifier."
            ],
            "sourceColumn": "Ship To BP Identfier",
            "encodingHint": "hash"
          },
          {
            "name": "Postal Code",
            "dataType": "string",
            "description": "postal code associated with the address for the given plant in SAP, stored as a nvarchar",
            "sourceColumn": "Postal Code",
            "encodingHint": "hash"
          },
          {
            "name": "Purchasing Organization",
            "dataType": "string",
            "description": "code for an organizational unit subdividing Rockwell Automation according to the requirements of Purchasing (such as AP, EMEA, LA, and NA), stored as a nvarchar",
            "sourceColumn": "Purchasing Organization",
            "encodingHint": "hash"
          },
          {
            "name": "Sales District Code",
            "dataType": "string",
            "description": "code in SAP for the Rockwell Automation district sales area (such as SEA for Seattle or BOS for Boston), comprised of multiple sales offices, responsible for providing support to the sold-to customer, stored as a nvarchar",
            "sourceColumn": "Sales District Code",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Organization Code",
            "dataType": "string",
            "description": [
              "a company code in SAP (four digits stored as text, for example,  US = 1000, Canada = 2000, Germany = 4016, France = 4013, Netherlands = 4100) representing the smallest organizational unit (\"\"sales org\"\") for which a complete self-contained set of accounts can be drawn up for purposes of external reporting, financial statements, and profit and loss statements, stored as a nvarchar",
              "",
              "Each product (based on material master data that includes current series, delivering plant, minimum order quantity, price, brand, etc) is assigned to and managed uniquely for the Sales Org for each country in which the product will be sold to support sales to third parties and inter-company Stock Transport Orders.  The US and Canada are each organized into a single Sales Org, whereas Asia/Pacific, EMEA, and Latin America each have a dozen or two."
            ],
            "sourceColumn": "Sales Organization Code",
            "encodingHint": "hash"
          },
          {
            "name": "Region",
            "dataType": "string",
            "description": "abbreviation in SAP for the state, province, or county (such as WI for Wisconsin or TWN for Taiwan) associated with the address for the given plant, stored as a nvarchar",
            "sourceColumn": "Region",
            "encodingHint": "hash"
          },
          {
            "name": "Valuation Area",
            "dataType": "string",
            "description": "code in SAP for the level at which materials are assigned costs and prices (such as at the Plant level or at the Company Code level), stored as a nvarchar",
            "sourceColumn": "Valuation Area",
            "encodingHint": "hash"
          },
          {
            "name": "Plant Code and Name",
            "dataType": "string",
            "description": "concatenation of the Plant Code in SAP and the associated Plant Name (such as 1010 - Eden Prairie or 1050 - Milwaukee), stored as a nvarchar",
            "sourceColumn": "Plant Code and Name",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PLANT = Source{[Schema=\"GLBL\",Item=\"V_DIM_PLANT_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_PLANT,{\"PLANT_KEY\", \"Plant Code\", \"Plant Company Code\", \"Plant Country Code\", \"Distribution Channel Code\", \"Factory Calendar Code\", \"Plant Name\", \"Ship To BP Identfier\", \"Postal Code\", \"Purchasing Organization\", \"Sales District Code\", \"Sales Organization Code\", \"Region\", \"Valuation Area\", \"Plant Code and Name\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_PRFT_CTR",
        "columns": [
          {
            "name": "PRFT_CTR_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "PRFT_CTR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "USR_RESP_BP_ID",
            "dataType": "string",
            "sourceColumn": "USR_RESP_BP_ID",
            "encodingHint": "hash"
          },
          {
            "name": "Profit Center",
            "dataType": "string",
            "description": [
              "code (see example below) that identifies the organizational unit used for both business unit and product line reporting, stored as a nvarchar",
              "",
              "For example:  ",
              "PB1USOP001",
              "where:",
              "PB = Push Buttons (sub-business unit)",
              "1 = North America (region)",
              "US = United States (country)",
              "OP = Operator Interface (product category)",
              "001 = NEMA Pushbutton 30mm (product line)"
            ],
            "sourceColumn": "Profit Center",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Profit Center Long Description",
            "dataType": "string",
            "description": [
              "long description associated with the Profit Center code (see example below) that identifies the organizational unit used for both business unit and product line reporting, stored as a nvarchar",
              "",
              "For example:  ",
              "PB1USOP001",
              "where:",
              "PB = Push Buttons (sub-business unit)",
              "1 = North America (region)",
              "US = United States (country)",
              "OP = Operator Interface (product category)",
              "001 = NEMA Pushbutton 30mm (product line)"
            ],
            "sourceColumn": "Profit Center Long Description",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Hyperion Business Unit Code",
            "dataType": "string",
            "description": [
              "code assigned within the Hyperion Financial Management reporting package (HFM) for a business unit within the financial structure of Rockwell Automation (such as ACS for Automation Software, DRV for Drives, ICB for Industrial Components Business, MOT for Motion, and SOF for Software), stored as a varchar",
              "",
              "The Business Units within Hyperion Financial Management are divided into a three-level hierarchy (See below). They are denoted in the following way: The Business Unit at Level 1, Full Business Unit at Level 2, and the Sub-Business Unit at Level 3. ",
              "",
              "Business Unit = business group at the second level in the profit and cost center hierarchies (for example, PCB for Power Control Business)",
              "Full Business Unit = business unit at the third level in the profit and cost center hierarchies (for example, DST for Standard Drives)",
              "Sub Business Unit  = sub-business unit at the fourth level in the profit and cost center hierarchies (for example, CDS for Component Drives)"
            ],
            "sourceColumn": "Hyperion Business Unit Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Profit Center Effective To Date Key",
            "dataType": "dateTime",
            "description": "the date on which the Profit Center is no longer effective (which may be a past, present, or future date), stored as a DATETIME and used as a key value",
            "sourceColumn": "Profit Center Effective To Date Key",
            "encodingHint": "hash"
          },
          {
            "name": "Profit Center Effective From Date Key",
            "dataType": "dateTime",
            "description": "the date on which the Profit Center is effective (which may be a past, present, or future date), stored as text for display and used as a key value",
            "sourceColumn": "Profit Center Effective From Date Key",
            "encodingHint": "hash"
          },
          {
            "name": "Controlling Area Code",
            "dataType": "string",
            "description": [
              "the second level in the Rockwell Automation internal organization hierarchy in SAP (such as RA00, the common controlling area used globally at Rockwell Automation), for which costs and revenues are collected and reported, stored as a nvarchar",
              "",
              "The internal organization hierarchy ensures consistent standard financial reporting and has the structure:",
              "1) Operating Concern",
              "2) Controlling Area",
              "3) Company Code",
              "4) Business Area",
              "5) Cost Center"
            ],
            "sourceColumn": "Controlling Area Code",
            "encodingHint": "hash"
          },
          {
            "name": "Profit Center Segment Code",
            "dataType": "string",
            "description": [
              "code that identifies the top-level organizational unit (ASW for Architecture & Software or CPS from Control Products & Solutions) associated with the profit center used for both business unit and product line reporting, stored as a nvarchar",
              "",
              "For example:  ",
              "PB1USOP001",
              "where:",
              "",
              "CPS = Control Products & Solutions (segment)",
              "OI = Operator Interface Business (business group)",
              "Operator Interface Components (business unit)",
              "PB = Push Buttons (sub-business unit)",
              "1 = North America (region)",
              "US = United States (country)",
              "OP = Operator Interface (product category)",
              "001 = NEMA Pushbutton 30mm (product line)"
            ],
            "sourceColumn": "Profit Center Segment Code",
            "encodingHint": "hash"
          },
          {
            "name": "Profit Center Emp Resp BP ID",
            "dataType": "string",
            "description": "business partner identifier in SAP associated with the Rockwell Automation employee who is responsible for the revenue and expenses in the given profit center, stored as a nvarchar",
            "sourceColumn": "Profit Center Emp Resp BP ID",
            "encodingHint": "hash"
          },
          {
            "name": "COPA Record Currency Code",
            "dataType": "string",
            "description": "code for the currency used (such as EUR or USD) for the COPA record for the given transaction (which could be any transaction that is posted to COPA in SAP, such as an order booking, a billing, a settlement transaction, costs, expenses, or a manual adjustment), stored as a nvarchar",
            "sourceColumn": "COPA Record Currency Code",
            "encodingHint": "hash"
          },
          {
            "name": "Profit Center Hierarchy Area Code",
            "dataType": "string",
            "description": "code (such as KNX_ENG for Kinetix engineering in the US or WAR_CON_LA for warranty concessions in Latin America) that identifies a group of profit centers used for both business unit and product line reporting, stored as a nvarchar",
            "sourceColumn": "Profit Center Hierarchy Area Code",
            "encodingHint": "hash"
          },
          {
            "name": "HFM Segment",
            "dataType": "string",
            "description": "abbreviation for the Rockwell Automation segment (such as CORP for Corporate and CS for Control Systems) in the Hyperion Financial Management (HFM) reporting package, stored as a nvarchar",
            "sourceColumn": "HFM Segment",
            "encodingHint": "hash"
          },
          {
            "name": "Profit Center Short Description",
            "dataType": "string",
            "description": [
              "short description associated with the Profit Center code (see example below) that identifies the organizational unit used for both business unit and product line reporting, stored as a string",
              "",
              "For example:  ",
              "PB1USOP001",
              "where:",
              "PB = Push Buttons (sub-business unit)",
              "1 = North America (region)",
              "US = United States (country)",
              "OP = Operator Interface (product category)",
              "001 = NEMA Pushbutton 30mm (product line)"
            ],
            "sourceColumn": "Profit Center Short Description",
            "encodingHint": "hash"
          },
          {
            "name": "SAP Business Unit Code",
            "dataType": "string",
            "sourceColumn": "SAP Business Unit Code"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PRFT_CTR = Source{[Schema=\"GLBL\",Item=\"V_DIM_PRFT_CTR_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_PRFT_CTR,{\"PRFT_CTR_KEY\", \"Profit Center\", \"Profit Center Effective To Date Key\", \"Profit Center Effective From Date Key\", \"Controlling Area Code\", \"Profit Center Segment Code\", \"Profit Center Emp Resp BP ID\", \"USR_RESP_BP_ID\", \"Hyperion Business Unit Code\", \"COPA Record Currency Code\", \"Profit Center Long Description\", \"Profit Center Hierarchy Area Code\", \"HFM Segment\", \"Profit Center Short Description\", \"SAP Business Unit Code\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_PRFT_CTR_HRCHY",
        "columns": [
          {
            "name": "PRFT_CTR_HRCHY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "PRFT_CTR_HRCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SAP Client Number",
            "dataType": "string",
            "description": "number that identifies the production environment of SAP deployed at Rockwell Automation, stored as a nvarchar",
            "sourceColumn": "SAP Client Number",
            "encodingHint": "hash"
          },
          {
            "name": "Level 1 Code",
            "dataType": "string",
            "description": "code associated with level 1 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 1 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 2 Code",
            "dataType": "string",
            "description": "code associated with level 2 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 2 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 2 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 2 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 2 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 3 Code",
            "dataType": "string",
            "description": "code associated with level 3 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 3 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 3 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 3 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 3 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 4 Code",
            "dataType": "string",
            "description": "code associated with level 4 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 4 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 4 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 4 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 4 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 5 Code",
            "dataType": "string",
            "description": "code associated with level 5 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 5 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 5 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 5 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 5 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 6 Code",
            "dataType": "string",
            "description": "code associated with level 6 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 6 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 6 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 6 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 6 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 7 Code",
            "dataType": "string",
            "description": "code associated with level 7 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 7 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 7 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 7 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 7 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 8 Code",
            "dataType": "string",
            "description": "code associated with level 8 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 8 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 8 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 8 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 8 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 9 Code",
            "dataType": "string",
            "description": "code associated with level 9 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 9 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 9 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 9 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 9 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 10 Code",
            "dataType": "string",
            "description": "code associated with level 10 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 10 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 10 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 10 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 10 Description",
            "encodingHint": "hash"
          },
          {
            "name": "SAP Subset",
            "dataType": "string",
            "description": "component of the setnode, which defines a standard hierarchy within SAP, stored as a nvarchar",
            "sourceColumn": "SAP Subset",
            "encodingHint": "hash"
          },
          {
            "name": "Profit Center",
            "dataType": "string",
            "description": [
              "code (see example below) that identifies the organizational unit used for both business unit and product line reporting, stored as a nvarchar",
              "",
              "For example:  ",
              "PB1USOP001",
              "where:",
              "PB = Push Buttons (sub-business unit)",
              "1 = North America (region)",
              "US = United States (country)",
              "OP = Operator Interface (product category)",
              "001 = NEMA Pushbutton 30mm (product line)"
            ],
            "sourceColumn": "Profit Center",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PRFT_CTR_HRCHY = Source{[Schema=\"GLBL\",Item=\"V_DIM_PRFT_CTR_HRCHY_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_PRFT_CTR_HRCHY,{\"PRFT_CTR_HRCHY_KEY\", \"SAP Client Number\", \"Level 1 Code\", \"Level 2 Code\", \"Level 2 Description\", \"Level 3 Code\", \"Level 3 Description\", \"Level 4 Code\", \"Level 4 Description\", \"Level 5 Code\", \"Level 5 Description\", \"Level 6 Code\", \"Level 6 Description\", \"Level 7 Code\", \"Level 7 Description\", \"Level 8 Code\", \"Level 8 Description\", \"Level 9 Code\", \"Level 9 Description\", \"Level 10 Code\", \"Level 10 Description\", \"SAP Subset\", \"Profit Center\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Profit Center Hierarchy",
            "levels": [
              {
                "name": "Level 2 Description",
                "ordinal": 0,
                "column": "Level 2 Description"
              },
              {
                "name": "Level 3 Description",
                "ordinal": 1,
                "column": "Level 3 Description"
              },
              {
                "name": "Level 4 Description",
                "ordinal": 2,
                "column": "Level 4 Description"
              },
              {
                "name": "Level 5 Description",
                "ordinal": 3,
                "column": "Level 5 Description"
              },
              {
                "name": "Level 6 Description",
                "ordinal": 4,
                "column": "Level 6 Description"
              },
              {
                "name": "Level 7 Description",
                "ordinal": 5,
                "column": "Level 7 Description"
              },
              {
                "name": "Level 8 Code",
                "ordinal": 6,
                "column": "Level 8 Code"
              },
              {
                "name": "Level 9 Code",
                "ordinal": 7,
                "column": "Level 9 Code"
              },
              {
                "name": "Level 10 Code",
                "ordinal": 8,
                "column": "Level 10 Code"
              }
            ]
          }
        ]
      },
      {
        "name": "DIM_PROD_HRCHY",
        "columns": [
          {
            "name": "PROD_HRCHY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "PROD_HRCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Product Category Description",
            "dataType": "string",
            "description": "description associated with the code for the product category, which is the second level in the Rockwell Automation product hierarchy and a logical representation of product offerings within a business unit (such as I/O, Drives, Limit Switches, or Channel Software), stored as a nvarchar",
            "sourceColumn": "Product Category Description",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Product Hierarchy Code",
            "dataType": "string",
            "description": "description associated with a code for the Product Category (such as I/O, Drives, Limit Switches, or Channel Software), Product Line (such as Toolkits, 1734 POINT I/O, PowerFlex DC Drives, or NEMA (802T) Safety Switches), or Product Group (such as Accessories Shaft Seal H/S) in the Rockwell Automation product hierarchy, stored as a nvarchar",
            "sourceColumn": "Product Hierarchy Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Unit Code",
            "dataType": "string",
            "description": "the code for the business unit (such as ACS for Automation Software, GIA for Global Infrastructure for Architecture, KNX for Kinetix, MCP for Motor Control Protection, CPB for Package Component Business, PBS for Push Buttons, SOF for Software, and SOP for Supply of Power) that is responsible for the design of the product, and the highest level in the Rockwell Automation product hierarchy, stored as a nvarchar",
            "sourceColumn": "Business Unit Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Unit Description",
            "dataType": "string",
            "description": "description associated with the code for the business unit (such as Automation Software for ACS, Global Infrastructure for Architecture for GIA, Kinetix for KNX, Motor Control Protection for MCP, Package Component Business for CPB, Push Buttons for PBS, Software for SOF, Supply of Power for SOP) that is responsible for the design of the product, and the highest level in the Rockwell Automation product hierarchy, stored as a nvarchar",
            "sourceColumn": "Business Unit Description",
            "encodingHint": "hash"
          },
          {
            "name": "Product Category Code",
            "dataType": "string",
            "description": "the second level in the Rockwell Automation product hierarchy and a logical representation of product offerings within a business unit (such as ACSA173 for Channel Software, ACSA172 for Peripherals, ACSA1723A682 for Hardware, and ACSA1723A6824A3261 for Cables & Adapters), stored as an alphanumeric string",
            "sourceColumn": "Product Category Code",
            "encodingHint": "hash"
          },
          {
            "name": "Product Line",
            "dataType": "string",
            "description": "the third level in the Rockwell Automation product hierarchy (such as ACSA1733A684 for Toolkits), below the Product Category, stored as an alphanumeric string",
            "sourceColumn": "Product Line",
            "encodingHint": "hash"
          },
          {
            "name": "Product Line Description",
            "dataType": "string",
            "description": "description associated with the third level in the Rockwell Automation product hierarchy (such as Toolkits, 1734 POINT I/O, PowerFlex DC Drives, or NEMA (802T) Safety Switches), below the Product Category, stored as a string (Product Line Description), stored as a nvarchar",
            "sourceColumn": "Product Line Description",
            "encodingHint": "hash"
          },
          {
            "name": "Product Group",
            "dataType": "string",
            "description": "the fourth and lowest level in the Rockwell Automation product hierarchy, below the Product Line, stored as a nvarchar",
            "sourceColumn": "Product Group",
            "encodingHint": "hash"
          },
          {
            "name": "Product Group Description",
            "dataType": "string",
            "description": "description associated with the fourth and lowest level in the Rockwell Automation product hierarchy, below the Product Line, stored a nvarchar",
            "sourceColumn": "Product Group Description",
            "encodingHint": "hash"
          },
          {
            "name": "Business Segment",
            "dataType": "string",
            "description": "abbreviation for the Rockwell Automation business segment (A&S for Architecture & Software and CP&S for Control Products & Solutions), stored as a nvarchar",
            "sourceColumn": "Business Segment",
            "encodingHint": "hash"
          },
          {
            "name": "Product Manager",
            "dataType": "string",
            "sourceColumn": "Product Manager"
          },
          {
            "name": "IP Owner",
            "dataType": "string",
            "sourceColumn": "IP Owner"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PROD_HRCHY = Source{[Schema=\"GLBL\",Item=\"V_DIM_PROD_HRCHY_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_PROD_HRCHY,{\"PROD_HRCHY_KEY\", \"Product Hierarchy Code\", \"Business Unit Code\", \"Business Unit Description\", \"Product Category Code\", \"Product Category Description\", \"Product Line\", \"Product Line Description\", \"Product Group\", \"Product Group Description\", \"Business Segment\", \"Product Manager\", \"IP Owner\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Product Hierarchy",
            "levels": [
              {
                "name": "Product Category Code",
                "ordinal": 0,
                "column": "Product Category Code"
              },
              {
                "name": "Product Line",
                "ordinal": 1,
                "column": "Product Line"
              },
              {
                "name": "Product Hierarchy Code",
                "ordinal": 2,
                "column": "Product Hierarchy Code"
              }
            ]
          }
        ]
      },
      {
        "name": "DIM_SLS_DIST",
        "columns": [
          {
            "name": "SLS_DIST_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "SLS_DIST_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Sales District Name",
            "dataType": "string",
            "description": "name associated with the code in SAP for the Rockwell Automation district sales area (such as Asia South East for ASE, Boston for BOS, and Seattle for SEA), comprised of multiple sales offices, responsible for providing support to the sold-to customer, stored as a nvarchar",
            "sourceColumn": "Sales District Name",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales District Code",
            "dataType": "string",
            "description": "code in SAP for the Rockwell Automation district sales area (such as ASE for Asia South East, BOS for Boston, and SEA for Seattle), comprised of multiple sales offices, responsible for providing support to the sold-to customer, stored as a nvarchar",
            "sourceColumn": "Sales District Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales District Code and Name",
            "dataType": "string",
            "description": "concatenation of the Sales District Code and the Sales District Name associated with that code (such as ASE - ASIA SOUTH EAST and BOS - BOSTON), stored as a nvarchar",
            "sourceColumn": "Sales District Code and Name",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_SLS_DIST = Source{[Schema=\"GLBL\",Item=\"V_DIM_SLS_DIST_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_SLS_DIST,{\"SLS_DIST_KEY\", \"Sales District Code\", \"Sales District Name\", \"Sales District Code and Name\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_SLS_DOC_TYPE",
        "columns": [
          {
            "name": "SLS_DOC_TYPE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "SLS_DOC_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Document Type",
            "dataType": "string",
            "description": "key used to identify the type of business transaction in SAP and classify the associated accounting documents — in this case, a document type for a specific type of sale (such as ZRPO for Plant Services third-party order transaction type and ZRFC for Full Credit Non Sched), stored as a nvarchar",
            "sourceColumn": "Sales Document Type",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Document Type Description",
            "dataType": "string",
            "description": "description associated with the key for the type of business transaction in SAP and classify the associated accounting documents — in this case, a document type for a specific type of sale (such as ZRPO for Plant Services third-party order transaction type and ZRFC for Full Credit Non Sched), stored as a nvarchar",
            "sourceColumn": "Sales Document Type Description",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Document Type and Description",
            "dataType": "string",
            "description": "description associated with the key for the type of business transaction in SAP and classify the associated accounting documents — in this case, a document type for a specific type of sale (such as ZRPO for Plant Services third-party order transaction type and ZRFC for Full Credit Non Sched), stored as a nvarchar",
            "sourceColumn": "Sales Document Type and Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_SLS_DOC_TYPE_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_SLS_DOC_TYPE_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_SLS_DOC_TYPE_BusNm,{\"SLS_DOC_TYPE_KEY\", \"Sales Document Type\", \"Sales Document Type Description\", \"Sales Document Type and Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_SLS_ORG",
        "columns": [
          {
            "name": "SLS_ORG_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "SLS_ORG_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Organization Code",
            "dataType": "string",
            "description": [
              "\"a company code in SAP (four digits stored as text, for example,  US = 1000, Canada = 2000, Germany = 4016, France = 4013, Netherlands = 4100) representing the smallest organizational unit (\"\"sales org\"\") for which a complete self-contained set of accounts can be drawn up for purposes of external reporting, financial statements, and profit and loss statements, stored as a nvarchar",
              "",
              "Each product (based on material master data that includes current series, delivering plant, minimum order quantity, price, brand, etc) is assigned to and managed uniquely for the Sales Org for each country in which the product will be sold to support sales to third parties and inter-company Stock Transport Orders.  The US and Canada are each organized into a single Sales Org, whereas Asia/Pacific, EMEA, and Latin America each have a dozen or two.\""
            ],
            "sourceColumn": "Sales Organization Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Organization Name",
            "dataType": "string",
            "description": "name associated with the Sales Organization (company code) in SAP (such as RA Netherlands Local for Sales Organization 4100 amd RA Italy for 4021), stored as a nvarchar",
            "sourceColumn": "Sales Organization Name",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Country Code",
            "dataType": "string",
            "description": "code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a nvarchar",
            "sourceColumn": "Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "Country Name",
            "dataType": "string",
            "description": "name associated with the code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a nvarchar",
            "sourceColumn": "Country Name",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Year Variant",
            "dataType": "string",
            "description": "code for the fiscal year calendar used in SAP (such as RA, which signifies that the Rockwell Automation fiscal year spans from 1 Oct to 30 Sep), stored as a nvarchar",
            "sourceColumn": "Fiscal Year Variant",
            "encodingHint": "hash"
          },
          {
            "name": "List Price Currency Code",
            "dataType": "string",
            "description": "code for the currency used for the standard catalog list price (such as EUR or USD) in SAP, based on the sales organization for the country in which the product will be or was sold, stored as a nvarchar",
            "sourceColumn": "List Price Currency Code",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Org BP Identifier",
            "dataType": "string",
            "description": [
              "business partner identifier in SAP for the given Rockwell Automation company (such as PC1000 for the United States, PC2000 for Canada, and PC4000 for EMEA) that will be billed for the material during an intercompany transfer, stored as a nvarchar",
              ""
            ],
            "sourceColumn": "Sales Org BP Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Organization Code and Name",
            "dataType": "string",
            "description": "concatenation of the Sales Organization (company code) in SAP and the name associated with the Sales Organization (such as 4100 - RA Netherlands or 4021 - RA Italy), stored as a nvarchar",
            "sourceColumn": "Sales Organization Code and Name",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_SLS_ORG_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_SLS_ORG_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_SLS_ORG_BusNm,{\"SLS_ORG_KEY\", \"Sales Organization Code\", \"Country Code\", \"Country Name\", \"Fiscal Year Variant\", \"List Price Currency Code\", \"Sales Org BP Identifier\", \"Sales Organization Name\", \"Sales Organization Code and Name\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_UNIT_OF_MEASURE",
        "columns": [
          {
            "name": "UOM_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "UOM_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "UOM_CD",
            "dataType": "string",
            "sourceColumn": "UOM_CD",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_UNIT_OF_MEASURE = Source{[Schema=\"GLBL\",Item=\"V_DIM_UNIT_OF_MEASURE_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_UNIT_OF_MEASURE,{\"UOM_KEY\", \"UOM_CD\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_COPA_CODES_2",
        "columns": [
          {
            "name": "COPA_CODES_2_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "COPA_CODES_2_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Document Item Category",
            "dataType": "string",
            "description": [
              "\"category in SAP (see examples below) used to determine the correct billing for the customer, stored as a nvarchar",
              "",
              "Z5DI - RA Proxy for demo",
              "ZCT2 - RA Quote Config Matl",
              "ZENX = RA Returns - ETO",
              "ZEPN = RA Purch No BP",
              "ZET1 = RA ETO Material",
              "ZFXN = RA Ext Billing Item ",
              "ZPCF = 3P-LAB-Reg / OT Bill",
              "ZTAN - RA Standard Item",
              "",
              "Rockwell Automation Finance maintains a configuration table in SAP that connects an Item Category and Service Type to an Activity Type.  The Item Category and Service Type are used to bill the customer​, and the Activity Type is used to charge labor to the service order.\""
            ],
            "sourceColumn": "Sales Document Item Category",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Document Item Number",
            "dataType": "string",
            "description": [
              "\"number of the item in the given sales order document in SAP that is related to the given COPA Record, stored as a nvarchar",
              "",
              "The Sales Document Item Number is populated with a value for transactions related to sales orders only (such as booking and billing transactions).\""
            ],
            "sourceColumn": "Sales Document Item Number",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Order Document Item Number",
            "dataType": "string",
            "description": "number of the item in the given sales order document in SAP that is related to the given COPA Record, stored as a nvarchar",
            "sourceColumn": "Order Document Item Number",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_COPA_V_DIM_COPA_CODES_2_BusNm = Source{[Schema=\"FIN_COPA\",Item=\"V_DIM_COPA_CODES_2_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_COPA_V_DIM_COPA_CODES_2_BusNm,{\"COPA_CODES_2_KEY\", \"Order Document Item Number\", \"Sales Document Item Category\", \"Sales Document Item Number\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_COPA_HEADER",
        "columns": [
          {
            "name": "COPA_HEADER_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated by the enterprise data warehouse in increments of 1, such as 100,101,102...) for the primary key in the copa header table within the data warehouse, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "COPA_HEADER_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Purchase Order Number",
            "dataType": "string",
            "description": [
              "\"number of the purchase order (PO) from the company (such as a distributor or an end customer) that purchased the product, stored as a nvarchar in the format dictated by the given customer",
              "",
              "The Rockwell Automation sales document includes the Customer PO Number, which is used as a reference to facilitate sales of products and services to the customer.\""
            ],
            "sourceColumn": "Customer Purchase Order Number",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_COPA_V_DIM_COPA_HEADER = Source{[Schema=\"FIN_COPA\",Item=\"V_DIM_COPA_HEADER_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_COPA_V_DIM_COPA_HEADER,{\"COPA_HEADER_KEY\", \"Customer Purchase Order Number\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_COPA_TEXT",
        "columns": [
          {
            "name": "COPA_TEXT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "COPA_TEXT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Reference Document Item Number",
            "dataType": "string",
            "description": [
              "\"number of the item in the given originating document in SAP (see examples below), stored as a nvarchar",
              "",
              "The originating document could be one of several types of transactions, such as:",
              "- a Finance settlement document in SAP ECC for a SAP CRM transaction such as a service order or service contract",
              "- a Finance settlement document for a production order in SAP ECC",
              "- a Billing document for a customer invoice in SAP ECC\""
            ],
            "sourceColumn": "Reference Document Item Number",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Incoterms Details",
            "dataType": "string",
            "description": "additional information to provide specific instructions aligned with the given Incoterms Code (such as \"Shipping Point\" with Incoterms Code FCA for Free Carrier or \"Destination\" with Incoterms Code FOB for Free On Board), stored as a nvarchar",
            "sourceColumn": "Incoterms Details",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_COPA_V_DIM_COPA_TEXT_BusNm = Source{[Schema=\"FIN_COPA\",Item=\"V_DIM_COPA_TEXT_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_COPA_V_DIM_COPA_TEXT_BusNm,{\"COPA_TEXT_KEY\", \"Reference Document Item Number\", \"Incoterms Details\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "_MEASURE",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Col1",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[Value]"
          },
          {
            "type": "calculated",
            "name": "Add col2",
            "dataType": "int64",
            "isDataTypeInferred": true
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": "{BLANK()}"
            }
          }
        ],
        "measures": [
          {
            "name": "Total_ADMIN_EXP_COST",
            "expression": "sum(FACT_COPA[ADMIN_EXP_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_CASH_DISC_AMT",
            "expression": "sum(FACT_COPA[CASH_DISC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_COST_GOODS_SOLD",
            "expression": "sum(FACT_COPA[COST_GOODS_SOLD])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_TOT_GOODS_MFGD_FXD_COST",
            "expression": "sum(FACT_COPA[TOT_GOODS_MFGD_FXD_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_CUST_DISC_AMT",
            "expression": "sum(FACT_COPA[CUST_DISC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_CUSTMS_BRKRG_COST",
            "expression": "sum(FACT_COPA[CUSTMS_BRKRG_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_DIR_MATL_COST",
            "expression": "sum(FACT_COPA[DIR_MATL_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_DSTBN_COST",
            "expression": "sum(FACT_COPA[DSTBN_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_ENGRNG_EXP_COST",
            "expression": "sum(FACT_COPA[ENGRNG_EXP_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_EXTD_LIST_PRC_AMT",
            "expression": "sum(FACT_COPA[EXTD_LIST_PRC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_PRODN_ORD_DLVRD_QTY",
            "expression": "sum(FACT_COPA[PRODN_ORD_DLVRD_QTY])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_INDIR_MATL_COST",
            "expression": "sum(FACT_COPA[INDIR_MATL_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_INPT_PRC_VARNC_AMT",
            "expression": "sum(FACT_COPA[INPT_PRC_VARNC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_INPT_PRC_VARNC_SCNDRY_AMT",
            "expression": "sum(FACT_COPA[INPT_PRC_VARNC_SCNDRY_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_INPT_QTY_VARNC_AMT",
            "expression": "sum(FACT_COPA[INPT_QTY_VARNC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_LOT_SIZE_VARNC_AMT",
            "expression": "sum(FACT_COPA[LOT_SIZE_VARNC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_LOT_SIZE_VARNC_SCNDRY_AMT",
            "expression": "sum(FACT_COPA[LOT_SIZE_VARNC_SCNDRY_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_MIXED_PRC_VARNC_AMT",
            "expression": "sum(FACT_COPA[MIXED_PRC_VARNC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_MIXED_PRC_VARNC_SCNDRY_AMT",
            "expression": "sum(FACT_COPA[MIXED_PRC_VARNC_SCNDRY_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_MKTG_OVRHD_COST",
            "expression": "sum(FACT_COPA[MKTG_OVRHD_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_OPRTG_PRFT_AMT",
            "expression": "sum(FACT_COPA[OPRTG_PRFT_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_OTHER_COST_SLS_AMT",
            "expression": "sum(FACT_COPA[OTHER_COST_SLS_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_OTHER_OVRHD_COST",
            "expression": "sum(FACT_COPA[OTHER_OVRHD_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_OTHER_SLS_DEDCTN_AMT",
            "expression": "sum(FACT_COPA[OTHER_SLS_DEDCTN_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_OTHER_VARNC_AMT",
            "expression": "sum(FACT_COPA[OTHER_VARNC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_OUTBND_FXD_COST",
            "expression": "sum(FACT_COPA[OUTBND_FXD_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_OUTPT_PRC_VARNC_AMT",
            "expression": "sum(FACT_COPA[OUTPT_PRC_VARNC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_OUTPT_PRC_VARNC_SCNDRY_AMT",
            "expression": "sum(FACT_COPA[REMNG_OUTPT_VARNC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_PRMTN_EXP_COST",
            "expression": "sum(FACT_COPA[PRMTN_EXP_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_PROD_FXD_COST",
            "expression": "sum(FACT_COPA[PROD_FXD_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_PRODN_VARNC_COST",
            "expression": "sum(FACT_COPA[PRODN_VARNC_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_QTY_DISC_AMT",
            "expression": "sum(FACT_COPA[QTY_DISC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_RD_COST",
            "expression": "sum(FACT_COPA[RD_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_REMNG_IMPT_VARNC_AMT",
            "expression": "sum(FACT_COPA[REMNG_IMPT_VARNC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_REMNG_IMPT_VARNC_SCNDRY_AMT",
            "expression": "sum(FACT_COPA[REMNG_IMPT_VARNC_SCNDRY_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_REMNG_OUTPT_VARNC_AMT",
            "expression": "sum(FACT_COPA[REMNG_OUTPT_VARNC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_RESTK_FEE_AMT",
            "expression": "sum(FACT_COPA[RESTK_FEE_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_RSRC_USG_VARNC_SCNDRY_AMT",
            "expression": "sum(FACT_COPA[RSRC_USG_VARNC_SCNDRY_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SCRP_VARNC_AMT",
            "expression": "sum(FACT_COPA[SCRP_VARNC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SCRP_VARNC_SCNDRY_AMT",
            "expression": "sum(FACT_COPA[SCRP_VARNC_SCNDRY_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SEMI_FNSHD_GOODS_COST",
            "expression": "sum(FACT_COPA[SEMI_FNSHD_GOODS_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SETLMNT_DISC_CLM_AMT",
            "expression": "sum(FACT_COPA[SETLMNT_DISC_CLM_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SETLMNT_DISC_PRMTN_INCNTV_AMT",
            "expression": "SUM(FACT_COPA[SETLMNT_DISC_PRMTN_INCNTV_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SETLMNT_NET_MARG_AMT",
            "expression": "sum(FACT_COPA[SETLMNT_NET_MARG_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SETLMNT_OTHER_VARNC_AMT",
            "expression": "sum(FACT_COPA[SETLMNT_OTHER_VARNC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SETLMNT_OUTBND_FRT_COST",
            "expression": "sum(FACT_COPA[SETLMNT_OUTBND_FRT_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SETLMNT_RBTE_CLM_AMT",
            "expression": "sum(FACT_COPA[SETLMNT_RBTE_CLM_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SETLMNT_RBTE_PRMTN_INCNTV_AMT",
            "expression": "sum(FACT_COPA[SETLMNT_RBTE_PRMTN_INCNTV_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SFSAC_CLM_AMT",
            "expression": "sum(FACT_COPA[SFSAC_CLM_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SFSAC_LGCY_CLM_AMT",
            "expression": "sum(FACT_COPA[SFSAC_LGCY_CLM_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SLS_COMSN_AMT",
            "expression": "sum(FACT_COPA[SLS_COMSN_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SLS_EXP_RECVRY_AMT",
            "expression": "sum(FACT_COPA[SLS_EXP_RECVRY_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SLS_ORD_DLVRD_QTY",
            "expression": "sum(FACT_COPA[SLS_ORD_DLVRD_QTY])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_SPCL_DIR_SLS_COST",
            "expression": "sum(FACT_COPA[SPCL_DIR_SLS_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_STD_MARG_SLS_MO_EXCL_INTRCO_AMT",
            "expression": "sum(FACT_COPA[STD_MARG_SLS_MO_EXCL_INTRCO_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_STD_MARG_SLS_MTH_AMT",
            "expression": "sum(FACT_COPA[STD_MARG_SLS_MTH_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_DISC_VAL",
            "expression": "sum(FACT_COPA[DISC_VAL])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_NET_VAL",
            "expression": "sum(FACT_COPA[NET_VAL])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_TOT_OVRHD_COST",
            "expression": "sum(FACT_COPA[TOT_OVRHD_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_TOT_SLS_DEDCTN_AMT",
            "expression": "sum(FACT_COPA[TOT_SLS_DEDCTN_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_TOT_VARNC_AMT",
            "expression": "sum(FACT_COPA[TOT_VARNC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_LGSTCS_OVRHD_COST",
            "expression": "sum(FACT_COPA[LGSTCS_OVRHD_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_RSRC_USG_VARNC_AMT",
            "expression": "sum(FACT_COPA[RSRC_USG_VARNC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total_WRN_CNCSSN_COST",
            "expression": "sum(FACT_COPA[WRN_CNCSSN_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Misc. Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "RateTypeSelected",
            "expression": "SELECTEDVALUE(DIM_CRNCY_CVRSN[Rate Type])",
            "isHidden": true
          },
          {
            "name": "CurrencyToSelected",
            "expression": "SELECTEDVALUE(DIM_CRNCY[Currency Code])",
            "isHidden": true
          },
          {
            "name": "RowCount",
            "expression": "COUNTROWS(FACT_COPA)",
            "formatString": "0",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "SelectedFromDate",
            "expression": "SELECTEDVALUE(DIM_CRNCY_CVRSN[RATE_EFF_FROM_DTE_INT_KEY])",
            "isHidden": true
          },
          {
            "name": "SelectedToDate",
            "expression": "SELECTEDVALUE(DIM_CRNCY_CVRSN[RATE_EFF_FROM_DTE_INT_KEY])",
            "isHidden": true
          },
          {
            "name": "Adjusted Cost Component",
            "description": "amount of manual adjustments made by the Rockwell Automation Finance team in the General Ledger to the costs of the material for the given transaction (such as a goods issue or inventory revaluation), stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[ADJD_COST_CMPNT_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Cost Interco. Mark Up",
            "expression": "sum(FACT_COPA[CAPTLZD_SFTWR_EXP_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Cost Of Goods Sold Manual Adjustments",
            "expression": "sum(FACT_COPA[COGS_ADJMT_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Duty And Brokerage Costs",
            "description": "amount of duties other than import duty (such as local or port-specific duties) and brokerage fees paid in conjunction with the purchase of raw materials needed to make the material for the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[DUTY_BRKRG_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "External Procurement Costs",
            "description": "amount paid for additional procurement from a vendor (which may include finding fees, brokerage fees, commissions, consulting fees, or other costs associated with the procurement of goods or services) for items that were needed to make the material in the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[EXTRNL_PROCRMT_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Finished Goods Costs",
            "description": [
              "amount of costs attributed to the manufacture or production of the finished goods for the given transaction (that is, the value of the finished goods based on the standard cost, which includes all planned costs to produce the goods such as the costs for raw materials, labor/fully burdened absorption, machine absorption, and overhead, plus carrying costs to maintain finished goods in inventory), stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "The Finished Goods Costs are generally posted when a production order is completed and the resulting goods are posted to inventory."
            ],
            "expression": "sum(FACT_COPA[FNSHD_GOODS_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Settlement Cost Of Sales Secondary",
            "description": [
              "amount of costs accrued for internal labor incurred as part of the given delivery of projects or services (such as product installation — not a \"\"ship and bill\"\" transaction for a physical product, per Rockwell Automation revenue recognition rules), stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "All other costs are accrued in Settelement Cost Of Sales Primary."
            ],
            "expression": "sum(FACT_COPA[SETLMNT_SLS_SECNDRY_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Fully Burdened Absorption Costs",
            "description": "the total of manufacturing costs that were absorbed by the material produced:  labor (Machine Absorption Costs) and fixed and variable manufacturing overhead (Indirect Material Costs, or material burden) costs, for the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[FULL_BDN_ABSORP_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Machine Absorption Costs",
            "description": [
              "amount of costs to operate the machinery that produced the material in the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "The total overhead cost for the maintenance and operation of machinery is divided by the total number of production hours to calculate a machine absorption rate, which is then multiplied by the time required to produce a single unit to arrive at the Machine Absorption Cost per unit. ",
              "",
              ""
            ],
            "expression": "sum(FACT_COPA[MACH_ABSORP_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Settlement Expenses",
            "description": [
              "amount of costs accrued that are associated with the revenue for the given transaction for projects or services (such as product installation — not a \"\"ship and bill\"\" transaction for a physical product, per Rockwell Automation revenue recognition rules), stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "Settlement Expenses may have been posted to a deferral account on the balance sheet as a provision (deferred liability), and are settled per Rockwell Automation revenue recognition rules."
            ],
            "expression": "sum(FACT_COPA[SETLMNT_BILLD_EXP_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Subcontracting Expenses",
            "description": [
              "amount paid to external companies hired by Rockwell Automation to perform a specific task as part of the overall value chain for manufacturing or producing the finished goods for the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "Subcontracting is generally used for services that are deemed not core or strategic, and so are not performed in-house by Rockwell Automation.  Subcontracting expenses are included in the Total Cost Of Goods Sold."
            ],
            "expression": "sum(FACT_COPA[SUBCONTRG_EXP_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Goods Usage Costs",
            "expression": "sum(FACT_COPA[GOODS_USG_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Import Duty Costs",
            "description": [
              "amount of tariffs paid in conjunction with the purchase of imported raw materials needed to make the material for the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "Countries charge import duties to generate income for the government and protect home industries by controlling the price of cheaper imported goods."
            ],
            "expression": "sum(FACT_COPA[IMPORT_DUTY_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Inbound Freight Costs",
            "description": "amount paid for the transport of raw materials needed to make the material for the given transaction from third-party suppliers to the Rockwell Automation plant, stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[INBND_FRT_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Inter-company Transfer Manual Adjustments",
            "description": "amount of manual adjustments made by Rockwell Automation Finance to the Inter-company Transfer Costs or Markup for the given inter-company transfer transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[INTRCO_TRNSFR_ADJMT_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Inter-company Transfer Costs",
            "description": "amount of costs (the transfer price plus any additional expenses related to the transfer such as freight, duty, sales or use taxes, and Value Added Taxes, but not including Inter-company Transfer Markup) for the given inter-company transfer transaction (such as a shipment of finished goods from a Rockwell Automation plant to a Rockwell Automation distribution center), stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[INTRCO_TRNSFR_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Raw Materials Costs",
            "description": [
              "amount paid for the raw materials purchased by Rockwell Automation from third-party suppliers to make the material for the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "In SAP, raw materials are specfied as child materials in the bill of materials for the material master record associated with the given product."
            ],
            "expression": "sum(FACT_COPA[RAW_MATL_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Standard Margin Amount",
            "description": [
              "amount of the added markup on the given product, project, or service, for the quantity of units sold in the given transaction (in other words, the profit earned by Rockwell Automation after deducting all costs associated with the transaction), stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "Standard Margin Amount = Total Revenue - Total Cost Of Sales"
            ],
            "expression": "sum(FACT_COPA[STD_MARG_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Standard Margin Excluding Inter-company",
            "description": [
              "amount of profit Rockwell Automation earns on the given transaction (which could be a \"\"ship and bill\"\", or not) for products, projects, or services, stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "Standard Margin Excluding Inter-company Markup = Total Revenue (excluding Inter-company Transfer Markup and Transfer Costs) - Total Cost of Sales  ",
              "",
              "The Standard Margin Excluding Inter-company Markup is a true measure of the profit earned at the company level — by excluding Inter-company Transfer Markup, there is no risk of double-counting that notional \"\"profit\"\" when revenue from all Rockwell Automation legal entities is combined."
            ],
            "expression": "sum(FACT_COPA[STD_MARG_EXCL_INTRCO_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total Cost Of Sales",
            "description": "the total amount of the Stock Value of the goods plus Cost Of Goods Sold Manual Adjustments, Inter-company Transfer Manual Adjustments, Settlement Cost Of Sales Primary, Settlement Cost Of Sales Secondary, Settlement Expenses, and Capitalized Software Expenses associated with the sale of the finished goods and services for the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[TOT_SLS_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Trading Goods Usage Costs",
            "expression": "sum(FACT_COPA[TRADE_GOODS_USG_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Quantity Sold",
            "description": "the quantity of products sold to the customer for the given transaction, stored as a decimal",
            "expression": "sum(FACT_COPA[SLS_QTY])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Billable Outbound Freight Costs Manual Adjustments",
            "description": "amount of manual adjustments made by the Rockwell Automation Finance team in the General Ledger to the billable outbound freight costs for the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[BILLBL_OUTBND_ADJMT_FRT_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Billable Outbound Freight Costs",
            "description": [
              "the total billable amount of the costs related to the transport of finshed goods from the Rockwell Automation plant or distribution center to the delivery location specified by the customer (which may include costs or charges for packing, palletizing, documentation, loading, unloading, carriage, and insurance) for the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "In some cases, outbound freight costs are not billable (such as when shipping replacement parts under warranty or promotional/demo products)."
            ],
            "expression": "sum(FACT_COPA[BILLBL_OUTBND_FRT_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Stock Value",
            "description": [
              "the amount that Rockwell Automation considers to be the value of the given material that was sold to the customer for the total quantity sold for the given transaction, based on the valuation class for the material and the Material Unit Cost, stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "Stock Value = Standard Unit Cost * Sales Order Delivered Quantity"
            ],
            "expression": "sum(FACT_COPA[STK_VAL_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Settlement Billable Expenses",
            "description": [
              "amount accrued for actual, legitimate business expenses that the customer has agreed to pay for (such as travel and living  costs for field engineers) as part of the given delivery of projects or services  (such as product installation — not a \"\"ship and bill\"\" transaction for a physical product, per Rockwell Automation revenue recognition rules), stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "Settlement Billable Expenses may have been posted to a deferral account on the balance sheet as a provision (deferred liability), and are settled per Rockwell Automation revenue recognition rules."
            ],
            "expression": "sum(FACT_COPA[SETLMNT_BILLD_EXP_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Settlement Cost Of Sales Primary",
            "description": [
              "the total amount of costs accrued for material, labor/burden, and freight, including costs for outside services (external contract labor) but excluding internal labor, incurred as part of the given delivery of projects or services (such as product installation — not a \"\"ship and bill\"\" transaction for a physical product, per Rockwell Automation revenue recognition rules), stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "Internal labor is accrued in Settlement Cost Of Sales Secondary."
            ],
            "expression": "sum(FACT_COPA[SETLMNT_COST_SLS_PRIM_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Settlement Revenue",
            "description": [
              "the total amount of income (\"\"gross\"\") accrued by Rockwell Automation as part of the given delivery of products or services  (such as product installation — not a \"\"ship and bill\"\" transaction for a physical product, per Rockwell Automation revenue recognition rules), adjusted by deducting any discounts, credits, rebates, and manual adjustments, stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "Settlement Revenue may have been posted to a deferral account on the balance sheet as a provision (deferred liability), and is settled per Rockwell Automation revenue recognition rules."
            ],
            "expression": "sum(FACT_COPA[SETLMNT_REVNU_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Inter-company Markup",
            "description": "amount added to the given inter-company transfer transaction so that the delivering plant sold the goods at a profit per legal requirements, stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[INTRCO_MARKUP_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Inter-company Manual Service Charges",
            "description": [
              "amount of General Ledger entries made by Rockwell Automation Finance to account for service charges to be settled between two Rockwell Automation legal entities (for example, for services provided by an installation/service technician belonging to one legal entity, such as Germany, for an order booked by another legal entity, such as France) for the given transaction, stored as a decimal in the currency specified in the COPA Record Currency Code",
              "",
              "This method of accounting is employed when the cost of an inter-company service transaction is so small that an internal order between the two entities is not practically possible."
            ],
            "expression": "sum(FACT_COPA[INTRCO_SRVC_CHRG_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "ASC 606 Rebates Adjustments",
            "description": "the total amount of adjustments to rebates as reported by applying Accounting Standards Codification (ASC) 606 - Revenue From Contracts With Customers guidance, stored as a decimal",
            "expression": "sum(FACT_COPA[RBTE_ADJMT_A606_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Revenue Manual Adjustments",
            "description": "amount of manual adjustments made by the Rockwell Automation Finance team in the General Ledger to make corrections to Revenue for the given transaction, which affects both Gross and Net Revenue, stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[REVNU_ADJMT_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Revenue",
            "description": "the total amount of income (\"gross\") made by Rockwell Automation by the sale of \"ship and bill\" products to customers (including any discounts and credits for returns, but excluding revenue from transactions that are not a \"ship and bill\" for a physical product, such as projects and services, per Rockwell Automation revenue recognition rules) for the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[REVNU_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Settlement Discounts",
            "description": [
              "amount of discount revenue recognized as part of the given delivery of projects or services (such as product installation — not a \"\"ship and bill\"\" transaction for a physical product, per Rockwell Automation revenue recognition rules), stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "Settlement Discounts = Settlement Discount Claims - Settlement Discount Promotion Incentives"
            ],
            "expression": "sum(FACT_COPA[SETLMNT_DISC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Settlement Quantity",
            "description": "number of items delivered for the service order line item in SAP that is related to the COPA Record for the given transaction for the delivery of products or services  (such as product installation — not a \"ship and bill\" transaction for a physical product, per Rockwell Automation revenue recognition rules), based on the Settlement Quantity Unit Of Measure, stored as a decimal",
            "expression": "sum(FACT_COPA[SETLMNT_QTY])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Settlement Rebates",
            "description": [
              "amount of rebate revenue recognized as part of the given delivery of projects or services (such as product installation — not a \"\"ship and bill\"\" transaction for a physical product, per Rockwell Automation revenue recognition rules), stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "Settlement Rebates = Settlement Rebate Claims - Settlement Rebate Promotion Incentives"
            ],
            "expression": "sum(FACT_COPA[SETLMNT_RBTE_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "SFSAC Sales Adjustments",
            "description": [
              "the difference between the total amount of ship from stock and credit (SFSAC) claims related to the given transaction and the total amount of SFSAC legacy claims related to the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "SFSAC Sales Adjustments = SFSAC Claims - SFSAC Legacy Claims",
              "",
              "SFSAC Legacy Claims were posted as a positive number, so this calculation is actually a sum of the two amounts."
            ],
            "expression": "sum(FACT_COPA[SFSAC_SLS_ADJMT_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Sales Discounts",
            "description": "amount of discounts applied (due to a special pricing agreement, or at the discretion of Sales as an incentive) for the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[SLS_DISC_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Sales Rebates",
            "description": "amount of credits for any rebate claims based on sales amount (meaning the customer met a minimum target for spending on purchases during a specified time period) related to the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[SLS_RBTE_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total Revenue",
            "description": [
              "the total amount of all revenue components (including Revenue, Settlement Revenue, Revenue Manual Adjustments, Inter-company Markup, Inter-company Manual Service Charges, Sales Discounts, Settlement Discount, Discounts Manual Adjustments, Volume Rebates, Sales Rebates, Settlement Rebates, Billable Outbound Freight Costs, Billable Outbound Freight Costs Manual Adjustments, Settlement Billable Expenses, and SFSAC Sales Adjustments) for the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
              "",
              "The Total Revenue is typically analyzed by Fiscal Year Period, Sales Organization, Profit Center, and other characteristics."
            ],
            "expression": "sum(FACT_COPA[TOT_REVNU_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Volume Rebates",
            "expression": "sum(FACT_COPA[VOL_RBTE_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Discounts Manual Adjustments",
            "description": "amount of manual adjustments made by the Rockwell Automation Finance team in the General Ledger to the price (over and above adjustments for cash discounts, service contract discounts, other types of discounts, and rebates) for the given transaction, stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "sum(FACT_COPA[DISC_ADJMT_AMT])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Total Of Cost Components",
            "description": "the total amount of direct costs attributed to the manufacture or production of the finished goods for the given transaction (including costs for raw materials, import duty, duty and brokerage, inter-company transfer price, inbound freight, subcontracting expenses, external procurement, fully burdened absorption, machine absorption, finished goods, trading goods usage, plus the adjusted cost component), stored as a decimal in the currency specified by the COPA Record Currency Code",
            "expression": "SUM(FACT_COPA[TOT_CMPNTS_DIR_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Avg Selling Price",
            "description": "Average Price calculated by dividing Total Revenue by Quantity Sold",
            "expression": [
              "",
              "VAR ConversionType = SELECTEDVALUE('Currency Conversion'[Conversion Types], BLANK())",
              "RETURN",
              "DIVIDE(",
              "    CALCULATE(",
              "        '_MEASURE'[Total Revenue],",
              "        FILTER(",
              "            'Currency Conversion Manual',",
              "            'Currency Conversion Manual'[Conversion Types Manual] = ConversionType",
              "        )",
              "    ),",
              "    '_MEASURE'[Quantity Sold],",
              "    BLANK()",
              ")"
            ],
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Margin PCT",
            "description": "Standard Margin Amount divided by total Revenue",
            "expression": [
              "",
              "VAR ConversionType = SELECTEDVALUE('Currency Conversion'[Conversion Types], BLANK())",
              "RETURN",
              "CALCULATE(",
              "    DIVIDE(",
              "        '_MEASURE'[Standard Margin Amount],",
              "        '_MEASURE'[Total Revenue],",
              "        BLANK()",
              "    ),",
              "    FILTER(",
              "        'Currency Conversion Manual',",
              "        'Currency Conversion Manual'[Conversion Types Manual] = ConversionType",
              "    )",
              ")"
            ],
            "formatString": "#,0 %;-#,0 %;#,0 %",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Settlement Billed Expenses",
            "expression": "sum(FACT_COPA[SETLMNT_BILLD_EXP_COST])",
            "formatString": "\"\"#,0;(\"\"#,0);\"\"#,0",
            "displayFolder": "Key Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"\" Symbol=\"\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "CurrencyTypeSelected",
            "expression": "SELECTEDVALUE(DIM_CRNCY[Currency Code])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Total_Revnu_606_Amt",
            "expression": "sum(FACT_COPA[TOT_REVNU_606_AMT])"
          },
          {
            "name": "Total_Revnu_605_Amt",
            "expression": "sum(FACT_COPA[TOT_REVNU_605_AMT])"
          },
          {
            "name": "Total_Revnu_Orig_Amt",
            "expression": "Sum(FACT_COPA[TOT_REVNU_ORIG_AMT])"
          },
          {
            "name": "FY Start",
            "expression": "Min(DIM_DATE[Fiscal Calendar Year Number])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "FY End",
            "expression": "Max(DIM_DATE[Fiscal Calendar Year Number])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Calendar Month Day",
            "expression": "sum(DIM_DATE[Calendar Month Day Count])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Calendar Qtr Day",
            "expression": "sum(DIM_DATE[Calendar Qtr Day Count])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Calendar Year Day",
            "expression": "SUM(DIM_DATE[Calendar Year Day Count])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Fiscal Calendar Qtr Day",
            "expression": "SUM(DIM_DATE[Fiscal Calendar Qtr Day Count])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Fiscal Calendar Month Day",
            "expression": "sum(DIM_DATE[Fiscal Calendar Month Day Count])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Fiscal Calendar Year Day",
            "expression": "sum(DIM_DATE[Fiscal Calendar Year Day Count])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Fiscal Week Qtr Day",
            "expression": "sum(DIM_DATE[Fiscal Week Qtr Day Count])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Fiscal Week Month Day",
            "expression": "sum(DIM_DATE[Fiscal Week Month Day Count])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Fiscal Week Year Day",
            "expression": "SUM(DIM_DATE[Fiscal Week Year Day Count])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Day of Week",
            "expression": "sum(DIM_DATE[Is Day of Week Count])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Federal Holiday",
            "expression": "Sum(DIM_DATE[Is Federal Holiday Count])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Market Closed",
            "expression": "sum(DIM_DATE[Is Market Closed Count])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "RA Holiday",
            "expression": "sum(DIM_DATE[Is RA Holiday Count])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "RA Work Day",
            "expression": "sum(DIM_DATE[Is RA Work Day Count])",
            "displayFolder": "Key Metrics"
          },
          {
            "name": "Margin PCT Excluding Inter-company",
            "expression": [
              "",
              "VAR ConversionType = SELECTEDVALUE('Currency Conversion'[Conversion Types], BLANK())",
              "RETURN",
              "CALCULATE(",
              "    DIVIDE(",
              "        '_MEASURE'[Standard Margin Excluding Inter-company],",
              "        '_MEASURE'[Total Revenue],",
              "        BLANK()",
              "    ),",
              "    FILTER(",
              "        'Currency Conversion Manual',",
              "        'Currency Conversion Manual'[Conversion Types Manual] = ConversionType",
              "    )",
              ")"
            ],
            "formatString": "0 %;-0 %;0 %"
          },
          {
            "name": "Actual Amount",
            "description": "actual amount posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": [
              " ",
              "IF (",
              "    [CCA Detail Flag],",
              "  [Actual Amount Detail],",
              "  [Actual Amount Summary]",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "CCA",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Plan Amount",
            "description": "plan amount posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": [
              " ",
              "IF (NOT ",
              "    [CCA Detail Flag],",
              "    [Plan Amount Summary]",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "CCA",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual Fixed Amount",
            "description": "actual fixed amount posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": [
              "",
              "IF (",
              "    [CCA Detail Flag],",
              "\t[Actual Fixed Amount Detail],",
              "\t[Actual Fixed Amount Summary]",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "CCA",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual Variable Amount",
            "description": "actual variable amount (Actual Amount - Actual Fixed Amount) posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": [
              "",
              "IF (",
              "    [CCA Detail Flag],",
              "    [Actual Variable Amount Detail],",
              "    [Actual Variable Amount Summary]",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "CCA",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual Consumption Quantity",
            "description": "the actual number of items consumed in the transaction at the given cost center, which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
            "expression": [
              "",
              "IF (",
              "    [CCA Detail Flag],",
              "    [Actual Consumption Quantity Detail],",
              "    [Actual Consumption Quantity Summary]",
              ")"
            ],
            "formatString": "0.00",
            "displayFolder": "CCA"
          },
          {
            "name": "Actual Fixed Consumption Quantity",
            "description": "the actual fixed number of items consumed in the transaction at the given cost center, which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
            "expression": [
              "",
              "IF (",
              "    [CCA Detail Flag],",
              "    [Actual Fixed Consumption Quantity Detail],",
              "    [Actual Fixed Consumption Quantity Summary]",
              ")"
            ],
            "formatString": "0.00",
            "displayFolder": "CCA"
          },
          {
            "name": "Actual Variable Consumption Quantity",
            "description": [
              "\"the actual variable number of items consumed in the transaction at the given cost center (Actual Consumption Quantity - Actual Fixed Consumption Quantity), which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
              "",
              "The Unit of Measure (UOM) that is most common is hours. However, there can be other Units of Measure such as KG, CM, BAG, etc.\""
            ],
            "expression": [
              "",
              "IF (",
              "    [CCA Detail Flag],",
              "    [Actual Variable Consumption Quantity Detail],",
              "    [Actual Variable Consumption Quantity Summary]",
              ")"
            ],
            "formatString": "0.00",
            "displayFolder": "CCA"
          },
          {
            "name": "Plan Fixed Amount",
            "description": "plan fixed amount posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": [
              " ",
              "IF (NOT ",
              "    [CCA Detail Flag],",
              "    [Plan Fixed Amount Summary]",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "CCA",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Plan Variable Amount",
            "description": "plan variable amount (Plan Amount - Plan Fixed Amount) posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": [
              " ",
              "IF (NOT ",
              "    [CCA Detail Flag],",
              "    [Plan Variable Amount Summary]",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "CCA",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Plan Consumption Quantity",
            "description": "the planned number of items consumed in the transaction at the given cost center, which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
            "expression": [
              " ",
              "IF (NOT ",
              "    [CCA Detail Flag],",
              "    [Plan Consumption Quantity Summary]",
              ")"
            ],
            "formatString": "0.00",
            "displayFolder": "CCA"
          },
          {
            "name": "Plan Fixed Consumption Quantity",
            "description": "the planned fixed number of items consumed in the transaction at the given cost center, which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
            "expression": [
              " ",
              "IF (NOT ",
              "    [CCA Detail Flag],",
              "    [Plan Fixed Consumption Quantity Summary]",
              ")"
            ],
            "formatString": "0.00",
            "displayFolder": "CCA"
          },
          {
            "name": "Plan Variable Consumption Quantity",
            "description": [
              "\"the planned variable number of items consumed in the transaction at the given cost center (Plan Consumption Quantity - Plan Fixed Consumption Quantity), which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
              "",
              "The Unit of Measure (UOM) that is most common is hours. However, there can be other Units of Measure such as KG, CM, BAG, etc.\""
            ],
            "expression": [
              " ",
              "IF (NOT ",
              "    [CCA Detail Flag],",
              "    [Plan Variable Consumption Quantity Summary]",
              ")"
            ],
            "formatString": "0.00",
            "displayFolder": "CCA"
          },
          {
            "name": "Actual Amount By Posting Date",
            "description": "actual amount posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "CALCULATE(sum(FACT_CCA_ACTUALS[ACTUAL_AMT]), USERELATIONSHIP(FACT_CCA_ACTUALS[POSTING_DATE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA By Posting Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "CCA Detail Flag",
            "description": "Flag to Identify CCA Sum measures are displayed based on CCA Summary or Detail",
            "expression": [
              " ",
              "IF(ISFILTERED('Accounting Document'[Cost Accounting Document Line Item Number]) || ",
              "    ISFILTERED('Accounting Document'[Cost Accounting Document Identifier]) ||",
              "    ISFILTERED('Accounting Document'[Cost Accounting Document Line Item Number Description])||",
              "    ISFILTERED('Accounting Document'[Document Date])||",
              "    ISFILTERED('Accounting Document'[Posting Date])||",
              "    ",
              "    ISFILTERED('Partner Company'[Company Code])||",
              "    ISFILTERED('Partner Company'[Company Country Code])||",
              "    ISFILTERED('Partner Company'[List Price Currency Code])||",
              "    ISFILTERED('Partner Company'[Chart Of Accounts Code])||",
              "    ISFILTERED('Partner Company'[Credit Control Area Code])||",
              "    ISFILTERED('Partner Company'[Fiscal Year Variant])||",
              "    ISFILTERED('Partner Company'[Company Code Description])||",
              "    ISFILTERED('Partner Company'[Company Code And Description])||",
              "",
              "",
              "    ISFILTERED(Vendor[Vendor Business Partner Identifier])||",
              "    ISFILTERED(Vendor[Country Code])||",
              "    ISFILTERED(Vendor[Vendor Name 1])||",
              "    ISFILTERED(Vendor[Vendor Name 2])||",
              "    ISFILTERED(Vendor[Business Partner City Name])||",
              "    ISFILTERED(Vendor[Business Partner District Name])||",
              "    ISFILTERED(Vendor[Business Partner PO Box])||",
              "    ISFILTERED(Vendor[Business Partner PO Box Postal Code])||",
              "    ISFILTERED(Vendor[Business Partner Postal Code])||",
              "    ISFILTERED(Vendor[Vendor Business Partner Street Address])||",
              "    ISFILTERED(Vendor[Vendor Business Address Services Identifier])||",
              "    ISFILTERED(Vendor[Business Partner SIC Code])||",
              "    ISFILTERED(Vendor[Vendor Account Group Code])||",
              "    ISFILTERED(Vendor[Vendor Central Deletion Indicator])||",
              "    ISFILTERED(Vendor[Vendor Central Posting Block Indicator])||",
              "    ISFILTERED(Vendor[Vendor Imposed Central Purchasing Block Indicator])||",
              "    ISFILTERED(Vendor[Trading Partner Company Identifier])||",
              "    ISFILTERED(Vendor[VAT Registration Number])||",
              "    ISFILTERED(Vendor[Business Partner PO Box City Name])||",
              "    ISFILTERED(Vendor[Plant Code])||",
              "    ISFILTERED(Vendor[Tax Jurisdiction Code])||",
              "    ISFILTERED(Vendor[Vendor Payment Block Indicator])||",
              "    ISFILTERED(Vendor[Tax Number Type])||",
              "    ISFILTERED(Vendor[Vendor Business Type Description])||",
              "    ISFILTERED(Vendor[Vendor Industry Type Description])||",
              "    ISFILTERED(Vendor[Business Purpose Completion Indicator])||",
              "    ISFILTERED(Vendor[Sold to Business Partner Identifier])||",
              "    ISFILTERED(Vendor[Region (State Province County) Code])||",
              "",
              "    ISFILTERED(DIM_MATL[Material Identifier])||",
              "    ISFILTERED(DIM_MATL[Material Base Unit Of Measure])||",
              "    ISFILTERED(DIM_MATL[Material UoM Multiplier Denominator])||",
              "    ISFILTERED(DIM_MATL[Material UoM Multiplier Numerator])||",
              "    ISFILTERED(DIM_MATL[Bulletin Number])||",
              "    ISFILTERED(DIM_MATL[Business Unit Code])||",
              "    ISFILTERED(DIM_MATL[Catalog Identifier])||",
              "    ISFILTERED(DIM_MATL[Configurable Material Indicator])||",
              "    ISFILTERED(DIM_MATL[Commodity Code])||",
              "    ISFILTERED(DIM_MATL[Cross-Plant Config Material ID])||",
              "    ISFILTERED(DIM_MATL[Material Dimension Unit Of Measure])||",
              "    ISFILTERED(DIM_MATL[Material Document Identifier])||",
              "    ISFILTERED(DIM_MATL[Material Document Type Code])||",
              "    ISFILTERED(DIM_MATL[Material Document Version])||",
              "    ISFILTERED(DIM_MATL[Material Gross Weight])||",
              "    ISFILTERED(DIM_MATL[Material Height Dimension])||",
              "    ISFILTERED(DIM_MATL[Material Length Dimension])||",
              "    ISFILTERED(DIM_MATL[Repair Lifecycle Description])||",
              "    ISFILTERED(DIM_MATL[Material Description])||",
              "    ISFILTERED(DIM_MATL[Material General Item Cat Grp])||",
              "    ISFILTERED(DIM_MATL[Material Group])||",
              "    ISFILTERED(DIM_MATL[Material Master Record Created Date])||",
              "    ISFILTERED(DIM_MATL[Material Type Code])||",
              "    ISFILTERED(DIM_MATL[Material Net Weight])||",
              "    ISFILTERED(DIM_MATL[PO Quantity UOM])||",
              "    ISFILTERED(DIM_MATL[Product Category])||",
              "    ISFILTERED(DIM_MATL[Product Group])||",
              "    ISFILTERED(DIM_MATL[Prod Hier Code And Desc])||",
              "    ISFILTERED(DIM_MATL[Product Hierarchy Code])||",
              "    ISFILTERED(DIM_MATL[Product Lifecycle Status])||",
              "    ISFILTERED(DIM_MATL[Product Line])||",
              "    ISFILTERED(DIM_MATL[Series])||",
              "    ISFILTERED(DIM_MATL[Serial Number])||",
              "    ISFILTERED(DIM_MATL[Material Transportation Group Code])||",
              "    ISFILTERED(DIM_MATL[Material Volume Dimension])||",
              "    ISFILTERED(DIM_MATL[Material Volume Unit Of Measure])||",
              "    ISFILTERED(DIM_MATL[Material Width Dimension])||",
              "    ISFILTERED(DIM_MATL[Material Weight Unit Of Measure])||",
              "    ISFILTERED(DIM_MATL[Material Identifier and Description ])||",
              "",
              "",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner Identfier])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner Name 1])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[BP Name 1 Description])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner Name 2])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner Name 3])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[BP Customer Type Code])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner City Name])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner Country Code])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[BP Country Subdivision Code])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[BP Account Group Code])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Customer Account Deletion Indicator])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Dual Area Of Primary Responsibility])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner Fax Number])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Fiscal Year Variant])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[BP Industry Vertical Identifier])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Usage Code For Material Sale])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[BP Telephone 1 Number])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner PO Box])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[BP PO Box City Name])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[BP PO Box Postal Code])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner Postal Code])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner RAAMP Code])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner SIC Code])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Sales District Name])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[BP Sold to Cust Type Code])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner Search Term])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[BP Street Address])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Strategic Account Identifier])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Strategic Account Level])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner Tax Number 1])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner Tax Number 2])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Business Partner Tax Number 3])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Trading Partner Company Identifier])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Transaction Plant Code])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[BP Value Added Service Code])||",
              "    ISFILTERED(DIM_CUSTOMER_SHIP_TO[Vendor BP Identifier])||",
              "",
              "",
              "    ISFILTERED('GL Account by Chart Of Accounts'[Chart of Accounts])||",
              "    ISFILTERED('GL Account by Chart Of Accounts'[G/L Account Number])||",
              "    ISFILTERED('GL Account by Chart Of Accounts'[Balance Sheet Account Indicator])||",
              "    ISFILTERED('GL Account by Chart Of Accounts'[G/L Account Number Significant Length])||",
              "    ISFILTERED('GL Account by Chart Of Accounts'[Group Account Number])||",
              "    ISFILTERED('GL Account by Chart Of Accounts'[P&L Account Indicator])||",
              "    ISFILTERED('GL Account by Chart Of Accounts'[G/L Account Group Code])||",
              "    ISFILTERED('GL Account by Chart Of Accounts'[Trading Partner Company Identifier])||",
              "    ISFILTERED('GL Account by Chart Of Accounts'[G/L Account Deletion Indicator])||",
              "    ISFILTERED('GL Account by Chart Of Accounts'[G/L Account Creation Blocked Indicator])||",
              "    ISFILTERED('GL Account by Chart Of Accounts'[G/L Account Posting Blocked Indicator])||",
              "    ISFILTERED('GL Account by Chart Of Accounts'[G/L Account Planning Blocked Indicator])||",
              "    ISFILTERED('GL Account by Chart Of Accounts'[Functional Area Code])||",
              "    ISFILTERED('GL Account by Chart Of Accounts'[G/L Account Short Description])||",
              "    ISFILTERED('GL Account by Chart Of Accounts'[G/L Account Long Description])",
              "",
              "    ",
              ", TRUE())   ",
              ""
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "isHidden": true,
            "displayFolder": "CCA Detail"
          },
          {
            "name": "Actual Amount By Document Date",
            "description": "actual amount posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "CALCULATE(sum(FACT_CCA_ACTUALS[ACTUAL_AMT]), USERELATIONSHIP(FACT_CCA_ACTUALS[DOCUMENT_DATE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA By Document Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual Fixed Amount By Posting Date",
            "description": "actual fixed amount posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "CALCULATE(sum(FACT_CCA_ACTUALS[ACTUAL_FIXED_AMT]), USERELATIONSHIP(FACT_CCA_ACTUALS[POSTING_DATE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA By Posting Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual Variable Amount By Posting Date",
            "description": "actual variable amount (Actual Amount - Actual Fixed Amount) posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "CALCULATE(sum(FACT_CCA_ACTUALS[ACTUAL_VARIABLE_AMT]), USERELATIONSHIP(FACT_CCA_ACTUALS[POSTING_DATE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA By Posting Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual Consumption Quantity By Posting Date",
            "description": "the actual number of items consumed in the transaction at the given cost center, which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
            "expression": "CALCULATE(sum(FACT_CCA_ACTUALS[ACTUAL_CONSUMPTION_QTY]), USERELATIONSHIP(FACT_CCA_ACTUALS[POSTING_DATE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA By Posting Date"
          },
          {
            "name": "Actual Fixed Consumption Quantity By Posting Date",
            "description": "the actual fixed number of items consumed in the transaction at the given cost center, which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
            "expression": "CALCULATE(sum(FACT_CCA_ACTUALS[ACTUAL_FIX_CONSUMPTION_QTY]), USERELATIONSHIP(FACT_CCA_ACTUALS[POSTING_DATE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA By Posting Date"
          },
          {
            "name": "Actual Variable Consumption Quantity By Posting Date",
            "description": [
              "\"the actual variable number of items consumed in the transaction at the given cost center (Actual Consumption Quantity - Actual Fixed Consumption Quantity), which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
              "",
              "The Unit of Measure (UOM) that is most common is hours. However, there can be other Units of Measure such as KG, CM, BAG, etc.\""
            ],
            "expression": "CALCULATE(sum(FACT_CCA_ACTUALS[ACTUAL_VARIABLE_CONSUMPTION_QTY]), USERELATIONSHIP(FACT_CCA_ACTUALS[POSTING_DATE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA By Posting Date"
          },
          {
            "name": "Actual Fixed Amount By Document Date",
            "description": "actual fixed amount posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "CALCULATE(sum(FACT_CCA_ACTUALS[ACTUAL_FIXED_AMT]), USERELATIONSHIP(FACT_CCA_ACTUALS[DOCUMENT_DATE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA By Document Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual Variable Amount By Document Date",
            "description": "actual variable amount (Actual Amount - Actual Fixed Amount) posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "CALCULATE(sum(FACT_CCA_ACTUALS[ACTUAL_VARIABLE_AMT]), USERELATIONSHIP(FACT_CCA_ACTUALS[DOCUMENT_DATE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA By Document Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual Consumption Quantity By Document Date",
            "description": "the actual number of items consumed in the transaction at the given cost center, which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
            "expression": "CALCULATE(sum(FACT_CCA_ACTUALS[ACTUAL_CONSUMPTION_QTY]), USERELATIONSHIP(FACT_CCA_ACTUALS[DOCUMENT_DATE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA By Document Date"
          },
          {
            "name": "Actual Fixed Consumption Quantity By Document Date",
            "description": "the actual fixed number of items consumed in the transaction at the given cost center, which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
            "expression": "CALCULATE(sum(FACT_CCA_ACTUALS[ACTUAL_FIX_CONSUMPTION_QTY]), USERELATIONSHIP(FACT_CCA_ACTUALS[DOCUMENT_DATE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA By Document Date"
          },
          {
            "name": "Actual Variable Consumption Quantity By Document Date",
            "description": [
              "\"the actual variable number of items consumed in the transaction at the given cost center (Actual Consumption Quantity - Actual Fixed Consumption Quantity), which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
              "",
              "The Unit of Measure (UOM) that is most common is hours. However, there can be other Units of Measure such as KG, CM, BAG, etc.\""
            ],
            "expression": "CALCULATE(sum(FACT_CCA_ACTUALS[ACTUAL_VARIABLE_CONSUMPTION_QTY]), USERELATIONSHIP(FACT_CCA_ACTUALS[DOCUMENT_DATE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA By Document Date"
          },
          {
            "name": "Actual Amount Summary",
            "description": "actual amount posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "sum(FACT_CCA_PLAN_ACTUALS[ACTUAL_AMT])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA Summary",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Plan Amount Summary",
            "description": "plan amount posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "sum(FACT_CCA_PLAN_ACTUALS[PLAN_AMT])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA Summary",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual Fixed Amount Summary",
            "description": "actual fixed amount posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "sum(FACT_CCA_PLAN_ACTUALS[ACTUAL_FIXED_AMT])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA Summary",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual Variable Amount Summary",
            "description": "actual variable amount (Actual Amount - Actual Fixed Amount) posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "sum(FACT_CCA_PLAN_ACTUALS[ACTUAL_VARIABLE_AMT])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA Summary",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual Consumption Quantity Summary",
            "description": "the actual number of items consumed in the transaction at the given cost center, which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
            "expression": "sum(FACT_CCA_PLAN_ACTUALS[actual_consumption_qty])",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA Summary"
          },
          {
            "name": "Actual Fixed Consumption Quantity Summary",
            "description": "the actual fixed number of items consumed in the transaction at the given cost center, which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
            "expression": "sum(FACT_CCA_PLAN_ACTUALS[actual_fix_consumption_qty])",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA Summary"
          },
          {
            "name": "Actual Variable Consumption Quantity Summary",
            "description": [
              "\"the actual variable number of items consumed in the transaction at the given cost center (Actual Consumption Quantity - Actual Fixed Consumption Quantity), which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
              "",
              "The Unit of Measure (UOM) that is most common is hours. However, there can be other Units of Measure such as KG, CM, BAG, etc.\""
            ],
            "expression": "sum(FACT_CCA_PLAN_ACTUALS[actual_var_consumption_qty])",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA Summary"
          },
          {
            "name": "Plan Fixed Amount Summary",
            "description": "plan fixed amount posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "sum(FACT_CCA_PLAN_ACTUALS[plan_fixed_amt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA Summary",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Plan Variable Amount Summary",
            "description": "plan variable amount (Plan Amount - Plan Fixed Amount) posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "sum(FACT_CCA_PLAN_ACTUALS[plan_variable_amt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA Summary",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Plan Consumption Quantity Summary",
            "description": "the planned number of items consumed in the transaction at the given cost center, which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
            "expression": "sum(FACT_CCA_PLAN_ACTUALS[plan_consumption_qty])",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA Summary"
          },
          {
            "name": "Plan Fixed Consumption Quantity Summary",
            "description": "the planned fixed number of items consumed in the transaction at the given cost center, which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
            "expression": "sum(FACT_CCA_PLAN_ACTUALS[plan_fix_consumption_qty])",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA Summary"
          },
          {
            "name": "Plan Variable Consumption Quantity Summary",
            "description": [
              "\"the planned variable number of items consumed in the transaction at the given cost center (Plan Consumption Quantity - Plan Fixed Consumption Quantity), which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
              "",
              "The Unit of Measure (UOM) that is most common is hours. However, there can be other Units of Measure such as KG, CM, BAG, etc.\""
            ],
            "expression": "sum(FACT_CCA_PLAN_ACTUALS[plan_var_consumption_qty])",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA Summary"
          },
          {
            "name": "Actual Amount Detail",
            "description": "actual amount posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "sum(FACT_CCA_ACTUALS[ACTUAL_AMT])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA Detail",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual Fixed Amount Detail",
            "description": "actual fixed amount posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "sum(FACT_CCA_ACTUALS[ACTUAL_FIXED_AMT])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA Detail",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual Variable Amount Detail",
            "description": "actual variable amount (Actual Amount - Actual Fixed Amount) posted to the cost center for the given transaction, which is used in cost center spend analysis (where plan and actual values are compared), stored as a decimal in the currency of the transaction",
            "expression": "sum(FACT_CCA_ACTUALS[ACTUAL_VARIABLE_AMT])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "displayFolder": "CCA Detail",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Actual Consumption Quantity Detail",
            "description": "the actual number of items consumed in the transaction at the given cost center, which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
            "expression": "sum(FACT_CCA_ACTUALS[ACTUAL_CONSUMPTION_QTY])",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA Detail"
          },
          {
            "name": "Actual Fixed Consumption Quantity Detail",
            "description": "the actual fixed number of items consumed in the transaction at the given cost center, which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
            "expression": "sum(FACT_CCA_ACTUALS[ACTUAL_FIX_CONSUMPTION_QTY])",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA Detail"
          },
          {
            "name": "Actual Variable Consumption Quantity Detail",
            "description": [
              "\"the actual variable number of items consumed in the transaction at the given cost center (Actual Consumption Quantity - Actual Fixed Consumption Quantity), which is used in cost center utilization analysis (where plan and actual values are compared), stored as a decimal in the unit of measure for the transaction",
              "",
              "The Unit of Measure (UOM) that is most common is hours. However, there can be other Units of Measure such as KG, CM, BAG, etc.\""
            ],
            "expression": "sum(FACT_CCA_ACTUALS[ACTUAL_VARIABLE_CONSUMPTION_QTY])",
            "formatString": "0.00",
            "isHidden": true,
            "displayFolder": "CCA Detail"
          },
          {
            "name": "Actuals Detail RowCount",
            "description": "Fact CCA Actual detail table Row Count",
            "expression": " COUNTROWS(FACT_CCA_ACTUALS)",
            "formatString": "0",
            "displayFolder": "CCA"
          },
          {
            "name": "Plan Actual Summary RowCount",
            "description": "Fact CCA Plan Actual summary table row count",
            "expression": " COUNTROWS(FACT_CCA_PLAN_ACTUALS)",
            "formatString": "0",
            "displayFolder": "CCA"
          },
          {
            "name": "Var Plan Actual Amount",
            "expression": " [Plan Amount] - [Actual Amount]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "CCA",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Var PCT Plan Actual Amount",
            "expression": " DIVIDE([Var Plan Actual Amount],[Plan Amount])",
            "formatString": "0.00 %;-0.00 %;0.00 %",
            "displayFolder": "CCA"
          }
        ],
        "hierarchies": [
          {
            "name": "Hierarchy1"
          }
        ]
      },
      {
        "name": "DIM_CUST_SLS",
        "columns": [
          {
            "name": "CUST_SLS_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "CUST_SLS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Identifier",
            "dataType": "string",
            "description": "business partner identifier in SAP for the company (such as a distributor, or an end customer) that purchased the product, stored as a nvarchar",
            "sourceColumn": "Business Partner Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Organization Code",
            "dataType": "string",
            "description": [
              "a company code in SAP (four digits stored as text, for example,  US = 1000, Canada = 2000, Germany = 4016, France = 4013, Netherlands = 4100) representing the smallest organizational unit (\"\"sales org\"\") for which a complete self-contained set of accounts can be drawn up for purposes of external reporting, financial statements, and profit and loss statements, stored as a 4-digit nvarchar",
              "",
              "Each product (based on material master data that includes current series, delivering plant, minimum order quantity, price, brand, etc) is assigned to and managed uniquely for the Sales Org for each country in which the product will be sold to support sales to third parties and inter-company Stock Transport Orders.  The US and Canada are each organized into a single Sales Org, whereas Asia/Pacific, EMEA, and Latin America each have a dozen or two."
            ],
            "sourceColumn": "Sales Organization Code",
            "encodingHint": "hash"
          },
          {
            "name": "Distribution Channel Code",
            "dataType": "string",
            "description": "code to identify the type of sale within a sales organization in SAP (such as 01 for Rockwell D/Channel, meaning direct sales), stored as a nvarchar",
            "sourceColumn": "Distribution Channel Code",
            "encodingHint": "hash"
          },
          {
            "name": "Division Code",
            "dataType": "string",
            "description": "code in SAP that identifies divisions within Rockwell Automation (currently, there is only one:  00 for Rockwell Div. '00'), stored as a nvarchar",
            "sourceColumn": "Division Code",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Account Deletion Indicator",
            "dataType": "string",
            "description": [
              "indicator of whether the customer is active or inactive (blank means that the customer is active, and X means the customer is inactive), stored as a nvarchar",
              "",
              "This indicator is used during analysis as a filter to include only customers that are still active at the Sales Organization level."
            ],
            "sourceColumn": "Customer Account Deletion Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Sales District Code",
            "dataType": "string",
            "description": "code in SAP for the Rockwell Automation district sales area (such as SEA for Seattle or BOS for Boston), comprised of multiple sales offices, responsible for providing support to the sold-to customer, stored as a nvarchar",
            "sourceColumn": "Sales District Code",
            "encodingHint": "hash"
          },
          {
            "name": "Incoterms Code",
            "dataType": "string",
            "description": "code for an International Commercial Term (such as FOB for Free On Board, FCA for Free Carrier, CFR for Cost and Freight, and CPT for Carriage Paid To), which is one of a series of pre-defined commercial terms published by the International Chamber of Commerce (ICC) and specifies the obligations, costs, and risks involved in the delivery of goods from the seller to the buyer, stored as a three-letter nvarchar",
            "sourceColumn": "Incoterms Code",
            "encodingHint": "hash"
          },
          {
            "name": "Incoterms Details",
            "dataType": "string",
            "description": "free-form text to provide specific instructions aligned with the given Incoterms Code (such as \"Shipping Point\" with Incoterms Code FCA for Free Carrier or \"Destination\" with Incoterms Code FOB for Free On Board), stored as a nvarchar",
            "sourceColumn": "Incoterms Details",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Account Assignment Group",
            "dataType": "string",
            "description": [
              "classification (see examples below) to segregate accounts during the automatic determination of revenue in SAP, stored as a nvarchar",
              "",
              "01 = 3rd Party Vendor Revenue",
              "02 = Intercompany/Intracompany Revenue",
              "Z1 = 3rd Party Vendor Sales",
              "Z2 = 3rd Party Vendor Cost of Goods Sold (COGS)",
              "Z3 = Stock Transfer Order India AAG"
            ],
            "sourceColumn": "Customer Account Assignment Group",
            "encodingHint": "hash"
          },
          {
            "name": "Delivering Plant Code",
            "dataType": "string",
            "description": [
              "code in SAP for the plant (4 digits stored as text, such as 1020 for Twinsburg, 1090 for the Champaign Distribution Center, 4000 for the Central European Distribution Center, and 4080 for the EMEA main service hub) at which the specified material is produced, or goods and services are provided, stored as a nvarchar",
              "",
              "This plant is also known as the \"\"delivering\"\" or \"\"sending\"\" plant.",
              "",
              "The Plant Code is needed to calculate landed costs."
            ],
            "sourceColumn": "Delivering Plant Code",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Office Code",
            "dataType": "string",
            "description": "code in SAP for the Rockwell Automation sales office (such as DET for Detroit or MKE for Milwaukee) responsible for providing support to the sold-to customer, stored as a three-letter nvarchar",
            "sourceColumn": "Sales Office Code",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Document Invoice Review Code",
            "dataType": "string",
            "description": [
              "\"code in SAP that identifies whether or how an invoice will be reviewed and processed (see list below), stored as a nvarchar",
              "",
              "01 = Auto Distribute Invoice",
              "02 = Manual Review Invoice",
              "03 = Both",
              "04 = Non-EDI - Passport",
              "05 = Standard List Price",
              "06 = Unit net and extend",
              "07 = Extended net only",
              "08 = No line item pricing",
              "",
              "The manual invoice review function is used to hold an invoice or credit memo (not send it to the end customer) until additional review has been completed.  Manual reviews are done in several situations, for instance if Rockwell Automation needs to send the invoice or credit memo with supporting documentation, or to make internal billing adjustments (match the invoice with a credit memo that does not have to be sent to customer, internal credit memos​, or internal invoices​).",
              "",
              "Known as Customer Group 1 in SAP\""
            ],
            "sourceColumn": "Sales Document Invoice Review Code",
            "encodingHint": "hash"
          },
          {
            "name": "Consolidated Billing Frequency Code",
            "dataType": "string",
            "description": "code in SAP that identifies the frequency at which invoices are generated for a customer with a pricing agreement (such as MO for Monthly Consolidation Billing), stored as a nvarchar",
            "sourceColumn": "Consolidated Billing Frequency Code",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Group 5 Code In SAP",
            "dataType": "string",
            "description": [
              "code in SAP for the format and information included or excluded in electronic copies of invoices and billing documents sent to customers (such as CON for First Line Extended Net, NET for Extended Net, SIT for Suppress Item, STD for List Price / Discount / Extended Net, SUP for Suppress Both, TOT for Order Total Pricing, or UNT for Net / Extended Net), stored as a string",
              "",
              "Rockwell Automation also uses the Customer Group Code to set up pricing conditions or contracts, determine invoice terms, print invoices, and for reporting.",
              "",
              "Known as KVGR5, Customer Group 5, in SAP."
            ],
            "sourceColumn": "Customer Group 5 Code In SAP",
            "encodingHint": "hash"
          },
          {
            "name": "Sold To Business Partner Name",
            "dataType": "string",
            "description": "name associated with the Sold To Business Partner Identifier in SAP for the company (such as a distributor or an end customer) that purchased the product on the given sales order, stored as a string",
            "sourceColumn": "Sold To Business Partner Name",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CUST_SLS = Source{[Schema=\"GLBL\",Item=\"V_DIM_CUST_SLS_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CUST_SLS,{\"CUST_SLS_KEY\", \"Business Partner Identifier\", \"Sales Organization Code\", \"Distribution Channel Code\", \"Division Code\", \"Customer Account Deletion Indicator\", \"Sales District Code\", \"Incoterms Code\", \"Incoterms Details\", \"Customer Account Assignment Group\", \"Delivering Plant Code\", \"Sales Office Code\", \"Sales Document Invoice Review Code\", \"Consolidated Billing Frequency Code\", \"Customer Group 5 Code In SAP\", \"Sold To Business Partner Name\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_COPA_CODES_1",
        "columns": [
          {
            "name": "COPA_CODES_1_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "COPA_CODES_1_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Billing Type",
            "dataType": "string",
            "description": "code for the billing type (such as ZF2 for RA Service Invoice, ZF6 for RA Invoice, and ZF8 for RA Pro Forma Invoice, or warranty if the customer will not be charged, billable if the customer will be charged for the repair service, or not assigned if not yet determined) in SAP, stored as a nvarchar",
            "sourceColumn": "Billing Type",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Transaction Type From CRM",
            "dataType": "string",
            "description": "code that represents the type of business transaction in SAP CRM (for example, ZSAG = RA Corp Agreement, ZSDC = RA Debit Correction, and ZSPM = Project Milestone Billing), stored as a four-letter string",
            "sourceColumn": "Transaction Type From CRM",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "CRM Item Number In Document",
            "dataType": "string",
            "sourceColumn": "CRM Item Number In Document"
          },
          {
            "name": "Product Line from Profit Center",
            "dataType": "string",
            "sourceColumn": "Product Line from Profit Center"
          },
          {
            "name": "Business Unit From Profit Center",
            "dataType": "string",
            "sourceColumn": "Business Unit From Profit Center"
          },
          {
            "name": "Customer SIC Code",
            "dataType": "string",
            "sourceColumn": "Customer SIC Code"
          },
          {
            "name": "Region from Profit Center",
            "dataType": "string",
            "sourceColumn": "Region from Profit Center"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_COPA_V_DIM_COPA_CODES_1_BusNm = Source{[Schema=\"FIN_COPA\",Item=\"V_DIM_COPA_CODES_1_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_COPA_V_DIM_COPA_CODES_1_BusNm,{\"COPA_CODES_1_KEY\", \"Billing Type\", \"Transaction Type From CRM\", \"Product Line from Profit Center\", \"Business Unit From Profit Center\", \"Region from Profit Center\", \"CRM Item Number In Document\", \"Customer SIC Code\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Time Intelligence",
        "calculationGroup": {
          "precedence": 30,
          "calculationItems": [
            {
              "name": "MTD",
              "expression": "CALCULATE(SELECTEDMEASURE(), DATESMTD(DIM_DATE[Date Dt]))",
              "ordinal": 0
            },
            {
              "name": "QTD",
              "expression": "CALCULATE(SELECTEDMEASURE(), DATESQTD(DIM_DATE[Date Dt]))",
              "ordinal": 1
            },
            {
              "name": "YTD",
              "expression": "Calculate(SELECTEDMEASURE(),DATESYTD(DIM_DATE[Date Dt],\"9-30\"))",
              "ordinal": 2
            },
            {
              "name": "CY",
              "expression": "SELECTEDMEASURE()",
              "ordinal": 3
            },
            {
              "name": "YOY",
              "expression": [
                "VAR CY =",
                "        SELECTEDMEASURE ()",
                "    VAR PY =",
                "        CALCULATE (",
                "            SELECTEDMEASURE (),",
                "            SAMEPERIODLASTYEAR (dim_date[date dt] )",
                "        )",
                "    VAR Result = CY- PY",
                "    RETURN Result"
              ],
              "ordinal": 5
            },
            {
              "name": "YOY%",
              "expression": [
                "VAR CY=",
                "        SELECTEDMEASURE ()",
                "VAR PY =",
                "        CALCULATE (",
                "            SELECTEDMEASURE (),",
                "            SAMEPERIODLASTYEAR (dim_date[Date Dt] )",
                "        )",
                "VAR Delta=CY - PY",
                "",
                "VAR Result=",
                "      IF(",
                "          NOT ISBLANK(CY),",
                "          DIVIDE(Delta, PY)",
                "        )",
                "",
                "RETURN Result"
              ],
              "ordinal": 6,
              "formatStringDefinition": {
                "expression": "\"0.00%\""
              }
            },
            {
              "name": "PY",
              "expression": [
                "CALCULATE(",
                "SELECTEDMEASURE(),",
                "SAMEPERIODLASTYEAR (DIM_DATE[Date Dt])",
                ")",
                ""
              ],
              "ordinal": 4
            }
          ]
        },
        "columns": [
          {
            "name": "Time Calculation",
            "dataType": "string",
            "sourceColumn": "Name",
            "sortByColumn": "Ordinal"
          },
          {
            "name": "Ordinal",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Ordinal"
          }
        ],
        "partitions": [
          {
            "name": "CalculationGroup 1",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "DIM_RPTG_CAT",
        "isHidden": true,
        "columns": [
          {
            "name": "RPTG_CAT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "RPTG_CAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Reporting Category Code",
            "dataType": "string",
            "description": [
              "code in SAP (such as 2005 for CRM Service) defined by the Rockwell Automation Finance team and used for generating reports, stored as a string",
              "",
              "Known as free characteristic WWFAR and defined in SPRO in the SAP COPA configuration."
            ],
            "sourceColumn": "Reporting Category Code",
            "encodingHint": "hash"
          },
          {
            "name": "Reporting Category Description",
            "dataType": "string",
            "description": [
              "description associated with the code in SAP (such as CRM Service for Reporting Category Code 2005) defined by the Rockwell Automation Finance team and used for generating reports, stored as a string",
              "",
              "Known as free characteristic WWFAR and defined in SPRO in the SAP COPA configuration."
            ],
            "sourceColumn": "Reporting Category Description",
            "encodingHint": "hash"
          },
          {
            "name": "Reporting Cat Code and Desc",
            "dataType": "string",
            "description": "concatenation of the Reporting Category Code in SAP and the associated Reporting Category Description (such as 2005-CRM Service), stored as a nvarchar",
            "sourceColumn": "Reporting Cat Code and Desc",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_RPTG_CAT = Source{[Schema=\"GLBL\",Item=\"V_DIM_RPTG_CAT_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_RPTG_CAT,{\"RPTG_CAT_KEY\", \"Reporting Category Code\", \"Reporting Category Description\", \"Reporting Cat Code and Desc\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_SECURITY_COPA",
        "isHidden": true,
        "columns": [
          {
            "name": "LOW_VALUE",
            "dataType": "string",
            "description": "standard data element within the SAP ABAP dictionary, of which Low = 1 and High = 100, used in configuration objects to limit values of a certain characteristic or dimension, stored as a nvarchar",
            "sourceColumn": "LOW_VALUE",
            "encodingHint": "hash"
          },
          {
            "name": "VARIABLE_NAME",
            "dataType": "string",
            "description": [
              "name associated with the data object (such as ZPRFTCTR), which refers to the memory location allocated during the program execution for processing, stored as a nvarchar",
              "",
              "A user can change the contect of the variable using an ABAP statement."
            ],
            "sourceColumn": "VARIABLE_NAME",
            "encodingHint": "hash"
          },
          {
            "name": "ROLE_NAME",
            "dataType": "string",
            "description": [
              "\"identifier used to group the analysis authorizations associated with the user (such as ZE_BI_PROF_CENTER_ENABLER_ALL), stored as a nvarchar",
              "",
              "Upon the generation of the role, a profile is created, which contains the authorizations. A profile may also be created manually using the transaction code--SU02. The transaction code--PFCG is used to manage roles.\""
            ],
            "sourceColumn": "ROLE_NAME",
            "encodingHint": "hash"
          },
          {
            "name": "SAP_USER_NAME",
            "dataType": "string",
            "description": "name of the account for the person in SAP (such as SAPTRN022) that has accessed the Controlling & Profitability Analysis (COPA) tool, stored as a nvarchar",
            "sourceColumn": "SAP_USER_NAME",
            "encodingHint": "hash"
          },
          {
            "name": "VAY_VALIDITY",
            "dataType": "string",
            "description": "period that starts with a valid-from date (required) and can end with a valid-to date (optional), based upon the given role name, stored as a nvarchar",
            "sourceColumn": "VAY_VALIDITY",
            "encodingHint": "hash"
          },
          {
            "name": "ANLYSS_AUTHZN_ID",
            "dataType": "string",
            "description": "identifier associated with the authorization concept in SAP (such as Z_PRCTR_ALL), that describes how data access is controlled, which limits a users ability to access certain data or to perform certain activities in the business intelligence (BI) environment, based upon authorization objects, stored as a nvarchar",
            "sourceColumn": "ANLYSS_AUTHZN_ID",
            "encodingHint": "hash"
          },
          {
            "name": "USER_PRNCPL_NAME",
            "dataType": "string",
            "description": [
              "\"name (such as SAPTRN022@rockwellautomation.com), which is provided upon successful authentication with Active Directory, stored as a nvarchar",
              "",
              "The User Principal Name is mapped to an SAP user, as defined in the SNC tab of that user's profile. \""
            ],
            "sourceColumn": "USER_PRNCPL_NAME",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN.V_DIM_SECURITY = Source{[Schema=\"FIN\",Item=\"V_DIM_SECURITY\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN.V_DIM_SECURITY,{\"LOW_VALUE\", \"VARIABLE_NAME\", \"ROLE_NAME\", \"SAP_USER_NAME\", \"VAY_VALIDITY\", \"ANLYSS_AUTHZN_ID\", \"USER_PRNCPL_NAME\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_SLS_OFFICE",
        "columns": [
          {
            "name": "SLS_OFFICE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "SLS_OFFICE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Office Code",
            "dataType": "string",
            "description": "code in SAP for the Rockwell Automation sales office (such as DET for Detroit or MKE for Milwaukee) responsible for providing support to the sold-to customer, stored as a three-letter string",
            "sourceColumn": "Sales Office Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Office Name",
            "dataType": "string",
            "description": "name associated with the code in SAP for the Rockwell Automation sales office (such as DET for Detroit or MKE for Milwaukee) responsible for providing support to the sold-to customer, stored as a nvarchar",
            "sourceColumn": "Sales Office Name",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Office Code and Name",
            "dataType": "string",
            "description": "concatenation of the Sales Office Code and the Sales Office Name (such as DET - Detroit and MKE - Milwaukee), stored as a nvarchar",
            "sourceColumn": "Sales Office Code and Name",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_SLS_OFFICE_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_SLS_OFFICE_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_SLS_OFFICE_BusNm,{\"SLS_OFFICE_KEY\", \"Sales Office Code\", \"Sales Office Name\", \"Sales Office Code and Name\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Currency Conversion",
        "calculationGroup": {
          "precedence": 1,
          "calculationItems": [
            {
              "name": "P Rate Conversion",
              "expression": [
                "VAR ISCOPASELECTED=",
                "    ISSELECTEDMEASURE(",
                "           [Adjusted Cost Component],",
                "           [ASC 606 Rebates Adjustments],",
                "           [Billable Outbound Freight Costs],",
                "           [Billable Outbound Freight Costs Manual Adjustments],",
                "           [Cost Interco. Mark Up],",
                "           [Cost Of Goods Sold Manual Adjustments],",
                "           [Discounts Manual Adjustments],",
                "           [Duty And Brokerage Costs],",
                "           [External Procurement Costs],",
                "           [Finished Goods Costs],",
                "           [Fully Burdened Absorption Costs],",
                "           [Goods Usage Costs],",
                "           [Import Duty Costs],",
                "           [Inbound Freight Costs],",
                "           [Inter-company Manual Service Charges],",
                "           [Inter-company Markup],",
                "           [Inter-company Transfer Costs],",
                "           [Inter-company Transfer Manual Adjustments],",
                "           [Machine Absorption Costs],",
                "           [Raw Materials Costs],",
                "           [Revenue],",
                "           [Revenue Manual Adjustments],",
                "           [Sales Discounts],",
                "           [Sales Rebates],",
                "           [Settlement Billable Expenses],",
                "           [Settlement Billed Expenses],",
                "           [Settlement Cost Of Sales Primary],",
                "           [Settlement Cost Of Sales Secondary],",
                "           [Settlement Discounts],",
                "           [Settlement Expenses],",
                "           [Settlement Rebates],",
                "           [Settlement Revenue],",
                "           [SFSAC Sales Adjustments],",
                "           [Standard Margin Amount],",
                "           [Standard Margin Excluding Inter-company],",
                "           [Stock Value],",
                "           [Subcontracting Expenses],",
                "           [Total Cost Of Sales],",
                "           [Total Of Cost Components],",
                "           [Total Revenue],",
                "           [Total_ADMIN_EXP_COST],",
                "           [Total_CASH_DISC_AMT],",
                "           [Total_COST_GOODS_SOLD],",
                "           [Total_CUST_DISC_AMT],",
                "           [Total_CUSTMS_BRKRG_COST],",
                "           [Total_DIR_MATL_COST],",
                "           [Total_DISC_VAL],",
                "           [Total_DSTBN_COST],",
                "           [Total_ENGRNG_EXP_COST],",
                "           [Total_EXTD_LIST_PRC_AMT],",
                "           [Total_INDIR_MATL_COST],",
                "           [Total_INPT_PRC_VARNC_AMT],",
                "           [Total_INPT_PRC_VARNC_SCNDRY_AMT],",
                "           [Total_INPT_QTY_VARNC_AMT],",
                "           [Total_LGSTCS_OVRHD_COST],",
                "           [Total_LOT_SIZE_VARNC_AMT],",
                "           [Total_LOT_SIZE_VARNC_SCNDRY_AMT],",
                "           [Total_MIXED_PRC_VARNC_AMT],",
                "           [Total_MIXED_PRC_VARNC_SCNDRY_AMT],",
                "           [Total_MKTG_OVRHD_COST],",
                "           [Total_NET_VAL],",
                "           [Total_OPRTG_PRFT_AMT],",
                "           [Total_OTHER_COST_SLS_AMT],",
                "           [Total_OTHER_OVRHD_COST],",
                "           [Total_OTHER_SLS_DEDCTN_AMT],",
                "           [Total_OTHER_VARNC_AMT],",
                "           [Total_OUTBND_FXD_COST],",
                "           [Total_OUTPT_PRC_VARNC_AMT],",
                "           [Total_OUTPT_PRC_VARNC_SCNDRY_AMT],",
                "           [Total_PRMTN_EXP_COST],",
                "           [Total_PROD_FXD_COST],",
                "           [Total_PRODN_VARNC_COST],",
                "           [Total_QTY_DISC_AMT],",
                "           [Total_RD_COST],",
                "           [Total_REMNG_IMPT_VARNC_AMT],",
                "           [Total_REMNG_IMPT_VARNC_SCNDRY_AMT],",
                "           [Total_REMNG_OUTPT_VARNC_AMT],",
                "           [Total_RESTK_FEE_AMT],",
                "           [Total_Revnu_605_Amt],",
                "           [Total_Revnu_606_Amt],",
                "           [Total_Revnu_Orig_Amt],",
                "           [Total_RSRC_USG_VARNC_AMT],",
                "           [Total_RSRC_USG_VARNC_SCNDRY_AMT],",
                "           [Total_SCRP_VARNC_AMT],",
                "           [Total_SCRP_VARNC_SCNDRY_AMT],",
                "           [Total_SEMI_FNSHD_GOODS_COST],",
                "           [Total_SETLMNT_DISC_CLM_AMT],",
                "           [Total_SETLMNT_DISC_PRMTN_INCNTV_AMT],",
                "           [Total_SETLMNT_NET_MARG_AMT],",
                "           [Total_SETLMNT_OTHER_VARNC_AMT],",
                "           [Total_SETLMNT_OUTBND_FRT_COST],",
                "           [Total_SETLMNT_RBTE_CLM_AMT],",
                "           [Total_SETLMNT_RBTE_PRMTN_INCNTV_AMT],",
                "           [Total_SFSAC_CLM_AMT],",
                "           [Total_SFSAC_LGCY_CLM_AMT],",
                "           [Total_SLS_COMSN_AMT],",
                "           [Total_SLS_EXP_RECVRY_AMT],",
                "           [Total_SPCL_DIR_SLS_COST],",
                "           [Total_STD_MARG_SLS_MO_EXCL_INTRCO_AMT],",
                "           [Total_STD_MARG_SLS_MTH_AMT],",
                "           [Total_TOT_GOODS_MFGD_FXD_COST],",
                "           [Total_TOT_OVRHD_COST],",
                "           [Total_TOT_SLS_DEDCTN_AMT],",
                "           [Total_TOT_VARNC_AMT],",
                "           [Total_WRN_CNCSSN_COST],",
                "           [Trading Goods Usage Costs],",
                "           [Volume Rebates]",
                "",
                "     ",
                "        )",
                "VAR ISCCASELECTED = ",
                "ISSELECTEDMEASURE",
                "        ([Actual Amount Summary]",
                "        , [Actual Fixed Amount Summary]",
                "        , [Actual Variable Amount Summary]",
                "        , [Plan Amount Summary]",
                "        , [Plan Fixed Amount Summary]",
                "        , [Plan Variable Amount Summary]",
                "        , [Actual Amount]",
                "        , [Actual Fixed Amount]",
                "        , [Actual Variable Amount]",
                "        , [Plan Amount]",
                "        , [Plan Fixed Amount]",
                "        , [Plan Variable Amount]",
                "        )",
                "",
                "VAR ISCCADETSELECTED = ",
                "ISSELECTEDMEASURE",
                "        ([Actual Amount]",
                "        , [Actual Fixed Amount]",
                "        , [Actual Variable Amount]",
                "        , [Actual Amount Detail]",
                "        , [Actual Fixed Amount Detail]",
                "        , [Actual Variable Amount Detail]",
                "        )    ",
                "",
                "VAR ISORDERSSELECTED = ",
                "    ISSELECTEDMEASURE",
                "            ([Net Trans Value by Requested Delivery Date]",
                "            , [Net Value by Billing Date]",
                "            , [Net Value by Confirmed Delivery Date]",
                "            , [Net Value In Transaction Currency]",
                "            , [Booking Extended Standard Discount Value In Document Currency Without Decimal Shift]",
                "            , [Extended List Price Value In Document Currency Without Decimal Shift]",
                "            , [Net Before Tax Value In Document Currency Without Decimal Shift]",
                "            , [Billable Outbound Freight Costs In Document Currency Without Decimal Shift]",
                "            , [Customer Discounts In Document Currency Without Decimal Shift]",
                "            , [Handling Charges In Document Currency Without Decimal Shift] ",
                "            ) ",
                "",
                "VAR ISBACKLOGSSELECTED = ",
                "    ISSELECTEDMEASURE",
                "            ([Net Value In Transaction Currency (Backlog)]",
                "             ,[Open Quantity Net Value in USD at M Rate]",
                "             ,[Cumulative Booked Quantity (Backlog)]",
                "             ,[Open Quantity In Sales Unit Of Measure]",
                "             ,[Booked Quantity (Backlog)]",
                "             ,[Open Quantity In Material Base Unit Of Measure]",
                "            ,[Booking Extended Standard Discount Value In Document Currency Without Decimal Shift (Backlog)]",
                "            ,[Net Value In USD At M Rate (Backlog)]",
                "            ,[Extended List Price Value In Document Currency Without Decimal Shift (Backlog)]",
                "            ,[Net Before Tax Value In Document Currency Without Decimal Shift (Backlog)]",
                "            ,[Billable Outbound Freight Costs In Document Currency Without Decimal Shift (Backlog)]",
                "            ,[Customer Discounts In Document Currency Without Decimal Shift (Backlog)]",
                "            ,[Handling Charges In Document Currency Without Decimal Shift (Backlog)]",
                "            ,[Open Quantity Net Value in Transaction Currency]  ",
                "            )",
                "   ",
                "     RETURN",
                "     ",
                "SWITCH(TRUE()",
                "        , HASONEVALUE (DIM_CRNCY[Currency Code]) &&  (ISCOPASELECTED), CALCULATE (SELECTEDMEASURE(),'Fact Selection'[Fact Selection]=\"P Rate COPA\")",
                "        , HASONEVALUE (DIM_CRNCY[Currency Code]) &&  (ISCCADETSELECTED), CALCULATE (SELECTEDMEASURE(),'Fact Selection'[Fact Selection]=\"P Rate CCA Detail\")",
                "        , HASONEVALUE (DIM_CRNCY[Currency Code]) &&  (ISCCASELECTED), CALCULATE (SELECTEDMEASURE(),'Fact Selection'[Fact Selection]=\"P Rate CCA\")",
                "        , HASONEVALUE (DIM_CRNCY[Currency Code]) &&  (ISORDERSSELECTED),CALCULATE (SELECTEDMEASURE(),'Fact Selection'[Fact Selection]=\"P Rate Orders\")",
                "        , HASONEVALUE (DIM_CRNCY[Currency Code]) &&  (ISBACKLOGSSELECTED),CALCULATE (SELECTEDMEASURE(),'Fact Selection'[Fact Selection]=\"P Rate Backlogs\")",
                "        , SELECTEDMEASURE()",
                "       )",
                "",
                "     ",
                ""
              ]
            },
            {
              "name": "M Rate Conversion",
              "expression": [
                "VAR ISCOPASELECTED=",
                "    ISSELECTEDMEASURE(",
                "           [Adjusted Cost Component],",
                "           [ASC 606 Rebates Adjustments],",
                "           [Billable Outbound Freight Costs],",
                "           [Billable Outbound Freight Costs Manual Adjustments],",
                "           [Cost Interco. Mark Up],",
                "           [Cost Of Goods Sold Manual Adjustments],",
                "           [Discounts Manual Adjustments],",
                "           [Duty And Brokerage Costs],",
                "           [External Procurement Costs],",
                "           [Finished Goods Costs],",
                "           [Fully Burdened Absorption Costs],",
                "           [Goods Usage Costs],",
                "           [Import Duty Costs],",
                "           [Inbound Freight Costs],",
                "           [Inter-company Manual Service Charges],",
                "           [Inter-company Markup],",
                "           [Inter-company Transfer Costs],",
                "           [Inter-company Transfer Manual Adjustments],",
                "           [Machine Absorption Costs],",
                "           [Raw Materials Costs],",
                "           [Revenue],",
                "           [Revenue Manual Adjustments],",
                "           [Sales Discounts],",
                "           [Sales Rebates],",
                "           [Settlement Billable Expenses],",
                "           [Settlement Billed Expenses],",
                "           [Settlement Cost Of Sales Primary],",
                "           [Settlement Cost Of Sales Secondary],",
                "           [Settlement Discounts],",
                "           [Settlement Expenses],",
                "           [Settlement Rebates],",
                "           [Settlement Revenue],",
                "           [SFSAC Sales Adjustments],",
                "           [Standard Margin Amount],",
                "           [Standard Margin Excluding Inter-company],",
                "           [Stock Value],",
                "           [Subcontracting Expenses],",
                "           [Total Cost Of Sales],",
                "           [Total Of Cost Components],",
                "           [Total Revenue],",
                "           [Total_ADMIN_EXP_COST],",
                "           [Total_CASH_DISC_AMT],",
                "           [Total_COST_GOODS_SOLD],",
                "           [Total_CUST_DISC_AMT],",
                "           [Total_CUSTMS_BRKRG_COST],",
                "           [Total_DIR_MATL_COST],",
                "           [Total_DISC_VAL],",
                "           [Total_DSTBN_COST],",
                "           [Total_ENGRNG_EXP_COST],",
                "           [Total_EXTD_LIST_PRC_AMT],",
                "           [Total_INDIR_MATL_COST],",
                "           [Total_INPT_PRC_VARNC_AMT],",
                "           [Total_INPT_PRC_VARNC_SCNDRY_AMT],",
                "           [Total_INPT_QTY_VARNC_AMT],",
                "           [Total_LGSTCS_OVRHD_COST],",
                "           [Total_LOT_SIZE_VARNC_AMT],",
                "           [Total_LOT_SIZE_VARNC_SCNDRY_AMT],",
                "           [Total_MIXED_PRC_VARNC_AMT],",
                "           [Total_MIXED_PRC_VARNC_SCNDRY_AMT],",
                "           [Total_MKTG_OVRHD_COST],",
                "           [Total_NET_VAL],",
                "           [Total_OPRTG_PRFT_AMT],",
                "           [Total_OTHER_COST_SLS_AMT],",
                "           [Total_OTHER_OVRHD_COST],",
                "           [Total_OTHER_SLS_DEDCTN_AMT],",
                "           [Total_OTHER_VARNC_AMT],",
                "           [Total_OUTBND_FXD_COST],",
                "           [Total_OUTPT_PRC_VARNC_AMT],",
                "           [Total_OUTPT_PRC_VARNC_SCNDRY_AMT],",
                "            [Total_PRMTN_EXP_COST],",
                "           [Total_PROD_FXD_COST],",
                "           [Total_PRODN_VARNC_COST],",
                "           [Total_QTY_DISC_AMT],",
                "           [Total_RD_COST],",
                "           [Total_REMNG_IMPT_VARNC_AMT],",
                "           [Total_REMNG_IMPT_VARNC_SCNDRY_AMT],",
                "           [Total_REMNG_OUTPT_VARNC_AMT],",
                "           [Total_RESTK_FEE_AMT],",
                "           [Total_Revnu_605_Amt],",
                "           [Total_Revnu_606_Amt],",
                "           [Total_Revnu_Orig_Amt],",
                "           [Total_RSRC_USG_VARNC_AMT],",
                "           [Total_RSRC_USG_VARNC_SCNDRY_AMT],",
                "           [Total_SCRP_VARNC_AMT],",
                "           [Total_SCRP_VARNC_SCNDRY_AMT],",
                "           [Total_SEMI_FNSHD_GOODS_COST],",
                "           [Total_SETLMNT_DISC_CLM_AMT],",
                "           [Total_SETLMNT_DISC_PRMTN_INCNTV_AMT],",
                "           [Total_SETLMNT_NET_MARG_AMT],",
                "           [Total_SETLMNT_OTHER_VARNC_AMT],",
                "           [Total_SETLMNT_OUTBND_FRT_COST],",
                "           [Total_SETLMNT_RBTE_CLM_AMT],",
                "           [Total_SETLMNT_RBTE_PRMTN_INCNTV_AMT],",
                "           [Total_SFSAC_CLM_AMT],",
                "           [Total_SFSAC_LGCY_CLM_AMT],",
                "           [Total_SLS_COMSN_AMT],",
                "           [Total_SLS_EXP_RECVRY_AMT],",
                "           [Total_SPCL_DIR_SLS_COST],",
                "           [Total_STD_MARG_SLS_MO_EXCL_INTRCO_AMT],",
                "           [Total_STD_MARG_SLS_MTH_AMT],",
                "           [Total_TOT_GOODS_MFGD_FXD_COST],",
                "           [Total_TOT_OVRHD_COST],",
                "           [Total_TOT_SLS_DEDCTN_AMT],",
                "           [Total_TOT_VARNC_AMT],",
                "           [Total_WRN_CNCSSN_COST],",
                "           [Trading Goods Usage Costs],",
                "           [Volume Rebates]",
                "",
                "     ",
                "        )",
                "",
                "VAR ISCCASELECTED = ",
                "    ISSELECTEDMEASURE",
                "            ([Actual Amount Summary]",
                "            , [Actual Fixed Amount Summary]",
                "            , [Actual Variable Amount Summary]",
                "            , [Plan Amount Summary]",
                "            , [Plan Fixed Amount Summary]",
                "            , [Plan Variable Amount Summary]",
                "            , [Plan Amount]",
                "            , [Plan Fixed Amount]",
                "            , [Plan Variable Amount]",
                "            , [Actual Amount]",
                "            , [Actual Fixed Amount]",
                "            , [Actual Variable Amount]",
                "            )",
                "",
                "VAR ISCCADETSELECTED = ",
                "    ISSELECTEDMEASURE",
                "            ([Actual Amount Detail]",
                "            , [Actual Fixed Amount Detail]",
                "            , [Actual Variable Amount Detail]",
                "            , [Actual Amount]",
                "            , [Actual Fixed Amount]",
                "            , [Actual Variable Amount]",
                "            )",
                "",
                "VAR ISORDERSSELECTED = ",
                "    ISSELECTEDMEASURE",
                "            ([Net Trans Value by Requested Delivery Date]",
                "            , [Net Value by Billing Date]",
                "            , [Net Value by Confirmed Delivery Date]",
                "            , [Net Value In Transaction Currency]",
                "            , [Booking Extended Standard Discount Value In Document Currency Without Decimal Shift]",
                "            , [Extended List Price Value In Document Currency Without Decimal Shift]",
                "            , [Net Before Tax Value In Document Currency Without Decimal Shift]",
                "            , [Billable Outbound Freight Costs In Document Currency Without Decimal Shift]",
                "            , [Customer Discounts In Document Currency Without Decimal Shift]",
                "            , [Handling Charges In Document Currency Without Decimal Shift]  ",
                "            )",
                "",
                "VAR ISBACKLOGSSELECTED = ",
                "    ISSELECTEDMEASURE",
                "            ([Net Value In Transaction Currency (Backlog)]",
                "             ,[Open Quantity Net Value in USD at M Rate]",
                "             ,[Cumulative Booked Quantity (Backlog)]",
                "             ,[Open Quantity In Sales Unit Of Measure]",
                "             ,[Booked Quantity (Backlog)]",
                "             ,[Open Quantity In Material Base Unit Of Measure]",
                "            ,[Booking Extended Standard Discount Value In Document Currency Without Decimal Shift (Backlog)]",
                "            ,[Net Value In USD At M Rate (Backlog)]",
                "            ,[Extended List Price Value In Document Currency Without Decimal Shift (Backlog)]",
                "            ,[Net Before Tax Value In Document Currency Without Decimal Shift (Backlog)]",
                "            ,[Billable Outbound Freight Costs In Document Currency Without Decimal Shift (Backlog)]",
                "            ,[Customer Discounts In Document Currency Without Decimal Shift (Backlog)]",
                "            ,[Handling Charges In Document Currency Without Decimal Shift (Backlog)]",
                "            ,[Open Quantity Net Value in Transaction Currency]  ",
                "            )",
                "",
                "RETURN",
                "SWITCH(TRUE()",
                "        , HASONEVALUE (DIM_CRNCY[Currency Code]) &&  (ISCOPASELECTED), CALCULATE (SELECTEDMEASURE(),'Fact Selection'[Fact Selection]=\"M Rate COPA\")",
                "        , HASONEVALUE (DIM_CRNCY[Currency Code]) &&  (ISCCADETSELECTED), CALCULATE (SELECTEDMEASURE(),'Fact Selection'[Fact Selection]=\"M Rate CCA Detail\")        ",
                "        , HASONEVALUE (DIM_CRNCY[Currency Code]) &&  (ISCCASELECTED), CALCULATE (SELECTEDMEASURE(),'Fact Selection'[Fact Selection]=\"M Rate CCA\")",
                "        , HASONEVALUE (DIM_CRNCY[Currency Code]) &&  (ISORDERSSELECTED),CALCULATE (SELECTEDMEASURE(),'Fact Selection'[Fact Selection]=\"M Rate Orders\")",
                "        , HASONEVALUE (DIM_CRNCY[Currency Code]) &&  (ISBACKLOGSSELECTED),CALCULATE (SELECTEDMEASURE(),'Fact Selection'[Fact Selection]=\"M Rate Backlogs\")",
                "        , SELECTEDMEASURE()",
                "       )",
                "   ",
                ""
              ]
            }
          ]
        },
        "columns": [
          {
            "name": "Conversion Types",
            "dataType": "string",
            "sourceColumn": "Name"
          }
        ],
        "partitions": [
          {
            "name": "CalculationGroup 1",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "DIM_CNTRY_SUBDIV",
        "columns": [
          {
            "name": "CTRY_SUBDIV_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated by the enterprise data warehouse in increments of 1, such as 100,101,102...) for the primary key in the Country Subdivision table within the data warehouse, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "CTRY_SUBDIV_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COUNTRY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COUNTRY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Country Code",
            "dataType": "string",
            "description": "code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a nvarchar",
            "sourceColumn": "Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "Region",
            "dataType": "string",
            "description": "name of the state, province, or county in SAP (such as Wisconsin for WI or Paris for 75), stored as a string",
            "sourceColumn": "Region",
            "encodingHint": "hash"
          },
          {
            "name": "Region Name",
            "dataType": "string",
            "description": "name of the state, province, or county in SAP (such as Wisconsin for WI or Paris for 75), stored as a string",
            "sourceColumn": "Region Name",
            "encodingHint": "hash"
          },
          {
            "name": "Region Code and Name",
            "dataType": "string",
            "description": "concatenation of the Region (State, Province, County) and the associated Region (State, Province, County) Name in SAP (such as WY - Wyoming or 01 - Buenos Aires), stored as a nvarchar",
            "sourceColumn": "Region Code and Name",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CNTRY_SUBDIV_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CTRY_SUBDIV_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CNTRY_SUBDIV_BusNm,{\"CTRY_SUBDIV_KEY\", \"COUNTRY_KEY\", \"Country Code\", \"Region\", \"Region Name\", \"Region Code and Name\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_COUNTRY",
        "columns": [
          {
            "name": "COUNTRY_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated by the enterprise data warehouse in increments of 1, such as 100,101,102...) for the primary key in the country table within the data warehouse, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "COUNTRY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Country Code",
            "dataType": "string",
            "description": "code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a two-character nvarchar",
            "sourceColumn": "Country Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Country Code and Name",
            "dataType": "string",
            "description": "concatenation of the Country Code in SAP and the associated country name (such as DE - Germany or PE - Peru.), stored as a nvarchar",
            "sourceColumn": "Country Code and Name",
            "encodingHint": "hash"
          },
          {
            "name": "Country Name",
            "dataType": "string",
            "description": "name associated with the code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a two-character VARCHAR",
            "sourceColumn": "Country Name",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_COUNTRY_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_COUNTRY_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_COUNTRY_BusNm,{\"COUNTRY_KEY\", \"Country Code\", \"Country Name\", \"Country Code and Name\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_COPA_HEADER_2",
        "columns": [
          {
            "name": "COPA_HEADER_2_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COPA_HEADER_2_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Reference Document Identifier",
            "dataType": "string",
            "description": [
              "\"identifier for the originating document in SAP (see examples below), stored as a nvarchar",
              "",
              "The originating document could be one of several types of transactions, such as:",
              "- a Finance settlement document in SAP ECC for a SAP CRM transaction such as a service order or service contract",
              "- a Finance settlement document for a production order in SAP ECC",
              "- a Billing document for a customer invoice in SAP ECC\""
            ],
            "sourceColumn": "Reference Document Identifier",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Document Identifier",
            "dataType": "string",
            "description": "identifier for the document that represents the sales transaction in SAP, stored as a nvarchar",
            "sourceColumn": "Sales Document Identifier",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_COPA_V_DIM_COPA_HEADER_2_BusNm = Source{[Schema=\"FIN_COPA\",Item=\"V_DIM_COPA_HEADER_2_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_COPA_V_DIM_COPA_HEADER_2_BusNm,{\"COPA_HEADER_2_KEY\", \"Reference Document Identifier\", \"Sales Document Identifier\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_COPA_HEADER_3",
        "columns": [
          {
            "name": "COPA_HEADER_3_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COPA_HEADER_3_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Order Number",
            "dataType": "string",
            "sourceColumn": "Sales Order Number",
            "encodingHint": "hash"
          },
          {
            "name": "Contract Number",
            "dataType": "string",
            "sourceColumn": "Contract Number",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_COPA_V_DIM_COPA_HEADER_3 = Source{[Schema=\"FIN_COPA\",Item=\"V_DIM_COPA_HEADER_3_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_COPA_V_DIM_COPA_HEADER_3,{\"COPA_HEADER_3_KEY\", \"Sales Order Number\", \"Contract Number\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_COUNTRY_REGION",
        "columns": [
          {
            "name": "COUNTRY_REGION_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COUNTRY_REGION_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Country Company Code",
            "dataType": "string",
            "sourceColumn": "Country Company Code",
            "encodingHint": "hash"
          },
          {
            "name": "Country Sale Organization Code",
            "dataType": "string",
            "sourceColumn": "Country Sale Organization Code",
            "encodingHint": "hash"
          },
          {
            "name": "Country",
            "dataType": "string",
            "sourceColumn": "Country",
            "encodingHint": "hash"
          },
          {
            "name": "Region",
            "dataType": "string",
            "sourceColumn": "Region",
            "encodingHint": "hash"
          },
          {
            "name": "Region Description",
            "dataType": "string",
            "sourceColumn": "Region Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_V_DIM_COUNTRY_REGION_BusNm = Source{[Schema=\"FIN\",Item=\"V_DIM_COUNTRY_REGION_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_V_DIM_COUNTRY_REGION_BusNm,{\"COUNTRY_REGION_KEY\", \"Country Company Code\", \"Country Sale Organization Code\", \"Country\", \"Region\", \"Region Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_DATE",
        "dataCategory": "Time",
        "columns": [
          {
            "name": "DATE_INT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DATE_INT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "DATE_DTE_KEY",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "DATE_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Date Dt",
            "dataType": "dateTime",
            "description": "the calendar year, month and day, stored as a datetime in YYYY-MM-DD format",
            "isKey": true,
            "sourceColumn": "Date Dt",
            "encodingHint": "hash"
          },
          {
            "name": "Date Name",
            "dataType": "string",
            "sourceColumn": "Date Name",
            "sortByColumn": "Date Dt",
            "encodingHint": "hash"
          },
          {
            "name": "Date Short Name",
            "dataType": "string",
            "sourceColumn": "Date Short Name",
            "sortByColumn": "Date Dt",
            "encodingHint": "hash"
          },
          {
            "name": "Day Name",
            "dataType": "string",
            "sourceColumn": "Day Name",
            "sortByColumn": "Calendar Week Day Number",
            "encodingHint": "hash"
          },
          {
            "name": "Day Short Name",
            "dataType": "string",
            "sourceColumn": "Day Short Name",
            "sortByColumn": "Calendar Week Day Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Week Number",
            "dataType": "int64",
            "description": "the ordinal number for the week of the calendar year, stored as an integer",
            "sourceColumn": "Calendar Week Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Week Text",
            "dataType": "string",
            "sourceColumn": "Calendar Week Text",
            "sortByColumn": "Calendar Week Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Week Year Text",
            "dataType": "string",
            "sourceColumn": "Calendar Week Year Text",
            "sortByColumn": "Calendar_Year_Week_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar_Week_Year_Text_ORD_Number",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Calendar_Week_Year_Text_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Week Day Number",
            "dataType": "int64",
            "sourceColumn": "Calendar Week Day Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Week Prev Date",
            "dataType": "dateTime",
            "sourceColumn": "Calendar Week Prev Date",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Week Begin Date",
            "dataType": "dateTime",
            "sourceColumn": "Calendar Week Begin Date",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Week End Date",
            "dataType": "dateTime",
            "sourceColumn": "Calendar Week End Date",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Month Number",
            "dataType": "int64",
            "description": "the ordinal number for the month of the calendar year, stored as an integer",
            "sourceColumn": "Calendar Month Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Month Text",
            "dataType": "string",
            "description": "the ordinal number for the month of the calendar year, stored as an integer",
            "sourceColumn": "Calendar Month Text",
            "sortByColumn": "Calendar Month Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Month Short Text",
            "dataType": "string",
            "sourceColumn": "Calendar Month Short Text",
            "sortByColumn": "Calendar Month Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Month Year Text",
            "dataType": "string",
            "sourceColumn": "Calendar Month Year Text",
            "sortByColumn": "Calendar_Month_Year_Text_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Month Year Short Text",
            "dataType": "string",
            "sourceColumn": "Calendar Month Year Short Text",
            "sortByColumn": "Calendar_Month_Year_Text_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar_Month_Year_Text_ORD_Number",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Calendar_Month_Year_Text_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Month Day Number",
            "dataType": "int64",
            "sourceColumn": "Calendar Month Day Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Month Day Count",
            "dataType": "int64",
            "sourceColumn": "Calendar Month Day Count",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Month Previous Date",
            "dataType": "dateTime",
            "sourceColumn": "Calendar Month Previous Date",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Month Begin Date",
            "dataType": "dateTime",
            "sourceColumn": "Calendar Month Begin Date",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Month End Date",
            "dataType": "dateTime",
            "sourceColumn": "Calendar Month End Date",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Qtr Number",
            "dataType": "int64",
            "sourceColumn": "Calendar Qtr Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Qtr Text",
            "dataType": "string",
            "sourceColumn": "Calendar Qtr Text",
            "sortByColumn": "Calendar Qtr Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Qtr Year Text",
            "dataType": "string",
            "sourceColumn": "Calendar Qtr Year Text",
            "sortByColumn": "Calendar_Year_Qtr_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar_Qtr_Year_Text_ORD_Number",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Calendar_Qtr_Year_Text_ORD_Number",
            "sortByColumn": "Calendar_Year_Qtr_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Qtr Day Number",
            "dataType": "int64",
            "sourceColumn": "Calendar Qtr Day Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Qtr Day Count",
            "dataType": "int64",
            "sourceColumn": "Calendar Qtr Day Count",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Qtr Previous Date",
            "dataType": "dateTime",
            "sourceColumn": "Calendar Qtr Previous Date",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Qtr Begin Date",
            "dataType": "dateTime",
            "sourceColumn": "Calendar Qtr Begin Date",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Qtr End Date",
            "dataType": "dateTime",
            "sourceColumn": "Calendar Qtr End Date",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Year Number",
            "dataType": "int64",
            "description": "the ordinal number for the calendar year, stored as an integer",
            "sourceColumn": "Calendar Year Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Year Text",
            "dataType": "string",
            "description": "the ordinal number for the calendar year, stored as an integer",
            "sourceColumn": "Calendar Year Text",
            "sortByColumn": "Calendar Year Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar_Year_Week_ORD_Number",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Calendar_Year_Week_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar_Year_Month_ORD_Number",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Calendar_Year_Month_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar_Year_Qtr_ORD_Number",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Calendar_Year_Qtr_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Year Day Number",
            "dataType": "int64",
            "sourceColumn": "Calendar Year Day Number",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Year Day Count",
            "dataType": "int64",
            "sourceColumn": "Calendar Year Day Count",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Year Previous Date",
            "dataType": "dateTime",
            "sourceColumn": "Calendar Year Previous Date",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Year Begin Date",
            "dataType": "dateTime",
            "sourceColumn": "Calendar Year Begin Date",
            "encodingHint": "hash"
          },
          {
            "name": "Calendar Year End Date",
            "dataType": "dateTime",
            "sourceColumn": "Calendar Year End Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Week Number",
            "dataType": "int64",
            "sourceColumn": "Fiscal Calendar Week Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Calendar Week Text",
            "dataType": "string",
            "sourceColumn": "Fiscal Calendar Week Text",
            "sortByColumn": "Fiscal Calendar Week Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Week Year Text",
            "dataType": "string",
            "sourceColumn": "Fiscal Calendar Week Year Text",
            "sortByColumn": "Fiscal_Calendar_Week_Year_Text_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal_Calendar_Week_Year_Text_ORD_Number",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Fiscal_Calendar_Week_Year_Text_ORD_Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Calendar Week Day Number",
            "dataType": "int64",
            "sourceColumn": "Fiscal Calendar Week Day Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Calendar Week Previous Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Calendar Week Previous Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Week Begin Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Calendar Week Begin Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Week End Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Calendar Week End Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Month Number",
            "dataType": "int64",
            "description": "the ordinal number for the period  or mionth within the RA fiscal year, stored as an integer ",
            "sourceColumn": "Fiscal Calendar Month Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Month Text",
            "dataType": "string",
            "description": "the ordinal number for the period  or mionth within the RA fiscal year, stored as an integer ",
            "sourceColumn": "Fiscal Calendar Month Text",
            "sortByColumn": "Fiscal Calendar Month Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Month Short Text",
            "dataType": "string",
            "sourceColumn": "Fiscal Calendar Month Short Text",
            "sortByColumn": "Fiscal Calendar Month Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Month Year Text",
            "dataType": "string",
            "sourceColumn": "Fiscal Calendar Month Year Text",
            "sortByColumn": "Fiscal_Calendar_Month_Year_Text_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Month Year Short Text",
            "dataType": "string",
            "sourceColumn": "Fiscal Calendar Month Year Short Text",
            "sortByColumn": "Fiscal_Calendar_Month_Year_Text_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal_Calendar_Month_Year_Text_ORD_Number",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Fiscal_Calendar_Month_Year_Text_ORD_Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Calendar Month Day Number",
            "dataType": "int64",
            "sourceColumn": "Fiscal Calendar Month Day Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Month Day Count",
            "dataType": "int64",
            "sourceColumn": "Fiscal Calendar Month Day Count",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Month Previous Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Calendar Month Previous Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Month Begin Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Calendar Month Begin Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Month End Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Calendar Month End Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Qtr Number",
            "dataType": "int64",
            "description": "the quarter number for the Rockwell fiscal year stored with preceding characters \"QTR\", stored as a nvarchar",
            "sourceColumn": "Fiscal Calendar Qtr Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Calendar Qtr Text",
            "dataType": "string",
            "description": "the quarter number for the Rockwell fiscal year stored with preceding characters \"QTR\", stored as a nvarchar",
            "sourceColumn": "Fiscal Calendar Qtr Text",
            "sortByColumn": "Fiscal Calendar Qtr Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Qtr Year Text",
            "dataType": "string",
            "sourceColumn": "Fiscal Calendar Qtr Year Text",
            "sortByColumn": "Fiscal_Calendar_Qtr_Year_Text_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal_Calendar_Qtr_Year_Text_ORD_Number",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Fiscal_Calendar_Qtr_Year_Text_ORD_Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Calendar Qtr Day Number",
            "dataType": "int64",
            "sourceColumn": "Fiscal Calendar Qtr Day Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Calendar Qtr Day Count",
            "dataType": "int64",
            "sourceColumn": "Fiscal Calendar Qtr Day Count",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Qtr Previous Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Calendar Qtr Previous Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Qtr Begin Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Calendar Qtr Begin Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Qtr End Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Calendar Qtr End Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Year Number",
            "dataType": "int64",
            "description": "the ordinal number for the fiscal year as defined by Rockwell Automation Finance for the given date in the format yyyy (where yyyy = 4-digit fiscal year), stored as a integer (such as 2019 for the Rockwell Automation fiscal year starting on 1 Oct 2018)",
            "sourceColumn": "Fiscal Calendar Year Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Calendar Year Text",
            "dataType": "string",
            "description": "the ordinal number for the fiscal year as defined by Rockwell Automation Finance for the given date in the format yyyy (where yyyy = 4-digit fiscal year), stored as a integer (such as 2019 for the Rockwell Automation fiscal year starting on 1 Oct 2018)",
            "sourceColumn": "Fiscal Calendar Year Text",
            "sortByColumn": "Fiscal Calendar Year Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar YEAR_PERIOD",
            "dataType": "string",
            "description": "the ordinal numbers for the fiscal year and the fiscal month within the fiscal year (such as 201904 for January 2019, the fourth month of the Rockwell Automation fiscal year 2019, which starts on 1 Oct 2018), stored as a varchar",
            "sourceColumn": "Fiscal Calendar YEAR_PERIOD",
            "sortByColumn": "Fiscal_Calendar_Year_Month_ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Year Day Number",
            "dataType": "int64",
            "sourceColumn": "Fiscal Calendar Year Day Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Calendar Year Day Count",
            "dataType": "int64",
            "sourceColumn": "Fiscal Calendar Year Day Count",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal_Calendar_Year_Week_ORD_Number",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Fiscal_Calendar_Year_Week_ORD_Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal_Calendar_Year_Month_ORD_Number",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Fiscal_Calendar_Year_Month_ORD_Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal_Calendar_Year_Qtr_ORD_Number",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Fiscal_Calendar_Year_Qtr_ORD_Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Calendar Year Previous Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Calendar Year Previous Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Year Begin Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Calendar Year Begin Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Calendar Year End Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Calendar Year End Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Week Qtr Number",
            "dataType": "int64",
            "sourceColumn": "Fiscal Week Qtr Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Week Qtr Text",
            "dataType": "string",
            "sourceColumn": "Fiscal Week Qtr Text",
            "sortByColumn": "Fiscal Week Qtr Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Week Qtr Year Text",
            "dataType": "string",
            "sourceColumn": "Fiscal Week Qtr Year Text",
            "sortByColumn": "Fiscal Week Year Qtr ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Week Qtr Day Number",
            "dataType": "int64",
            "sourceColumn": "Fiscal Week Qtr Day Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Week Qtr Day Count",
            "dataType": "int64",
            "sourceColumn": "Fiscal Week Qtr Day Count",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Week Qtr PreviousDate",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Week Qtr PreviousDate",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Week Qtr Begin Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Week Qtr Begin Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Week Qtr End Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Week Qtr End Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Week Month Number",
            "dataType": "int64",
            "sourceColumn": "Fiscal Week Month Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Week Month Text",
            "dataType": "string",
            "sourceColumn": "Fiscal Week Month Text",
            "sortByColumn": "Fiscal Week Month Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Week Month Year Text",
            "dataType": "string",
            "sourceColumn": "Fiscal Week Month Year Text",
            "sortByColumn": "Fiscal Week Year Month ORD_Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Week Month Day Number",
            "dataType": "int64",
            "sourceColumn": "Fiscal Week Month Day Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Week Month Day Count",
            "dataType": "int64",
            "sourceColumn": "Fiscal Week Month Day Count",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Week Month PreviousDate",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Week Month PreviousDate",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Week Month Begin Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Week Month Begin Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Week Month End Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Week Month End Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Week Year Number",
            "dataType": "int64",
            "sourceColumn": "Fiscal Week Year Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Week Year Text",
            "dataType": "string",
            "sourceColumn": "Fiscal Week Year Text",
            "sortByColumn": "Fiscal Calendar Year Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Week Year WeekORD_Number",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Fiscal Week Year WeekORD_Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Week Year Month ORD_Number",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Fiscal Week Year Month ORD_Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Week Year Qtr ORD_Number",
            "dataType": "int64",
            "description": "the fiscal year and quarter of the transaction date of the billing document (if the change occurred at time of entry) or the last settlement date on the billback document (if the change was part of a ship from stock and credit (SFSAC) transaction), stored as a varchar",
            "isHidden": true,
            "sourceColumn": "Fiscal Week Year Qtr ORD_Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Week Year Day Number",
            "dataType": "int64",
            "sourceColumn": "Fiscal Week Year Day Number",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Week Year Day Count",
            "dataType": "int64",
            "sourceColumn": "Fiscal Week Year Day Count",
            "encodingHint": "value"
          },
          {
            "name": "Fiscal Week Year Previous Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Week Year Previous Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Week Year Begin Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Week Year Begin Date",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Week Year End Date",
            "dataType": "dateTime",
            "sourceColumn": "Fiscal Week Year End Date",
            "encodingHint": "hash"
          },
          {
            "name": "Is Day of Week Indicator",
            "dataType": "string",
            "sourceColumn": "Is Day of Week Indicator",
            "sortByColumn": "Is Day of Week Count",
            "encodingHint": "hash"
          },
          {
            "name": "Is Day of Week Count",
            "dataType": "int64",
            "sourceColumn": "Is Day of Week Count",
            "encodingHint": "hash"
          },
          {
            "name": "Work Day Type Text",
            "dataType": "string",
            "sourceColumn": "Work Day Type Text",
            "encodingHint": "hash"
          },
          {
            "name": "Is RA Work Day Ind",
            "dataType": "string",
            "sourceColumn": "Is RA Work Day Ind",
            "sortByColumn": "Is RA Work Day Count",
            "encodingHint": "hash"
          },
          {
            "name": "Is RA Work Day Count",
            "dataType": "int64",
            "sourceColumn": "Is RA Work Day Count",
            "encodingHint": "hash"
          },
          {
            "name": "Is RA Holiday Ind",
            "dataType": "string",
            "sourceColumn": "Is RA Holiday Ind",
            "sortByColumn": "Is RA Holiday Count",
            "encodingHint": "hash"
          },
          {
            "name": "Is RA Holiday Count",
            "dataType": "int64",
            "sourceColumn": "Is RA Holiday Count",
            "encodingHint": "hash"
          },
          {
            "name": "Holiday Name",
            "dataType": "string",
            "sourceColumn": "Holiday Name",
            "encodingHint": "hash"
          },
          {
            "name": "Is Federal Holiday Ind",
            "dataType": "string",
            "sourceColumn": "Is Federal Holiday Ind",
            "sortByColumn": "Is Federal Holiday Count",
            "encodingHint": "hash"
          },
          {
            "name": "Is Federal Holiday Count",
            "dataType": "int64",
            "sourceColumn": "Is Federal Holiday Count",
            "encodingHint": "hash"
          },
          {
            "name": "Is Market Closed Ind",
            "dataType": "string",
            "sourceColumn": "Is Market Closed Ind",
            "sortByColumn": "Is Market Closed Count",
            "encodingHint": "hash"
          },
          {
            "name": "Is Market Closed Count",
            "dataType": "int64",
            "sourceColumn": "Is Market Closed Count",
            "encodingHint": "hash"
          },
          {
            "name": "Season Name",
            "dataType": "string",
            "sourceColumn": "Season Name",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_DATE_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_DATE_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_DATE_BusNm,{\"DATE_INT_KEY\", \"DATE_DTE_KEY\", \"Date Dt\", \"Date Name\", \"Date Short Name\", \"Day Name\", \"Day Short Name\", \"Calendar Week Number\", \"Calendar Week Text\", \"Calendar Week Year Text\", \"Calendar_Week_Year_Text_ORD_Number\", \"Calendar Week Day Number\", \"Calendar Week Prev Date\", \"Calendar Week Begin Date\", \"Calendar Week End Date\", \"Calendar Month Number\", \"Calendar Month Text\", \"Calendar Month Short Text\", \"Calendar Month Year Text\", \"Calendar Month Year Short Text\", \"Calendar_Month_Year_Text_ORD_Number\", \"Calendar Month Day Number\", \"Calendar Month Day Count\", \"Calendar Month Previous Date\", \"Calendar Month Begin Date\", \"Calendar Month End Date\", \"Calendar Qtr Number\", \"Calendar Qtr Text\", \"Calendar Qtr Year Text\", \"Calendar_Qtr_Year_Text_ORD_Number\", \"Calendar Qtr Day Number\", \"Calendar Qtr Day Count\", \"Calendar Qtr Previous Date\", \"Calendar Qtr Begin Date\", \"Calendar Qtr End Date\", \"Calendar Year Number\", \"Calendar Year Text\", \"Calendar_Year_Week_ORD_Number\", \"Calendar_Year_Month_ORD_Number\", \"Calendar_Year_Qtr_ORD_Number\", \"Calendar Year Day Number\", \"Calendar Year Day Count\", \"Calendar Year Previous Date\", \"Calendar Year Begin Date\", \"Calendar Year End Date\", \"Fiscal Calendar Week Number\", \"Fiscal Calendar Week Text\", \"Fiscal Calendar Week Year Text\", \"Fiscal_Calendar_Week_Year_Text_ORD_Number\", \"Fiscal Calendar Week Day Number\", \"Fiscal Calendar Week Previous Date\", \"Fiscal Calendar Week Begin Date\", \"Fiscal Calendar Week End Date\", \"Fiscal Calendar Month Number\", \"Fiscal Calendar Month Text\", \"Fiscal Calendar Month Short Text\", \"Fiscal Calendar Month Year Text\", \"Fiscal Calendar Month Year Short Text\", \"Fiscal_Calendar_Month_Year_Text_ORD_Number\", \"Fiscal Calendar Month Day Number\", \"Fiscal Calendar Month Day Count\", \"Fiscal Calendar Month Previous Date\", \"Fiscal Calendar Month Begin Date\", \"Fiscal Calendar Month End Date\", \"Fiscal Calendar Qtr Number\", \"Fiscal Calendar Qtr Text\", \"Fiscal Calendar Qtr Year Text\", \"Fiscal_Calendar_Qtr_Year_Text_ORD_Number\", \"Fiscal Calendar Qtr Day Number\", \"Fiscal Calendar Qtr Day Count\", \"Fiscal Calendar Qtr Previous Date\", \"Fiscal Calendar Qtr Begin Date\", \"Fiscal Calendar Qtr End Date\", \"Fiscal Calendar Year Number\", \"Fiscal Calendar Year Text\", \"Fiscal Calendar YEAR_PERIOD\", \"Fiscal Calendar Year Day Number\", \"Fiscal Calendar Year Day Count\", \"Fiscal_Calendar_Year_Week_ORD_Number\", \"Fiscal_Calendar_Year_Month_ORD_Number\", \"Fiscal_Calendar_Year_Qtr_ORD_Number\", \"Fiscal Calendar Year Previous Date\", \"Fiscal Calendar Year Begin Date\", \"Fiscal Calendar Year End Date\", \"Fiscal Week Qtr Number\", \"Fiscal Week Qtr Text\", \"Fiscal Week Qtr Year Text\", \"Fiscal Week Qtr Day Number\", \"Fiscal Week Qtr Day Count\", \"Fiscal Week Qtr PreviousDate\", \"Fiscal Week Qtr Begin Date\", \"Fiscal Week Qtr End Date\", \"Fiscal Week Month Number\", \"Fiscal Week Month Text\", \"Fiscal Week Month Year Text\", \"Fiscal Week Month Day Number\", \"Fiscal Week Month Day Count\", \"Fiscal Week Month PreviousDate\", \"Fiscal Week Month Begin Date\", \"Fiscal Week Month End Date\", \"Fiscal Week Year Number\", \"Fiscal Week Year Text\", \"Fiscal Week Year WeekORD_Number\", \"Fiscal Week Year Month ORD_Number\", \"Fiscal Week Year Qtr ORD_Number\", \"Fiscal Week Year Day Number\", \"Fiscal Week Year Day Count\", \"Fiscal Week Year Previous Date\", \"Fiscal Week Year Begin Date\", \"Fiscal Week Year End Date\", \"Is Day of Week Indicator\", \"Is Day of Week Count\", \"Work Day Type Text\", \"Is RA Work Day Ind\", \"Is RA Work Day Count\", \"Is RA Holiday Ind\", \"Is RA Holiday Count\", \"Holiday Name\", \"Is Federal Holiday Ind\", \"Is Federal Holiday Count\", \"Is Market Closed Ind\", \"Is Market Closed Count\", \"Season Name\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_SOURCE_CRNCY",
        "columns": [
          {
            "name": "CRNCY_KEY",
            "dataType": "int64",
            "sourceColumn": "CRNCY_KEY"
          },
          {
            "name": "Currency Code",
            "dataType": "string",
            "sourceColumn": "Currency Code",
            "encodingHint": "hash"
          },
          {
            "name": "Currency Name",
            "dataType": "string",
            "sourceColumn": "Currency Name",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CRNCY_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CRNCY_BusNm\"]}[Data],",
                "    #\"Removed Columns\" = Table.RemoveColumns(GLBL_V_DIM_CRNCY_BusNm,{\"DW_CREATED_DTTM\", \"DW_UPDATED_DTTM\"})",
                "in",
                "    #\"Removed Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_HYPERION_PRFT_CTR_HRCHY",
        "columns": [
          {
            "name": "HYPERION_PRFT_CTR_HRCHY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "HYPERION_PRFT_CTR_HRCHY_KEY"
          },
          {
            "name": "Hyperion Client",
            "dataType": "string",
            "sourceColumn": "Hyperion Client"
          },
          {
            "name": "FBU Description",
            "dataType": "string",
            "sourceColumn": "FBU Description"
          },
          {
            "name": "Profit Center Code",
            "dataType": "string",
            "sourceColumn": "Profit Center Code"
          },
          {
            "name": "SBU",
            "dataType": "string",
            "sourceColumn": "SBU"
          },
          {
            "name": "SBU Description",
            "dataType": "string",
            "sourceColumn": "SBU Description"
          },
          {
            "name": "FBU",
            "dataType": "string",
            "sourceColumn": "FBU"
          },
          {
            "name": "BU",
            "dataType": "string",
            "sourceColumn": "BU"
          },
          {
            "name": "BU Description",
            "dataType": "string",
            "sourceColumn": "BU Description"
          },
          {
            "name": "Segment",
            "dataType": "string",
            "sourceColumn": "Segment"
          },
          {
            "name": "Segment Description",
            "dataType": "string",
            "sourceColumn": "Segment Description"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_V_DIM_HYPERION_PRFT_CTR_HRCHY_BusNm = Source{[Schema=\"FIN\",Item=\"V_DIM_HYPERION_PRFT_CTR_HRCHY_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_V_DIM_HYPERION_PRFT_CTR_HRCHY_BusNm,{\"HYPERION_PRFT_CTR_HRCHY_KEY\", \"Profit Center Code\", \"Hyperion Client\", \"SBU\", \"SBU Description\", \"FBU\", \"FBU Description\", \"BU\", \"BU Description\", \"Segment\", \"Segment Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Hyperion Profit Center Hierarchy",
            "levels": [
              {
                "name": "FBU Description",
                "ordinal": 2,
                "column": "FBU Description"
              },
              {
                "name": "BU Description",
                "ordinal": 1,
                "column": "BU Description"
              },
              {
                "name": "SBU Description",
                "ordinal": 3,
                "column": "SBU Description"
              },
              {
                "name": "Profit Center Code",
                "ordinal": 4,
                "column": "Profit Center Code"
              },
              {
                "name": "Segment Description",
                "ordinal": 0,
                "column": "Segment Description"
              }
            ]
          }
        ]
      },
      {
        "name": "DIM_BUSINESS_PARTNER_SHIP_TO",
        "columns": [
          {
            "name": "BUSI_PRTNR_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "BUSI_PRTNR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "APR",
            "dataType": "string",
            "sourceColumn": "APR",
            "encodingHint": "hash"
          },
          {
            "name": "GENDER",
            "dataType": "string",
            "sourceColumn": "Gender",
            "encodingHint": "hash"
          },
          {
            "name": "LATITUDE",
            "dataType": "double",
            "sourceColumn": "Latitude",
            "encodingHint": "hash"
          },
          {
            "name": "LONGITUDE",
            "dataType": "double",
            "sourceColumn": "Longitude",
            "encodingHint": "hash"
          },
          {
            "name": "NATIONALITY",
            "dataType": "string",
            "sourceColumn": "Nationality",
            "encodingHint": "hash"
          },
          {
            "name": "PLANT",
            "dataType": "string",
            "description": [
              "code in SAP for the plant (4 digits stored as text) at which the specified product was manufactured or from which it was delivered (for example, 1020 = Twinsburg, 4000 = European Distribution Center, and 5040 = Rockwell Automation China)",
              "",
              "If the source of a serial number was Factory Talk Product Centre (FTPC), the Transaction Plant Code represents the plant that manufactured or produced the product;  otherwise, the Transaction Plant Code represents the plant that delivered the product per a sales order or stock transfer order."
            ],
            "sourceColumn": "Plant",
            "encodingHint": "hash"
          },
          {
            "name": "REGION",
            "dataType": "string",
            "description": "name of the state, province, or county (such as Wisconsin for WI or Paris for 75) associated with the address for the given Sold To Business Partner in SAP, stored as a string",
            "sourceColumn": "Region",
            "encodingHint": "hash"
          },
          {
            "name": "SOURCE",
            "dataType": "string",
            "sourceColumn": "Source",
            "encodingHint": "hash"
          },
          {
            "name": "Multi-Industry 3 Description",
            "dataType": "string",
            "description": [
              "description associated with the third additional classification defined by Rockwell Automation, which groups the customer into to a specifc industry of interest, stored as a nvarchar",
              "",
              "If the Ship To Business Partner Industry Vertical Description is \"\"Multi Industry\"\", then at least one and up to three additional industry vertical classifications are required.",
              "",
              "Industry 1, Industry 2, and Industry 3 Verticals",
              "X1 - Airports",
              "X2 - Automotive",
              "X3 - Cement & Aggregate",
              "X4 - Chemicals & Plastics",
              "X5 - Entertainment",
              "X6 - Fibers & Textiles",
              "X7 - Food & Beverage",
              "X8 - Glass",
              "X9 - Household & P. Care",
              "X10 - Life Sciences",
              "X11 - Marine",
              "X12 - Mass Transit",
              "X13 - Metals",
              "X14 - Mining",
              "X15 - Oil & Gas",
              "X16 - Other",
              "X17 - Power & Energy",
              "X18 - Printing & Publishin",
              "X19 - Pulp & Paper",
              "X20 - Semiconductor & Elec",
              "X21 - Tire & Rubber",
              "X22 - Water / Wastewater",
              "X23 - Rockwell Distributor"
            ],
            "sourceColumn": "Multi-Industry 3 Description",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Region",
            "dataType": "string",
            "description": [
              "the top level in the Rockwell Automation sales office hierarchy, which represents the four main geographical areas of the business world (see below), stored as a nvarchar",
              "",
              "AP = Asia/Pacific",
              "EMEA = Europe, Middle East, and Africa",
              "LA = Latin America",
              "NA = North America",
              "",
              "The sales office hierarchy has the structure:",
              "1) Region",
              "2) Sub-region",
              "3) District",
              "4) Sales Office",
              "5) Branch"
            ],
            "sourceColumn": "Sales Region",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Sub-Region",
            "dataType": "string",
            "description": [
              "code in SAP for the second level in the Rockwell Automation sales office hierarchy, which represents subdivisions of the four regions (see examples below), stored as a nvarchar",
              "",
              "AND = Andean region",
              "BRA = Brazil",
              "CAN = Canada",
              "CAR = Carribean region",
              "CEN = Central United States",
              "EAS = Eastern United States",
              "EER = Eastern Europe region",
              "GCR = Greater China region",
              "INR = India region",
              "KR = Korea",
              "MEX = Mexico",
              "MER = Middle East region",
              "NER = Northern Europe region",
              "SOU = Southern United States",
              "SPR = South Pacific region",
              "SEA = Southeast Asia",
              "SCO = Southern Cone of South America (Argentina, Chile, Brazil, Paraguay, and Uruguay)",
              "SER = Southern Europe region",
              "WES = Western United States",
              "",
              "The sales office hierarchy has the structure:",
              "1) Region",
              "2) Sub-region",
              "3) District",
              "4) Sales Office",
              "5) Branch"
            ],
            "sourceColumn": "Sales Sub-Region",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Account Group Code",
            "dataType": "string",
            "description": [
              "\"code in SAP for the type of relationship a business partner has with Rockwell Automation (see examples below), stored as a nvarchar",
              "",
              "0001 = Sold-to party",
              "0002 = Goods recipient",
              "0004 = Bill-to party",
              "0005 = Prospective Customer",
              "Z005 = RA Distributor",
              "Z006 = RA Inter/Intra Company",
              "Z099 = POS",
              "ZRAP = RA US Partner Plant",
              "ZRET = RA Return Vendor\""
            ],
            "sourceColumn": "Account Group Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "SIC Code",
            "dataType": "string",
            "description": "Standard Industry Classification (SIC) four-digit code from Dun & Bradstreet (D&B), separated by a tilde (such as \"3675 ~ Electronic Capacitors\" or \"3089 ~ Plastics Products, Not Elsewhere Classified\"), which classifies the customer into to an industry, stored as a nvarchar",
            "sourceColumn": "SIC Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Strategic Account Level",
            "dataType": "string",
            "sourceColumn": "Strategic Account Level",
            "encodingHint": "hash"
          },
          {
            "name": "Multi-Industry 1 Description",
            "dataType": "string",
            "description": [
              "description associated with the first additional classification defined by Rockwell Automation, which groups the customer into to a specifc industry of interest, stored as a nvarchar",
              "",
              "If the Ship To Business Partner Industry Vertical Description is \"\"Multi Industry\"\", then at least one and up to three additional industry vertical classifications are required.",
              "",
              "Industry 1, Industry 2, and Industry 3 Verticals",
              "X1 - Airports",
              "X2 - Automotive",
              "X3 - Cement & Aggregate",
              "X4 - Chemicals & Plastics",
              "X5 - Entertainment",
              "X6 - Fibers & Textiles",
              "X7 - Food & Beverage",
              "X8 - Glass",
              "X9 - Household & P. Care",
              "X10 - Life Sciences",
              "X11 - Marine",
              "X12 - Mass Transit",
              "X13 - Metals",
              "X14 - Mining",
              "X15 - Oil & Gas",
              "X16 - Other",
              "X17 - Power & Energy",
              "X18 - Printing & Publishin",
              "X19 - Pulp & Paper",
              "X20 - Semiconductor & Elec",
              "X21 - Tire & Rubber",
              "X22 - Water / Wastewater",
              "X23 - Rockwell Distributor"
            ],
            "sourceColumn": "Multi-Industry 1 Description",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Multi-Industry 2 Description",
            "dataType": "string",
            "description": [
              "description associated with the second additional classification defined by Rockwell Automation, which groups the customer into to a specifc industry of interest, stored as a nvarchar",
              "",
              "If the Ship To Business Partner Industry Vertical Description is \"\"Multi Industry\"\", then at least one and up to three additional industry vertical classifications are required.",
              "",
              "Industry 1, Industry 2, and Industry 3 Verticals",
              "X1 - Airports",
              "X2 - Automotive",
              "X3 - Cement & Aggregate",
              "X4 - Chemicals & Plastics",
              "X5 - Entertainment",
              "X6 - Fibers & Textiles",
              "X7 - Food & Beverage",
              "X8 - Glass",
              "X9 - Household & P. Care",
              "X10 - Life Sciences",
              "X11 - Marine",
              "X12 - Mass Transit",
              "X13 - Metals",
              "X14 - Mining",
              "X15 - Oil & Gas",
              "X16 - Other",
              "X17 - Power & Energy",
              "X18 - Printing & Publishin",
              "X19 - Pulp & Paper",
              "X20 - Semiconductor & Elec",
              "X21 - Tire & Rubber",
              "X22 - Water / Wastewater",
              "X23 - Rockwell Distributor"
            ],
            "sourceColumn": "Multi-Industry 2 Description",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner",
            "dataType": "string",
            "sourceColumn": "Business Partner",
            "encodingHint": "hash"
          },
          {
            "name": "Account Code",
            "dataType": "string",
            "description": [
              "code in SAP for the type of relationship a business partner has with Rockwell Automation (see examples below), stored as a nvarchar",
              "",
              "0001 = Sold-to party",
              "0002 = Goods recipient",
              "0004 = Bill-to party",
              "0005 = Prospective Customer",
              "Z005 = RA Distributor",
              "Z006 = RA Inter/Intra Company",
              "Z099 = POS",
              "ZRAP = RA US Partner Plant",
              "ZRET = RA Return Vendor"
            ],
            "sourceColumn": "Account Code",
            "encodingHint": "hash"
          },
          {
            "name": "Address ",
            "dataType": "string",
            "sourceColumn": "Address ",
            "encodingHint": "hash"
          },
          {
            "name": "Arch Flag",
            "dataType": "string",
            "sourceColumn": "Arch Flag",
            "encodingHint": "hash"
          },
          {
            "name": "BAS City Code",
            "dataType": "string",
            "sourceColumn": "BAS City Code",
            "encodingHint": "hash"
          },
          {
            "name": "BAS City1",
            "dataType": "string",
            "sourceColumn": "BAS City1",
            "encodingHint": "hash"
          },
          {
            "name": "BAS City2",
            "dataType": "string",
            "sourceColumn": "BAS City2",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Floor10",
            "dataType": "string",
            "sourceColumn": "BAS Floor10",
            "encodingHint": "hash"
          },
          {
            "name": "BAS House Num1",
            "dataType": "string",
            "sourceColumn": "BAS House Num1",
            "encodingHint": "hash"
          },
          {
            "name": "BAS House Num2",
            "dataType": "string",
            "sourceColumn": "BAS House Num2",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Location",
            "dataType": "string",
            "sourceColumn": "BAS Location",
            "encodingHint": "hash"
          },
          {
            "name": "BAS PO Box City",
            "dataType": "string",
            "description": "number of the post office box for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "BAS PO Box City",
            "encodingHint": "hash"
          },
          {
            "name": "BAS PO Box Location",
            "dataType": "string",
            "description": "number of the post office box for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "BAS PO Box Location",
            "encodingHint": "hash"
          },
          {
            "name": "BAS PO Box Postal Code",
            "dataType": "string",
            "description": "number of the post office box for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "BAS PO Box Postal Code",
            "encodingHint": "hash"
          },
          {
            "name": "BAS PO Box Registration",
            "dataType": "string",
            "description": "number of the post office box for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "BAS PO Box Registration",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Postal Code GIS",
            "dataType": "string",
            "sourceColumn": "BAS Postal Code GIS",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Postal Code",
            "dataType": "string",
            "sourceColumn": "BAS Postal Code",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Region Group",
            "dataType": "string",
            "sourceColumn": "BAS Region Group",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Str Suppl1",
            "dataType": "string",
            "sourceColumn": "BAS Str Suppl1",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Str Suppl2",
            "dataType": "string",
            "sourceColumn": "BAS Str Suppl2",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Str Suppl3",
            "dataType": "string",
            "sourceColumn": "BAS Str Suppl3",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Street",
            "dataType": "string",
            "sourceColumn": "BAS Street",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Street Code",
            "dataType": "string",
            "sourceColumn": "BAS Street Code",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Tax Jurisdiction Code",
            "dataType": "string",
            "sourceColumn": "BAS Tax Jurisdiction Code",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Telephone Number",
            "dataType": "string",
            "sourceColumn": "BAS Telephone Number",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Time Zone",
            "dataType": "string",
            "sourceColumn": "BAS Time Zone",
            "encodingHint": "hash"
          },
          {
            "name": "Bill Blk",
            "dataType": "string",
            "sourceColumn": "Bill Blk",
            "encodingHint": "hash"
          },
          {
            "name": "Birth Name",
            "dataType": "string",
            "sourceColumn": "Birth Name",
            "encodingHint": "hash"
          },
          {
            "name": "BP Address Line0",
            "dataType": "string",
            "sourceColumn": "BP Address Line0",
            "encodingHint": "hash"
          },
          {
            "name": "BP Address Line1",
            "dataType": "string",
            "sourceColumn": "BP Address Line1",
            "encodingHint": "hash"
          },
          {
            "name": "BP Address Line2",
            "dataType": "string",
            "sourceColumn": "BP Address Line2",
            "encodingHint": "hash"
          },
          {
            "name": "BP Address Line3",
            "dataType": "string",
            "sourceColumn": "BP Address Line3",
            "encodingHint": "hash"
          },
          {
            "name": "BP Address Line4",
            "dataType": "string",
            "sourceColumn": "BP Address Line4",
            "encodingHint": "hash"
          },
          {
            "name": "BP Address Line5",
            "dataType": "string",
            "sourceColumn": "BP Address Line5",
            "encodingHint": "hash"
          },
          {
            "name": "BP Address Line6",
            "dataType": "string",
            "sourceColumn": "BP Address Line6",
            "encodingHint": "hash"
          },
          {
            "name": "BP Address Line7",
            "dataType": "string",
            "sourceColumn": "BP Address Line7",
            "encodingHint": "hash"
          },
          {
            "name": "BP Address Line8",
            "dataType": "string",
            "sourceColumn": "BP Address Line8",
            "encodingHint": "hash"
          },
          {
            "name": "BP Address Line9",
            "dataType": "string",
            "sourceColumn": "BP Address Line9",
            "encodingHint": "hash"
          },
          {
            "name": "Business Address Short",
            "dataType": "string",
            "sourceColumn": "Business Address Short",
            "encodingHint": "hash"
          },
          {
            "name": "Business Address Short S",
            "dataType": "string",
            "sourceColumn": "Business Address Short S",
            "encodingHint": "hash"
          },
          {
            "name": "BP BAS Care Of PO Code",
            "dataType": "string",
            "sourceColumn": "BP BAS Care Of PO Code",
            "encodingHint": "hash"
          },
          {
            "name": "BP BAS Fax Display",
            "dataType": "string",
            "sourceColumn": "BP BAS Fax Display",
            "encodingHint": "hash"
          },
          {
            "name": "BP BAS Room Number",
            "dataType": "string",
            "sourceColumn": "BP BAS Room Number",
            "encodingHint": "hash"
          },
          {
            "name": "BP BAS Teliphone Display",
            "dataType": "string",
            "sourceColumn": "BP BAS Teliphone Display",
            "encodingHint": "hash"
          },
          {
            "name": "BP BAS Trans Zone",
            "dataType": "string",
            "sourceColumn": "BP BAS Trans Zone",
            "encodingHint": "hash"
          },
          {
            "name": "BP Business Unit Group",
            "dataType": "string",
            "sourceColumn": "BP Business Unit Group",
            "encodingHint": "hash"
          },
          {
            "name": "BP Category",
            "dataType": "string",
            "sourceColumn": "BP Category",
            "encodingHint": "hash"
          },
          {
            "name": "BP Comp",
            "dataType": "string",
            "sourceColumn": "BP Comp",
            "encodingHint": "hash"
          },
          {
            "name": "BP Contract",
            "dataType": "string",
            "sourceColumn": "BP Contract",
            "encodingHint": "hash"
          },
          {
            "name": "BP Customer",
            "dataType": "string",
            "sourceColumn": "BP Customer",
            "encodingHint": "hash"
          },
          {
            "name": "BP Date From",
            "dataType": "dateTime",
            "sourceColumn": "BP Date From",
            "encodingHint": "hash"
          },
          {
            "name": "BP Date To",
            "dataType": "dateTime",
            "sourceColumn": "BP Date To",
            "encodingHint": "hash"
          },
          {
            "name": "BP GEO SRCID",
            "dataType": "string",
            "sourceColumn": "BP GEO SRCID",
            "encodingHint": "hash"
          },
          {
            "name": "BP GUID",
            "dataType": "string",
            "sourceColumn": "BP GUID",
            "encodingHint": "hash"
          },
          {
            "name": "BP IND SYS",
            "dataType": "string",
            "sourceColumn": "BP IND SYS",
            "encodingHint": "hash"
          },
          {
            "name": "BP Legal Entity",
            "dataType": "string",
            "sourceColumn": "BP Legal Entity",
            "encodingHint": "hash"
          },
          {
            "name": "BP Lock Status",
            "dataType": "int64",
            "sourceColumn": "BP Lock Status",
            "encodingHint": "hash"
          },
          {
            "name": "BP MAR STA",
            "dataType": "string",
            "sourceColumn": "BP MAR STA",
            "encodingHint": "hash"
          },
          {
            "name": "BP Name First",
            "dataType": "string",
            "sourceColumn": "BP Name First",
            "encodingHint": "hash"
          },
          {
            "name": "BP Name Last",
            "dataType": "string",
            "sourceColumn": "BP Name Last",
            "encodingHint": "hash"
          },
          {
            "name": "BP Name Last2",
            "dataType": "string",
            "sourceColumn": "BP Name Last2",
            "encodingHint": "hash"
          },
          {
            "name": "BP Name Middle",
            "dataType": "string",
            "sourceColumn": "BP Name Middle",
            "encodingHint": "hash"
          },
          {
            "name": "BP Relationship Status",
            "dataType": "int64",
            "sourceColumn": "BP Relationship Status",
            "encodingHint": "hash"
          },
          {
            "name": "BP STP TRANS Zone",
            "dataType": "string",
            "sourceColumn": "BP STP TRANS Zone",
            "encodingHint": "hash"
          },
          {
            "name": "Bpartner Ltext",
            "dataType": "string",
            "sourceColumn": "Bpartner Ltext",
            "encodingHint": "hash"
          },
          {
            "name": "Bpartner Mtext",
            "dataType": "string",
            "sourceColumn": "Bpartner Mtext",
            "encodingHint": "hash"
          },
          {
            "name": "Bpartner Stext",
            "dataType": "string",
            "sourceColumn": "Bpartner Stext",
            "encodingHint": "hash"
          },
          {
            "name": "Branch Teretory",
            "dataType": "string",
            "sourceColumn": "Branch Teretory",
            "encodingHint": "hash"
          },
          {
            "name": "Branch Teretory Text",
            "dataType": "string",
            "sourceColumn": "Branch Teretory Text",
            "encodingHint": "hash"
          },
          {
            "name": "Cam Build20",
            "dataType": "string",
            "sourceColumn": "Cam Build20",
            "encodingHint": "hash"
          },
          {
            "name": "Time of Last Change to the Transaction",
            "dataType": "string",
            "description": "This field defines at what time the Transaction was changed",
            "sourceColumn": "Time of Last Change to the Transaction",
            "encodingHint": "hash"
          },
          {
            "name": "Transaction Last Changed By",
            "dataType": "string",
            "description": "This field defines name of the person who changed  Transaction Last time",
            "sourceColumn": "Transaction Last Changed By",
            "encodingHint": "hash"
          },
          {
            "name": "Changed On",
            "dataType": "string",
            "sourceColumn": "Changed On",
            "encodingHint": "hash"
          },
          {
            "name": "Country Code",
            "dataType": "string",
            "sourceColumn": "Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "BP Country Name",
            "dataType": "string",
            "sourceColumn": "BP Country Name",
            "encodingHint": "hash"
          },
          {
            "name": "Created By",
            "dataType": "string",
            "sourceColumn": "Created By",
            "encodingHint": "hash"
          },
          {
            "name": "Created On",
            "dataType": "string",
            "sourceColumn": "Created On",
            "encodingHint": "hash"
          },
          {
            "name": "Created Time",
            "dataType": "string",
            "sourceColumn": "Created Time",
            "encodingHint": "hash"
          },
          {
            "name": "Country Name",
            "dataType": "string",
            "description": "name associated with the code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a two-character string",
            "sourceColumn": "Country Name",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Class",
            "dataType": "string",
            "sourceColumn": "Customer Class",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Type",
            "dataType": "string",
            "sourceColumn": "Customer Type",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Type Description",
            "dataType": "string",
            "sourceColumn": "Customer Type Description",
            "encodingHint": "hash"
          },
          {
            "name": "Data Source Code",
            "dataType": "string",
            "sourceColumn": "Data Source Code",
            "encodingHint": "hash"
          },
          {
            "name": "Del Blk",
            "dataType": "string",
            "sourceColumn": "Del Blk",
            "encodingHint": "hash"
          },
          {
            "name": "Displn Ctrl",
            "dataType": "string",
            "sourceColumn": "Displn Ctrl",
            "encodingHint": "hash"
          },
          {
            "name": "Displn Info",
            "dataType": "string",
            "sourceColumn": "Displn Info",
            "encodingHint": "hash"
          },
          {
            "name": "Displn Mops",
            "dataType": "string",
            "sourceColumn": "Displn Mops",
            "encodingHint": "hash"
          },
          {
            "name": "Displn Process",
            "dataType": "string",
            "sourceColumn": "Displn Process",
            "encodingHint": "hash"
          },
          {
            "name": "Displn Safety",
            "dataType": "string",
            "sourceColumn": "Displn Safety",
            "encodingHint": "hash"
          },
          {
            "name": "Dist Ttry",
            "dataType": "string",
            "sourceColumn": "Dist Ttry",
            "encodingHint": "hash"
          },
          {
            "name": "Dist Ttry Text",
            "dataType": "string",
            "sourceColumn": "Dist Ttry Text",
            "encodingHint": "hash"
          },
          {
            "name": "Email Address",
            "dataType": "string",
            "sourceColumn": "Email Address",
            "encodingHint": "hash"
          },
          {
            "name": "Emp Resp",
            "dataType": "string",
            "sourceColumn": "Emp Resp",
            "encodingHint": "hash"
          },
          {
            "name": "Emp Resp Text",
            "dataType": "string",
            "sourceColumn": "Emp Resp Text",
            "encodingHint": "hash"
          },
          {
            "name": "BP Fax Number",
            "dataType": "string",
            "description": "free-form text for the fax number of the primary contact for the Business Partner, stored as a string",
            "sourceColumn": "BP Fax Number",
            "encodingHint": "hash"
          },
          {
            "name": "Geo Loc Precisid",
            "dataType": "string",
            "sourceColumn": "Geo Loc Precisid",
            "encodingHint": "hash"
          },
          {
            "name": "Glbl Agmt Ind",
            "dataType": "string",
            "sourceColumn": "Glbl Agmt Ind",
            "encodingHint": "hash"
          },
          {
            "name": "Glbl Agmt Ind Text",
            "dataType": "string",
            "sourceColumn": "Glbl Agmt Ind Text",
            "encodingHint": "hash"
          },
          {
            "name": "Global Ultimate Duns",
            "dataType": "string",
            "sourceColumn": "Global Ultimate Duns",
            "encodingHint": "hash"
          },
          {
            "name": "Global Ultimate Duns Text",
            "dataType": "string",
            "sourceColumn": "Global Ultimate Duns Text",
            "encodingHint": "hash"
          },
          {
            "name": "Hq Parent Duns",
            "dataType": "string",
            "sourceColumn": "Hq Parent Duns",
            "encodingHint": "hash"
          },
          {
            "name": "Hq Parent Duns Text",
            "dataType": "string",
            "sourceColumn": "Hq Parent Duns Text",
            "encodingHint": "hash"
          },
          {
            "name": "Ind Sector",
            "dataType": "string",
            "sourceColumn": "Ind Sector",
            "encodingHint": "hash"
          },
          {
            "name": "Ind Vertical",
            "dataType": "string",
            "sourceColumn": "Ind Vertical",
            "encodingHint": "hash"
          },
          {
            "name": "Indus Vertcl Desc",
            "dataType": "string",
            "sourceColumn": "Indus Vertcl Desc",
            "encodingHint": "hash"
          },
          {
            "name": "Industry1 Text",
            "dataType": "string",
            "sourceColumn": "Industry1 Text",
            "encodingHint": "hash"
          },
          {
            "name": "Industry2 Text",
            "dataType": "string",
            "sourceColumn": "Industry2 Text",
            "encodingHint": "hash"
          },
          {
            "name": "Industry3 Text",
            "dataType": "string",
            "sourceColumn": "Industry3 Text",
            "encodingHint": "hash"
          },
          {
            "name": "Is Contact",
            "dataType": "string",
            "sourceColumn": "Is Contact",
            "encodingHint": "hash"
          },
          {
            "name": "Langu Key",
            "dataType": "string",
            "sourceColumn": "Langu Key",
            "encodingHint": "hash"
          },
          {
            "name": "Life Cycle",
            "dataType": "string",
            "sourceColumn": "Life Cycle",
            "encodingHint": "hash"
          },
          {
            "name": "Local Duns",
            "dataType": "string",
            "sourceColumn": "Local Duns",
            "encodingHint": "hash"
          },
          {
            "name": "Local Duns Text",
            "dataType": "string",
            "sourceColumn": "Local Duns Text",
            "encodingHint": "hash"
          },
          {
            "name": "Name Co",
            "dataType": "string",
            "sourceColumn": "Name Co",
            "encodingHint": "hash"
          },
          {
            "name": "Name Org1",
            "dataType": "string",
            "sourceColumn": "Name Org1",
            "encodingHint": "hash"
          },
          {
            "name": "Name Org2",
            "dataType": "string",
            "sourceColumn": "Name Org2",
            "encodingHint": "hash"
          },
          {
            "name": "Name Org3",
            "dataType": "string",
            "sourceColumn": "Name Org3",
            "encodingHint": "hash"
          },
          {
            "name": "Name Org4",
            "dataType": "string",
            "sourceColumn": "Name Org4",
            "encodingHint": "hash"
          },
          {
            "name": "Oem Mach Subseg",
            "dataType": "string",
            "sourceColumn": "Oem Mach Subseg",
            "encodingHint": "hash"
          },
          {
            "name": "Oem Mach Subseg Text",
            "dataType": "string",
            "sourceColumn": "Oem Mach Subseg Text",
            "encodingHint": "hash"
          },
          {
            "name": "Oem Machine Cat",
            "dataType": "string",
            "sourceColumn": "Oem Machine Cat",
            "encodingHint": "hash"
          },
          {
            "name": "Oem Machine Cat Text",
            "dataType": "string",
            "sourceColumn": "Oem Machine Cat Text",
            "encodingHint": "hash"
          },
          {
            "name": "Oem Seg",
            "dataType": "string",
            "sourceColumn": "Oem Seg",
            "encodingHint": "hash"
          },
          {
            "name": "Oem Seg Text",
            "dataType": "string",
            "sourceColumn": "Oem Seg Text",
            "encodingHint": "hash"
          },
          {
            "name": "Oem Tier1",
            "dataType": "string",
            "sourceColumn": "Oem Tier1",
            "encodingHint": "hash"
          },
          {
            "name": "Oem Tier1 Text",
            "dataType": "string",
            "sourceColumn": "Oem Tier1 Text",
            "encodingHint": "hash"
          },
          {
            "name": "Ord Blk",
            "dataType": "string",
            "sourceColumn": "Ord Blk",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner PO Box",
            "dataType": "string",
            "description": "number of the post office box for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "Business Partner PO Box",
            "encodingHint": "hash"
          },
          {
            "name": "Prdcat Gencat",
            "dataType": "string",
            "sourceColumn": "Prdcat Gencat",
            "encodingHint": "hash"
          },
          {
            "name": "Prdcat Iapvcat",
            "dataType": "string",
            "sourceColumn": "Prdcat Iapvcat",
            "encodingHint": "hash"
          },
          {
            "name": "Prdcat Prodplus Cat",
            "dataType": "string",
            "sourceColumn": "Prdcat Prodplus Cat",
            "encodingHint": "hash"
          },
          {
            "name": "Prdcat Safetycat",
            "dataType": "string",
            "sourceColumn": "Prdcat Safetycat",
            "encodingHint": "hash"
          },
          {
            "name": "Prdcat Safetycat E",
            "dataType": "string",
            "sourceColumn": "Prdcat Safetycat E",
            "encodingHint": "hash"
          },
          {
            "name": "Prdcat Sscat",
            "dataType": "string",
            "sourceColumn": "Prdcat Sscat",
            "encodingHint": "hash"
          },
          {
            "name": "Prim Accnt",
            "dataType": "string",
            "sourceColumn": "Prim Accnt",
            "encodingHint": "hash"
          },
          {
            "name": "Prim Mkt",
            "dataType": "string",
            "sourceColumn": "Prim Mkt",
            "encodingHint": "hash"
          },
          {
            "name": "Prim Mkt Text",
            "dataType": "string",
            "sourceColumn": "Prim Mkt Text",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner RAAMP Code",
            "dataType": "string",
            "description": "code for the RAAMP services that the customer subscribes to (such as RO for RAAMP Only or RS for RAAMP / storeroom management), stored as a string",
            "sourceColumn": "Business Partner RAAMP Code",
            "encodingHint": "hash"
          },
          {
            "name": "Reg Ttry",
            "dataType": "string",
            "sourceColumn": "Reg Ttry",
            "encodingHint": "hash"
          },
          {
            "name": "Reg Ttry Text",
            "dataType": "string",
            "sourceColumn": "Reg Ttry Text",
            "encodingHint": "hash"
          },
          {
            "name": "Sale Branch",
            "dataType": "string",
            "sourceColumn": "Sale Branch",
            "encodingHint": "hash"
          },
          {
            "name": "Sales District Code",
            "dataType": "string",
            "description": "code in SAP for the Rockwell Automation district sales area (such as ASE for Asia South East, BOS for Boston, and SEA for Seattle), comprised of multiple sales offices, responsible for providing support to the sold-to customer, stored as a three-letter string",
            "sourceColumn": "Sales District Code",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Office Code",
            "dataType": "string",
            "description": "code in SAP for the Rockwell Automation sales office (such as DET for Detroit or MKE for Milwaukee) responsible for providing support to the sold-to customer, stored as a three-letter string",
            "sourceColumn": "Sales Office Code",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Purpose",
            "dataType": "string",
            "sourceColumn": "Sales Purpose",
            "encodingHint": "hash"
          },
          {
            "name": "Sbureg Ttry",
            "dataType": "string",
            "sourceColumn": "Sbureg Ttry",
            "encodingHint": "hash"
          },
          {
            "name": "Sbureg Ttry Text",
            "dataType": "string",
            "sourceColumn": "Sbureg Ttry Text",
            "encodingHint": "hash"
          },
          {
            "name": "Search Term1",
            "dataType": "string",
            "sourceColumn": "Search Term1",
            "encodingHint": "hash"
          },
          {
            "name": "Search Term2",
            "dataType": "string",
            "sourceColumn": "Search Term2",
            "encodingHint": "hash"
          },
          {
            "name": "SIC Code Text",
            "dataType": "string",
            "sourceColumn": "SIC Code Text",
            "encodingHint": "hash"
          },
          {
            "name": "SS Customer Type Code",
            "dataType": "string",
            "description": [
              "code for a category of business partners that Rockwell Automation transacts with or does business with (see examples below), stored as a two-digit string",
              "",
              "01 = A&E, EPC, or Consultant",
              "02 = Contractor",
              "03 = Educational Institution",
              "04 = End User (direct customer of RA)",
              "05 = Unauth Reseller",
              "06 = OEM",
              "07 = Panel Builder",
              "08 = RA Authorized Distributor",
              "09 = System Integrator",
              "10 = Rockwell Location",
              "11 = Authorized Reseller",
              "",
              ""
            ],
            "sourceColumn": "SS Customer Type Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Customer Type Description",
            "dataType": "string",
            "sourceColumn": "SS Customer Type Description",
            "encodingHint": "hash"
          },
          {
            "name": "Ss Indus Clfsn",
            "dataType": "string",
            "sourceColumn": "Ss Indus Clfsn",
            "encodingHint": "hash"
          },
          {
            "name": "Ss Indus Desc",
            "dataType": "string",
            "sourceColumn": "Ss Indus Desc",
            "encodingHint": "hash"
          },
          {
            "name": "SS SAP Sales Territory Code",
            "dataType": "string",
            "sourceColumn": "SS SAP Sales Territory Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales APR Code",
            "dataType": "string",
            "sourceColumn": "SS Sales APR Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales APR Description",
            "dataType": "string",
            "sourceColumn": "SS Sales APR Description",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Country Description",
            "dataType": "string",
            "sourceColumn": "SS Sales Country Description",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Country Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales District Code",
            "dataType": "string",
            "sourceColumn": "SS Sales District Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales District Description",
            "dataType": "string",
            "sourceColumn": "SS Sales District Description",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Office Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Office Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Organization Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Organization Code",
            "encodingHint": "hash"
          },
          {
            "name": "Ss Sales Region",
            "dataType": "string",
            "sourceColumn": "Ss Sales Region",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Region Description",
            "dataType": "string",
            "sourceColumn": "SS Sales Region Description",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Territory Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Territory Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Territory Description",
            "dataType": "string",
            "sourceColumn": "SS Sales Territory Description",
            "encodingHint": "hash"
          },
          {
            "name": "Region Name",
            "dataType": "string",
            "description": "name of the state, province, or county (such as Wisconsin for WI or Paris for 75) associated with the address for the given Sold To Business Partner in SAP, stored as a string",
            "sourceColumn": "Region Name",
            "encodingHint": "hash"
          },
          {
            "name": "Tlkit Parentid",
            "dataType": "string",
            "sourceColumn": "Tlkit Parentid",
            "encodingHint": "hash"
          },
          {
            "name": "Tlkit Prgnm",
            "dataType": "string",
            "sourceColumn": "Tlkit Prgnm",
            "encodingHint": "hash"
          },
          {
            "name": "Tlkit Prgnm Text",
            "dataType": "string",
            "sourceColumn": "Tlkit Prgnm Text",
            "encodingHint": "hash"
          },
          {
            "name": "Vas Code",
            "dataType": "string",
            "sourceColumn": "Vas Code",
            "encodingHint": "hash"
          },
          {
            "name": "Strategic Account",
            "dataType": "string",
            "sourceColumn": "Strategic Account"
          },
          {
            "name": "Strategic Account Description",
            "dataType": "string",
            "sourceColumn": "Strategic Account Description"
          },
          {
            "name": "Attribute 4",
            "dataType": "string",
            "sourceColumn": "Attribute 4"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_BUSINESS_PARTNER_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_BUSINESS_PARTNER_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_BUSINESS_PARTNER_BusNm,{\"BUSI_PRTNR_KEY\", \"Business Partner\", \"Account Code\", \"Account Group Code\", \"Address \", \"APR\", \"Arch Flag\", \"Attribute 4\", \"Strategic Account Level\", \"BAS City Code\", \"BAS City1\", \"BAS City2\", \"BAS Floor10\", \"BAS House Num1\", \"BAS House Num2\", \"BAS Location\", \"BAS PO Box City\", \"BAS PO Box Location\", \"BAS PO Box Postal Code\", \"BAS PO Box Registration\", \"BAS Postal Code GIS\", \"BAS Postal Code\", \"BAS Region Group\", \"BAS Str Suppl1\", \"BAS Str Suppl2\", \"BAS Str Suppl3\", \"BAS Street\", \"BAS Street Code\", \"BAS Tax Jurisdiction Code\", \"BAS Telephone Number\", \"BAS Time Zone\", \"Bill Blk\", \"Birth Name\", \"BP Address Line0\", \"BP Address Line1\", \"BP Address Line2\", \"BP Address Line3\", \"BP Address Line4\", \"BP Address Line5\", \"BP Address Line6\", \"BP Address Line7\", \"BP Address Line8\", \"BP Address Line9\", \"Business Address Short\", \"Business Address Short S\", \"BP BAS Care Of PO Code\", \"BP BAS Fax Display\", \"BP BAS Room Number\", \"BP BAS Teliphone Display\", \"BP BAS Trans Zone\", \"BP Business Unit Group\", \"BP Category\", \"BP Comp\", \"BP Contract\", \"BP Customer\", \"BP Date From\", \"BP Date To\", \"BP GEO SRCID\", \"BP GUID\", \"BP IND SYS\", \"BP Legal Entity\", \"BP Lock Status\", \"BP MAR STA\", \"BP Name First\", \"BP Name Last\", \"BP Name Last2\", \"BP Name Middle\", \"BP Relationship Status\", \"BP STP TRANS Zone\", \"Bpartner Ltext\", \"Bpartner Mtext\", \"Bpartner Stext\", \"Branch Teretory\", \"Branch Teretory Text\", \"Cam Build20\", \"Time of Last Change to the Transaction\", \"Transaction Last Changed By\", \"Changed On\", \"Country Code\", \"BP Country Name\", \"Created By\", \"Created On\", \"Created Time\", \"Country Name\", \"Customer Class\", \"Customer Type\", \"Customer Type Description\", \"Data Source Code\", \"Del Blk\", \"Displn Ctrl\", \"Displn Info\", \"Displn Mops\", \"Displn Process\", \"Displn Safety\", \"Dist Ttry\", \"Dist Ttry Text\", \"Email Address\", \"Emp Resp\", \"Emp Resp Text\", \"BP Fax Number\", \"Gender\", \"Geo Loc Precisid\", \"Glbl Agmt Ind\", \"Glbl Agmt Ind Text\", \"Global Ultimate Duns\", \"Global Ultimate Duns Text\", \"Hq Parent Duns\", \"Hq Parent Duns Text\", \"Ind Sector\", \"Ind Vertical\", \"Indus Vertcl Desc\", \"Multi-Industry 1 Description\", \"Industry1 Text\", \"Multi-Industry 2 Description\", \"Industry2 Text\", \"Multi-Industry 3 Description\", \"Industry3 Text\", \"Is Contact\", \"Langu Key\", \"Latitude\", \"Life Cycle\", \"Local Duns\", \"Local Duns Text\", \"Longitude\", \"Name Co\", \"Name Org1\", \"Name Org2\", \"Name Org3\", \"Name Org4\", \"Nationality\", \"Oem Mach Subseg\", \"Oem Mach Subseg Text\", \"Oem Machine Cat\", \"Oem Machine Cat Text\", \"Oem Seg\", \"Oem Seg Text\", \"Oem Tier1\", \"Oem Tier1 Text\", \"Ord Blk\", \"Plant\", \"Business Partner PO Box\", \"Prdcat Gencat\", \"Prdcat Iapvcat\", \"Prdcat Prodplus Cat\", \"Prdcat Safetycat\", \"Prdcat Safetycat E\", \"Prdcat Sscat\", \"Prim Accnt\", \"Prim Mkt\", \"Prim Mkt Text\", \"Business Partner RAAMP Code\", \"Reg Ttry\", \"Reg Ttry Text\", \"Region\", \"Sale Branch\", \"Sales District Code\", \"Sales Office Code\", \"Sales Purpose\", \"Sales Region\", \"Sales Sub-Region\", \"Sbureg Ttry\", \"Sbureg Ttry Text\", \"Search Term1\", \"Search Term2\", \"SIC Code\", \"SIC Code Text\", \"Source\", \"SS Customer Type Code\", \"SS Customer Type Description\", \"Ss Indus Clfsn\", \"Ss Indus Desc\", \"SS SAP Sales Territory Code\", \"SS Sales APR Code\", \"SS Sales APR Description\", \"SS Sales Country Description\", \"SS Sales Country Code\", \"SS Sales District Code\", \"SS Sales District Description\", \"SS Sales Office Code\", \"SS Sales Organization Code\", \"Ss Sales Region\", \"SS Sales Region Description\", \"SS Sales Territory Code\", \"SS Sales Territory Description\", \"Strategic Account\", \"Strategic Account Description\", \"Region Name\", \"Tlkit Parentid\", \"Tlkit Prgnm\", \"Tlkit Prgnm Text\", \"Vas Code\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_CUSTOMER_SHIP_TO",
        "columns": [
          {
            "name": "CUST_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "CUST_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner SIC Code",
            "dataType": "string",
            "description": "Standard Industry Classification (SIC) four-digit code and description from Dun & Bradstreet (D&B) (such as 3675 for Electronic Capacitors), which classifies the customer into to an industry, stored as a nvarchar",
            "sourceColumn": "Business Partner SIC Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Strategic Account Identifier",
            "dataType": "string",
            "description": [
              "identifier (such as 001 for 3M or T52 for Toyota) for an account with an established close relationship, or a close relationship being nurtured, identified by Rockwell Automation industry leadership based on specific criteria that includes (but is not limited to) the strategic direction for the account, geographic presence, and alignment with Rockwell Automation global core industries and our global industry ecosystem, stored as a nvarchar",
              "",
              "For example:",
              "001 - 3M",
              "200 - C.A. - Amerada Hess",
              "201 - C.A. - Anadarko",
              "202 - C.A. - Applied Mater",
              "204 - C.A. - Ingersoll Ran",
              "205 - C.A. - Cemex",
              "207 - C.A. - Coca-Cola",
              "208 - C.A. - ConAgra",
              "210 - C.A. - Corning",
              ""
            ],
            "sourceColumn": "Strategic Account Identifier",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Identfier",
            "dataType": "string",
            "description": "business partner identifier in SAP for the company (such as a distributor, or an end customer) that purchased the product, stored as a nvarchar",
            "sourceColumn": "Business Partner Identfier",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Name 1",
            "dataType": "string",
            "description": [
              "name associated with the Business Partner Identifier in SAP for the legal entity name of the company either created in the customer master or imported through EDI (such as a distributor or an end customer), stored as a nvarchar",
              "Known as Account Name 1 in SAP"
            ],
            "sourceColumn": "Business Partner Name 1",
            "encodingHint": "hash"
          },
          {
            "name": "BP Name 1 Description",
            "dataType": "string",
            "description": [
              "medium-length name associated with the Business Partner Identifier in SAP for the company (such as a distributor or an end customer), stored as a nvarchar",
              "",
              "Known as Account Name 1 in SAP"
            ],
            "sourceColumn": "BP Name 1 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Name 2",
            "dataType": "string",
            "description": [
              "second name associated with the Business Partner Identifier in SAP for the company, such as another name or a specific department or division for the distributor or an end customer (for example, Surcursal Argentina, PUBLIC WORKS DEPT, REKO DIVISION, or Software), stored as a nvarchar",
              "",
              "Known as Account Name 2 in SAP"
            ],
            "sourceColumn": "Business Partner Name 2",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Name 3",
            "dataType": "string",
            "description": [
              "third name or additional name details associated with the Business Partner Identifier in SAP for the company (such as a distributor or an end customer, such as EXPLORASTORE, DEPT ENGENHARIA AUTOMACAO, or CONNELLSVLLE AREA SR HIGH SCHL), stored as a nvarchar",
              "",
              "Use of Name 3 varies by country.  For example, in India, Name 3 stores the name of the main contact for that company, while in Chile, Name 3 stores required “Giro del negocio del Receptor” information from local Finance.",
              "",
              "Known as Account Name 3 in SAP"
            ],
            "sourceColumn": "Business Partner Name 3",
            "encodingHint": "hash"
          },
          {
            "name": "BP Customer Type Code",
            "dataType": "string",
            "description": [
              "code for a category of business partners that Rockwell Automation transacts with or does business with (see examples below), stored as a two-digit nvarchar",
              "",
              "01 = A&E, EPC, or Consultant",
              "02 = Contractor",
              "03 = Educational Institution",
              "04 = End User (direct customer of RA)",
              "05 = Unauth Reseller",
              "06 = OEM",
              "07 = Panel Builder",
              "08 = RA Authorized Distributor",
              "09 = System Integrator",
              "10 = Rockwell Location",
              "11 = Authorized Reseller",
              "",
              ""
            ],
            "sourceColumn": "BP Customer Type Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner City Name",
            "dataType": "string",
            "description": "name of the city for the given Business Partner in SAP, stored as a nvarchar",
            "sourceColumn": "Business Partner City Name",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Country Code",
            "dataType": "string",
            "description": "code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a two-character nvarchar",
            "sourceColumn": "Business Partner Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "BP Country Subdivision Code",
            "dataType": "string",
            "description": [
              "two-character abbreviation for the state, province, or county (such as WI for Wisconsin or 75 for Paris) associated with the address for the given Business Partner in SAP, stored as a nvarchar",
              "",
              "Known as Region (State, Province, County) in SAP"
            ],
            "sourceColumn": "BP Country Subdivision Code",
            "encodingHint": "hash"
          },
          {
            "name": "BP Account Group Code",
            "dataType": "string",
            "description": "code in SAP for the type of relationship a business partner has with Rockwell Automation (such as 0001 for Sold-to party, 0002 for Goods recipient, ZRAP for Rockwell US Partner Plant, and ZRET for Rockwell Return Vendor), stored as a nvarchar",
            "sourceColumn": "BP Account Group Code",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Account Deletion Indicator",
            "dataType": "string",
            "description": [
              "indicator of whether the customer is active or inactive (blank for if the customer is active or  X for if the customer is inactive), stored as a nvarchar",
              "",
              "This indicator is used during analysis as a filter to include only customer that are still active at the Sales Organization level. "
            ],
            "sourceColumn": "Customer Account Deletion Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Dual Area Of Primary Responsibility",
            "dataType": "string",
            "description": [
              "description of the two distributors that are authorized to sell Rockwell Automation products within a single geographic area (such as IT1), abbreviated \"\"APR\"\", defined by Rockwell Automation at the lowest level of sales office hierarachy, stored as a string",
              "",
              "APR relationships for distributors drive security for access to SAP and are also used to determine whether a distributor can request a special price agreement.",
              "",
              "The APR identifies the Rockwell Automation distributor for the area, but sometimes the same area has a second authorized distributor to cover the area.  Where this occurs, APR and Dual APR store derived values (such as 001=001-ALLIED ELECTRIC, 002=002-B & K ELECTRIC)."
            ],
            "sourceColumn": "Dual Area Of Primary Responsibility",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Fax Number",
            "dataType": "string",
            "description": "free-form text for the fax number of the primary contact for the Business Partner, stored as a string",
            "sourceColumn": "Business Partner Fax Number",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Year Variant",
            "dataType": "string",
            "description": "code for the fiscal year calendar used in SAP (such as RA, which signifies that the Rockwell Automation fiscal year spans from 1 Oct to 30 Sep), stored as a nvarchar",
            "sourceColumn": "Fiscal Year Variant",
            "encodingHint": "hash"
          },
          {
            "name": "BP Industry Vertical Identifier",
            "dataType": "string",
            "description": [
              "classification defined by Rockwell Automation (see examples below), which groups the customer into to a specifc industry of interest, stored as a nvarchar",
              "01 - Airports",
              "02 - Multi-Industry",
              "03 - Automotive",
              "04 - Cement & Aggregate",
              "05 - Chemicals & Plastics",
              "06 - Entertainment",
              "07 - Fibers & Textiles",
              "08 - Food & Beverage",
              "09 - Glass",
              "10 - Household & P. Care",
              "11 - Life Sciences",
              "12 - Marine",
              "13 - Mass Transit",
              "14 - Metals",
              "15 - Mining",
              "16 - Oil & Gas",
              "17 - Other",
              "18 - Power & Energy",
              "19 - Printing & Publishin",
              "20 - Pulp & Paper",
              "21 - Semiconductor & Elec",
              "22 - Tire & Rubber",
              "23 - Water / Wastewater",
              "24 - Rockwell Distributor",
              "25 - Rockwell Location"
            ],
            "sourceColumn": "BP Industry Vertical Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Usage Code For Material Sale",
            "dataType": "string",
            "description": [
              "classification in SAP (see examples below) for the conditions under which the given material was sold for documentation purposes (such as for a nota fiscal for Brazil), stored as a nvarchar",
              "",
              "ZDM = DMI Distributors",
              "ZEF = Estimate",
              "ZET = Special Programs",
              "ZFC = Created From Contract",
              "ZFD = FOB Dest Adder",
              "ZRR = Return Replacement",
              "ZTU = Step Forward",
              "ZZZ = PilotOrder/SftWr/Msc"
            ],
            "sourceColumn": "Usage Code For Material Sale",
            "encodingHint": "hash"
          },
          {
            "name": "BP Telephone 1 Number",
            "dataType": "string",
            "description": "free-form text for the telephone number (such as +1 414 867 5309) of the primary contact for the Business Partner, stored as a nvarchar",
            "sourceColumn": "BP Telephone 1 Number",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner PO Box",
            "dataType": "string",
            "description": "number of the post office box for the given Business Partner in SAP, stored as a nvarchar",
            "sourceColumn": "Business Partner PO Box",
            "encodingHint": "hash"
          },
          {
            "name": "BP PO Box City Name",
            "dataType": "string",
            "description": "name of the city associated with the Postal Code for the Post Office (\"PO\") Box for the given Business Partner in SAP (such as \"Pekin IL\" for Postal Code 61555), stored as a nvarchar",
            "sourceColumn": "BP PO Box City Name",
            "encodingHint": "hash"
          },
          {
            "name": "BP PO Box Postal Code",
            "dataType": "string",
            "description": [
              "\"postal code of the post office (\"\"PO\"\") box for the given  Business Partner in SAP, stored as a nvarchar",
              "",
              "The Business Partner PO Box Postal Code is used for countries where the postal code (such as the ZIP code in the United States) that is used to send mail to the company P.O. Box is different than the one that is used to send letters to the company address.",
              "",
              "Also, some large companies have their own postal code and no post office box.\""
            ],
            "sourceColumn": "BP PO Box Postal Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Postal Code",
            "dataType": "string",
            "description": "postal code associated with the address for the given Business Partner in SAP, stored as a nvarchar",
            "sourceColumn": "Business Partner Postal Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner RAAMP Code",
            "dataType": "string",
            "description": "code for the RAAMP services that the customer subscribes to (such as RO for RAAMP Only or RS for RAAMP / storeroom management), stored as a nvarchar",
            "sourceColumn": "Business Partner RAAMP Code",
            "encodingHint": "hash"
          },
          {
            "name": "Sales District Name",
            "dataType": "string",
            "description": "name associated with the code in SAP for the Rockwell Automation district sales area (such as SEA for Seattle or BOS for Boston), comprised of multiple sales offices, responsible for providing support to the sold-to customer, stored as a nvarchar",
            "sourceColumn": "Sales District Name",
            "encodingHint": "hash"
          },
          {
            "name": "BP Sold to Cust Type Code",
            "dataType": "string",
            "description": [
              "code for a category of business partners that Rockwell Automation transacts with or does business with (see examples below), stored as a two-digit nvarchar",
              "",
              "01 = A&E, EPC, or Consultant",
              "02 = Contractor",
              "03 = Educational Institution",
              "04 = End User (direct customer of RA)",
              "05 = Unauth Reseller",
              "06 = OEM",
              "07 = Panel Builder",
              "08 = RA Authorized Distributor",
              "09 = System Integrator",
              "10 = Rockwell Location",
              "11 = Authorized Reseller",
              "",
              ""
            ],
            "sourceColumn": "BP Sold to Cust Type Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Search Term",
            "dataType": "string",
            "description": "free-form text of the common name for the company associated with the given Business Partner (such as Miller Brewing for MillerCoorsLLC), additional account information, or a reason code or not about closing the account (such as \"CLOSED\"), stored as a nvarchar",
            "sourceColumn": "Business Partner Search Term",
            "encodingHint": "hash"
          },
          {
            "name": "BP Street Address",
            "dataType": "string",
            "description": "free-form text for the address (usually a building number and street) of the location of the given Business Partner, stored as a nvarchar",
            "sourceColumn": "BP Street Address",
            "encodingHint": "hash"
          },
          {
            "name": "Strategic Account Level",
            "dataType": "string",
            "description": [
              "code in SAP (001 for S1 or Global, 002 for S2 or Regional, or 003 for S3 or Internal) that is set based on the Strategic Account Name selected for the given Business Partner (if the business partner has been identified as strategic), stored as a nvarchar",
              "",
              "Strategic Account Managers in the Global Industry Group within Rockwell Automation set the Strategic Account Level associated with each Strategic Account Name."
            ],
            "sourceColumn": "Strategic Account Level",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Tax Number 1",
            "dataType": "string",
            "description": "free-form text (usually a string of digits) for the first tax identification number (usually to represent the company) associated with the business partner, stored as a nvarchar",
            "sourceColumn": "Business Partner Tax Number 1",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Tax Number 2",
            "dataType": "string",
            "description": [
              "free-form text (usually a string of digits) for a second tax identification number associated with the business partner, stored as a nvarchar",
              "",
              "The use of this field varies by country, and often is used to store the tax number for a person (as opposed to a company, which is typically stored in Tax Number 1)."
            ],
            "sourceColumn": "Business Partner Tax Number 2",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Tax Number 3",
            "dataType": "string",
            "description": [
              "free-form text for a third tax identification number associated with the business partner, stored as a nvarchar",
              "",
              "The use of this field varies by country."
            ],
            "sourceColumn": "Business Partner Tax Number 3",
            "encodingHint": "hash"
          },
          {
            "name": "Trading Partner Company Identifier",
            "dataType": "string",
            "description": [
              "identifier for the given Business Partner Identifier (such as 185, the identifier for the company FDS 185 Turkey) or the Company Code of the purchasing company, such as the receiving plant for an intercompany transaction (such as 3031, the identfier for the company Rockwell Automation Chile S.A.), stored as a nvarchar",
              "",
              "A Trading Partner is a legally independent company belonging to the group [company].  Some accounts require a Trading Partner.  The Trading Partner Company Identifier is required on some manually posted transactions (such as FB50, FB60 and FB70).  The Trading Partner Company Identifer is also required for intercompany accounts payable and accounts receivable transactions, intercompany miscellaneous income and expense transactions, and intercompany sales & cost of sales transactions, which are submitted to the HFM system for consolidation."
            ],
            "sourceColumn": "Trading Partner Company Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Transaction Plant Code",
            "dataType": "string",
            "description": [
              "code in SAP for the plant (4 digits stored as text) at which the specified product was manufactured or from which it was delivered (for example, 1020 = Twinsburg, 4000 = European Distribution Center, and 5040 = Rockwell Automation China), stored as a nvarchar",
              "",
              "If the source of a serial number was Factory Talk Product Centre (FTPC), the Transaction Plant Code represents the plant that manufactured or produced the product;  otherwise, the Transaction Plant Code represents the plant that delivered the product per a sales order or stock transfer order."
            ],
            "sourceColumn": "Transaction Plant Code",
            "encodingHint": "hash"
          },
          {
            "name": "BP Value Added Service Code",
            "dataType": "string",
            "description": [
              "an optional classification in SAP that identifies a value-added service to be provided to the customer, stored as a nvarchar",
              "",
              "01 = Pack slip on outside",
              "02 = Customer pick up",
              "03 = Parcels - no pallets",
              "04 = Pack on pallets",
              "05 = Bundling instructions",
              "06 = WI-RS Components (customer-specific)",
              "07 = WI-Atlas Copco (customer-specific)",
              "08 = WI VMI (customer-specific)",
              "09 = Contact RA",
              "10 = WI-Gardner Denver"
            ],
            "sourceColumn": "BP Value Added Service Code",
            "encodingHint": "hash"
          },
          {
            "name": "Vendor BP Identifier",
            "dataType": "string",
            "description": "business partner identifier in SAP for a company from which Rockwell Automation procures items (which could be a Rockwell Automation company, such as 2000276 for Rockwell Automation Korea or 2000159 for Rockwell Automation Mayfield Heights), stored as a string",
            "sourceColumn": "Vendor BP Identifier",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CUSTOMER_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CUSTOMER_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CUSTOMER_BusNm,{\"CUST_KEY\", \"Business Partner Identfier\", \"Business Partner Name 1\", \"BP Name 1 Description\", \"Business Partner Name 2\", \"Business Partner Name 3\", \"BP Customer Type Code\", \"Business Partner City Name\", \"Business Partner Country Code\", \"BP Country Subdivision Code\", \"BP Account Group Code\", \"Customer Account Deletion Indicator\", \"Dual Area Of Primary Responsibility\", \"Business Partner Fax Number\", \"Fiscal Year Variant\", \"BP Industry Vertical Identifier\", \"Usage Code For Material Sale\", \"BP Telephone 1 Number\", \"Business Partner PO Box\", \"BP PO Box City Name\", \"BP PO Box Postal Code\", \"Business Partner Postal Code\", \"Business Partner RAAMP Code\", \"Business Partner SIC Code\", \"Sales District Name\", \"BP Sold to Cust Type Code\", \"Business Partner Search Term\", \"BP Street Address\", \"Strategic Account Identifier\", \"Strategic Account Level\", \"Business Partner Tax Number 1\", \"Business Partner Tax Number 2\", \"Business Partner Tax Number 3\", \"Trading Partner Company Identifier\", \"Transaction Plant Code\", \"BP Value Added Service Code\", \"Vendor BP Identifier\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_CUSTOMER_SOLD_TO",
        "columns": [
          {
            "name": "CUST_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CUST_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Identfier",
            "dataType": "string",
            "description": "business partner identifier in SAP for the company (such as a distributor, or an end customer) that purchased the product, stored as a nvarchar",
            "sourceColumn": "Business Partner Identfier",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Name 1",
            "dataType": "string",
            "description": [
              "name associated with the Business Partner Identifier in SAP for the legal entity name of the company either created in the customer master or imported through EDI (such as a distributor or an end customer), stored as a nvarchar",
              "Known as Account Name 1 in SAP"
            ],
            "sourceColumn": "Business Partner Name 1",
            "encodingHint": "hash"
          },
          {
            "name": "BP Customer Type Code",
            "dataType": "string",
            "description": [
              "code for a category of business partners that Rockwell Automation transacts with or does business with (see examples below), stored as a two-digit nvarchar",
              "",
              "01 = A&E, EPC, or Consultant",
              "02 = Contractor",
              "03 = Educational Institution",
              "04 = End User (direct customer of RA)",
              "05 = Unauth Reseller",
              "06 = OEM",
              "07 = Panel Builder",
              "08 = RA Authorized Distributor",
              "09 = System Integrator",
              "10 = Rockwell Location",
              "11 = Authorized Reseller",
              "",
              ""
            ],
            "sourceColumn": "BP Customer Type Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner City Name",
            "dataType": "string",
            "description": "name of the city for the given Business Partner in SAP, stored as a nvarchar",
            "sourceColumn": "Business Partner City Name",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Country Code",
            "dataType": "string",
            "description": "code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a two-character nvarchar",
            "sourceColumn": "Business Partner Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "BP Country Subdivision Code",
            "dataType": "string",
            "description": [
              "two-character abbreviation for the state, province, or county (such as WI for Wisconsin or 75 for Paris) associated with the address for the given Business Partner in SAP, stored as a nvarchar",
              "",
              "Known as Region (State, Province, County) in SAP"
            ],
            "sourceColumn": "BP Country Subdivision Code",
            "encodingHint": "hash"
          },
          {
            "name": "BP Account Group Code",
            "dataType": "string",
            "description": "code in SAP for the type of relationship a business partner has with Rockwell Automation (such as 0001 for Sold-to party, 0002 for Goods recipient, ZRAP for Rockwell US Partner Plant, and ZRET for Rockwell Return Vendor), stored as a nvarchar",
            "sourceColumn": "BP Account Group Code",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Account Deletion Indicator",
            "dataType": "string",
            "description": [
              "indicator of whether the customer is active or inactive (blank for if the customer is active or  X for if the customer is inactive), stored as a nvarchar",
              "",
              "This indicator is used during analysis as a filter to include only customer that are still active at the Sales Organization level. "
            ],
            "sourceColumn": "Customer Account Deletion Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "BP Industry Vertical Identifier",
            "dataType": "string",
            "description": [
              "classification defined by Rockwell Automation (see examples below), which groups the customer into to a specifc industry of interest, stored as a nvarchar",
              "01 - Airports",
              "02 - Multi-Industry",
              "03 - Automotive",
              "04 - Cement & Aggregate",
              "05 - Chemicals & Plastics",
              "06 - Entertainment",
              "07 - Fibers & Textiles",
              "08 - Food & Beverage",
              "09 - Glass",
              "10 - Household & P. Care",
              "11 - Life Sciences",
              "12 - Marine",
              "13 - Mass Transit",
              "14 - Metals",
              "15 - Mining",
              "16 - Oil & Gas",
              "17 - Other",
              "18 - Power & Energy",
              "19 - Printing & Publishin",
              "20 - Pulp & Paper",
              "21 - Semiconductor & Elec",
              "22 - Tire & Rubber",
              "23 - Water / Wastewater",
              "24 - Rockwell Distributor",
              "25 - Rockwell Location"
            ],
            "sourceColumn": "BP Industry Vertical Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner RAAMP Code",
            "dataType": "string",
            "description": "code for the RAAMP services that the customer subscribes to (such as RO for RAAMP Only or RS for RAAMP / storeroom management), stored as a nvarchar",
            "sourceColumn": "Business Partner RAAMP Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner SIC Code",
            "dataType": "string",
            "description": "Standard Industry Classification (SIC) four-digit code and description from Dun & Bradstreet (D&B) (such as 3675 for Electronic Capacitors), which classifies the customer into to an industry, stored as a nvarchar",
            "sourceColumn": "Business Partner SIC Code",
            "encodingHint": "hash"
          },
          {
            "name": "Sales District Name",
            "dataType": "string",
            "description": "name associated with the code in SAP for the Rockwell Automation district sales area (such as SEA for Seattle or BOS for Boston), comprised of multiple sales offices, responsible for providing support to the sold-to customer, stored as a nvarchar",
            "sourceColumn": "Sales District Name",
            "encodingHint": "hash"
          },
          {
            "name": "BP Sold to Cust Type Code",
            "dataType": "string",
            "description": [
              "code for a category of business partners that Rockwell Automation transacts with or does business with (see examples below), stored as a two-digit nvarchar",
              "",
              "01 = A&E, EPC, or Consultant",
              "02 = Contractor",
              "03 = Educational Institution",
              "04 = End User (direct customer of RA)",
              "05 = Unauth Reseller",
              "06 = OEM",
              "07 = Panel Builder",
              "08 = RA Authorized Distributor",
              "09 = System Integrator",
              "10 = Rockwell Location",
              "11 = Authorized Reseller",
              "",
              ""
            ],
            "sourceColumn": "BP Sold to Cust Type Code",
            "encodingHint": "hash"
          },
          {
            "name": "Strategic Account Identifier",
            "dataType": "string",
            "description": [
              "identifier (such as 001 for 3M or T52 for Toyota) for an account with an established close relationship, or a close relationship being nurtured, identified by Rockwell Automation industry leadership based on specific criteria that includes (but is not limited to) the strategic direction for the account, geographic presence, and alignment with Rockwell Automation global core industries and our global industry ecosystem, stored as a nvarchar",
              "",
              "For example:",
              "001 - 3M",
              "200 - C.A. - Amerada Hess",
              "201 - C.A. - Anadarko",
              "202 - C.A. - Applied Mater",
              "204 - C.A. - Ingersoll Ran",
              "205 - C.A. - Cemex",
              "207 - C.A. - Coca-Cola",
              "208 - C.A. - ConAgra",
              "210 - C.A. - Corning",
              ""
            ],
            "sourceColumn": "Strategic Account Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Strategic Account Level",
            "dataType": "string",
            "description": [
              "code in SAP (001 for S1 or Global, 002 for S2 or Regional, or 003 for S3 or Internal) that is set based on the Strategic Account Name selected for the given Business Partner (if the business partner has been identified as strategic), stored as a nvarchar",
              "",
              "Strategic Account Managers in the Global Industry Group within Rockwell Automation set the Strategic Account Level associated with each Strategic Account Name."
            ],
            "sourceColumn": "Strategic Account Level",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CUSTOMER_SoldTo_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CUSTOMER_SoldTo_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CUSTOMER_SoldTo_BusNm,{\"CUST_KEY\", \"Business Partner Identfier\", \"Business Partner Name 1\", \"BP Customer Type Code\", \"Business Partner City Name\", \"Business Partner Country Code\", \"BP Country Subdivision Code\", \"BP Account Group Code\", \"Customer Account Deletion Indicator\", \"BP Industry Vertical Identifier\", \"Business Partner RAAMP Code\", \"Business Partner SIC Code\", \"Sales District Name\", \"BP Sold to Cust Type Code\", \"Strategic Account Identifier\", \"Strategic Account Level\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_CUSTOMER_END",
        "columns": [
          {
            "name": "CUST_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CUST_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Identfier",
            "dataType": "string",
            "description": "business partner identifier in SAP for the company (such as a distributor, or an end customer) that purchased the product, stored as a nvarchar",
            "sourceColumn": "Business Partner Identfier",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Name 1",
            "dataType": "string",
            "description": [
              "name associated with the Business Partner Identifier in SAP for the legal entity name of the company either created in the customer master or imported through EDI (such as a distributor or an end customer), stored as a nvarchar",
              "Known as Account Name 1 in SAP"
            ],
            "sourceColumn": "Business Partner Name 1",
            "encodingHint": "hash"
          },
          {
            "name": "BP Customer Type Code",
            "dataType": "string",
            "description": [
              "code for a category of business partners that Rockwell Automation transacts with or does business with (see examples below), stored as a two-digit nvarchar",
              "",
              "01 = A&E, EPC, or Consultant",
              "02 = Contractor",
              "03 = Educational Institution",
              "04 = End User (direct customer of RA)",
              "05 = Unauth Reseller",
              "06 = OEM",
              "07 = Panel Builder",
              "08 = RA Authorized Distributor",
              "09 = System Integrator",
              "10 = Rockwell Location",
              "11 = Authorized Reseller",
              "",
              ""
            ],
            "sourceColumn": "BP Customer Type Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner City Name",
            "dataType": "string",
            "description": "name of the city for the given Business Partner in SAP, stored as a nvarchar",
            "sourceColumn": "Business Partner City Name",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Country Code",
            "dataType": "string",
            "description": "code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a two-character nvarchar",
            "sourceColumn": "Business Partner Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "BP Country Subdivision Code",
            "dataType": "string",
            "description": [
              "two-character abbreviation for the state, province, or county (such as WI for Wisconsin or 75 for Paris) associated with the address for the given Business Partner in SAP, stored as a nvarchar",
              "",
              "Known as Region (State, Province, County) in SAP"
            ],
            "sourceColumn": "BP Country Subdivision Code",
            "encodingHint": "hash"
          },
          {
            "name": "BP Account Group Code",
            "dataType": "string",
            "description": "code in SAP for the type of relationship a business partner has with Rockwell Automation (such as 0001 for Sold-to party, 0002 for Goods recipient, ZRAP for Rockwell US Partner Plant, and ZRET for Rockwell Return Vendor), stored as a nvarchar",
            "sourceColumn": "BP Account Group Code",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Account Deletion Indicator",
            "dataType": "string",
            "description": [
              "indicator of whether the customer is active or inactive (blank for if the customer is active or  X for if the customer is inactive), stored as a nvarchar",
              "",
              "This indicator is used during analysis as a filter to include only customer that are still active at the Sales Organization level. "
            ],
            "sourceColumn": "Customer Account Deletion Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "BP Industry Vertical Identifier",
            "dataType": "string",
            "description": [
              "classification defined by Rockwell Automation (see examples below), which groups the customer into to a specifc industry of interest, stored as a nvarchar",
              "01 - Airports",
              "02 - Multi-Industry",
              "03 - Automotive",
              "04 - Cement & Aggregate",
              "05 - Chemicals & Plastics",
              "06 - Entertainment",
              "07 - Fibers & Textiles",
              "08 - Food & Beverage",
              "09 - Glass",
              "10 - Household & P. Care",
              "11 - Life Sciences",
              "12 - Marine",
              "13 - Mass Transit",
              "14 - Metals",
              "15 - Mining",
              "16 - Oil & Gas",
              "17 - Other",
              "18 - Power & Energy",
              "19 - Printing & Publishin",
              "20 - Pulp & Paper",
              "21 - Semiconductor & Elec",
              "22 - Tire & Rubber",
              "23 - Water / Wastewater",
              "24 - Rockwell Distributor",
              "25 - Rockwell Location"
            ],
            "sourceColumn": "BP Industry Vertical Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner RAAMP Code",
            "dataType": "string",
            "description": "code for the RAAMP services that the customer subscribes to (such as RO for RAAMP Only or RS for RAAMP / storeroom management), stored as a nvarchar",
            "sourceColumn": "Business Partner RAAMP Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner SIC Code",
            "dataType": "string",
            "description": "Standard Industry Classification (SIC) four-digit code and description from Dun & Bradstreet (D&B) (such as 3675 for Electronic Capacitors), which classifies the customer into to an industry, stored as a nvarchar",
            "sourceColumn": "Business Partner SIC Code",
            "encodingHint": "hash"
          },
          {
            "name": "Sales District Name",
            "dataType": "string",
            "description": "name associated with the code in SAP for the Rockwell Automation district sales area (such as SEA for Seattle or BOS for Boston), comprised of multiple sales offices, responsible for providing support to the sold-to customer, stored as a nvarchar",
            "sourceColumn": "Sales District Name",
            "encodingHint": "hash"
          },
          {
            "name": "BP Sold to Cust Type Code",
            "dataType": "string",
            "description": [
              "code for a category of business partners that Rockwell Automation transacts with or does business with (see examples below), stored as a two-digit nvarchar",
              "",
              "01 = A&E, EPC, or Consultant",
              "02 = Contractor",
              "03 = Educational Institution",
              "04 = End User (direct customer of RA)",
              "05 = Unauth Reseller",
              "06 = OEM",
              "07 = Panel Builder",
              "08 = RA Authorized Distributor",
              "09 = System Integrator",
              "10 = Rockwell Location",
              "11 = Authorized Reseller",
              "",
              ""
            ],
            "sourceColumn": "BP Sold to Cust Type Code",
            "encodingHint": "hash"
          },
          {
            "name": "Strategic Account Identifier",
            "dataType": "string",
            "description": [
              "identifier (such as 001 for 3M or T52 for Toyota) for an account with an established close relationship, or a close relationship being nurtured, identified by Rockwell Automation industry leadership based on specific criteria that includes (but is not limited to) the strategic direction for the account, geographic presence, and alignment with Rockwell Automation global core industries and our global industry ecosystem, stored as a nvarchar",
              "",
              "For example:",
              "001 - 3M",
              "200 - C.A. - Amerada Hess",
              "201 - C.A. - Anadarko",
              "202 - C.A. - Applied Mater",
              "204 - C.A. - Ingersoll Ran",
              "205 - C.A. - Cemex",
              "207 - C.A. - Coca-Cola",
              "208 - C.A. - ConAgra",
              "210 - C.A. - Corning",
              ""
            ],
            "sourceColumn": "Strategic Account Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Strategic Account Level",
            "dataType": "string",
            "description": [
              "code in SAP (001 for S1 or Global, 002 for S2 or Regional, or 003 for S3 or Internal) that is set based on the Strategic Account Name selected for the given Business Partner (if the business partner has been identified as strategic), stored as a nvarchar",
              "",
              "Strategic Account Managers in the Global Industry Group within Rockwell Automation set the Strategic Account Level associated with each Strategic Account Name."
            ],
            "sourceColumn": "Strategic Account Level",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CUSTOMER_EndCust_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CUSTOMER_EndCust_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CUSTOMER_EndCust_BusNm,{\"CUST_KEY\", \"Business Partner Identfier\", \"Business Partner Name 1\", \"BP Customer Type Code\", \"Business Partner City Name\", \"Business Partner Country Code\", \"BP Country Subdivision Code\", \"BP Account Group Code\", \"Customer Account Deletion Indicator\", \"BP Industry Vertical Identifier\", \"Business Partner RAAMP Code\", \"Business Partner SIC Code\", \"Sales District Name\", \"BP Sold to Cust Type Code\", \"Strategic Account Identifier\", \"Strategic Account Level\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_BUSINESS_PARTNER_SOLD_TO",
        "columns": [
          {
            "name": "BUSI_PRTNR_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BUSI_PRTNR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner",
            "dataType": "string",
            "sourceColumn": "Business Partner",
            "encodingHint": "hash"
          },
          {
            "name": "Account Group Code",
            "dataType": "string",
            "description": [
              "code in SAP for the type of relationship a business partner has with Rockwell Automation (see examples below), stored as a nvarchar",
              "",
              "0001 = Sold-to party",
              "0002 = Goods recipient",
              "0004 = Bill-to party",
              "0005 = Prospective Customer",
              "Z005 = RA Distributor",
              "Z006 = RA Inter/Intra Company",
              "Z099 = POS",
              "ZRAP = RA US Partner Plant",
              "ZRET = RA Return Vendor"
            ],
            "sourceColumn": "Account Group Code",
            "encodingHint": "hash"
          },
          {
            "name": "APR",
            "dataType": "string",
            "sourceColumn": "APR",
            "encodingHint": "hash"
          },
          {
            "name": "Strategic Account Level",
            "dataType": "string",
            "sourceColumn": "Strategic Account Level",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Tax Jurisdiction Code",
            "dataType": "string",
            "sourceColumn": "BAS Tax Jurisdiction Code",
            "encodingHint": "hash"
          },
          {
            "name": "BP Address Line0",
            "dataType": "string",
            "sourceColumn": "BP Address Line0",
            "encodingHint": "hash"
          },
          {
            "name": "Business Address Short",
            "dataType": "string",
            "sourceColumn": "Business Address Short",
            "encodingHint": "hash"
          },
          {
            "name": "Business Address Short S",
            "dataType": "string",
            "sourceColumn": "Business Address Short S",
            "encodingHint": "hash"
          },
          {
            "name": "BP Business Unit Group",
            "dataType": "string",
            "sourceColumn": "BP Business Unit Group",
            "encodingHint": "hash"
          },
          {
            "name": "BP Category",
            "dataType": "string",
            "sourceColumn": "BP Category",
            "encodingHint": "hash"
          },
          {
            "name": "BP IND SYS",
            "dataType": "string",
            "sourceColumn": "BP IND SYS",
            "encodingHint": "hash"
          },
          {
            "name": "BP Name First",
            "dataType": "string",
            "sourceColumn": "BP Name First",
            "encodingHint": "hash"
          },
          {
            "name": "BP Name Last",
            "dataType": "string",
            "sourceColumn": "BP Name Last",
            "encodingHint": "hash"
          },
          {
            "name": "BP Relationship Status",
            "dataType": "int64",
            "sourceColumn": "BP Relationship Status",
            "encodingHint": "hash"
          },
          {
            "name": "Bpartner Ltext",
            "dataType": "string",
            "sourceColumn": "Bpartner Ltext",
            "encodingHint": "hash"
          },
          {
            "name": "Bpartner Mtext",
            "dataType": "string",
            "sourceColumn": "Bpartner Mtext",
            "encodingHint": "hash"
          },
          {
            "name": "Bpartner Stext",
            "dataType": "string",
            "sourceColumn": "Bpartner Stext",
            "encodingHint": "hash"
          },
          {
            "name": "Branch Teretory",
            "dataType": "string",
            "sourceColumn": "Branch Teretory",
            "encodingHint": "hash"
          },
          {
            "name": "Branch Teretory Text",
            "dataType": "string",
            "sourceColumn": "Branch Teretory Text",
            "encodingHint": "hash"
          },
          {
            "name": "Country Code",
            "dataType": "string",
            "sourceColumn": "Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "BP Country Name",
            "dataType": "string",
            "sourceColumn": "BP Country Name",
            "encodingHint": "hash"
          },
          {
            "name": "Country Name",
            "dataType": "string",
            "description": "name associated with the code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a two-character string",
            "sourceColumn": "Country Name",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Class",
            "dataType": "string",
            "sourceColumn": "Customer Class",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Type",
            "dataType": "string",
            "sourceColumn": "Customer Type",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Type Description",
            "dataType": "string",
            "sourceColumn": "Customer Type Description",
            "encodingHint": "hash"
          },
          {
            "name": "Del Blk",
            "dataType": "string",
            "sourceColumn": "Del Blk",
            "encodingHint": "hash"
          },
          {
            "name": "Dist Ttry",
            "dataType": "string",
            "sourceColumn": "Dist Ttry",
            "encodingHint": "hash"
          },
          {
            "name": "Dist Ttry Text",
            "dataType": "string",
            "sourceColumn": "Dist Ttry Text",
            "encodingHint": "hash"
          },
          {
            "name": "Geo Loc Precisid",
            "dataType": "string",
            "sourceColumn": "Geo Loc Precisid",
            "encodingHint": "hash"
          },
          {
            "name": "Glbl Agmt Ind",
            "dataType": "string",
            "sourceColumn": "Glbl Agmt Ind",
            "encodingHint": "hash"
          },
          {
            "name": "Glbl Agmt Ind Text",
            "dataType": "string",
            "sourceColumn": "Glbl Agmt Ind Text",
            "encodingHint": "hash"
          },
          {
            "name": "Global Ultimate Duns",
            "dataType": "string",
            "sourceColumn": "Global Ultimate Duns",
            "encodingHint": "hash"
          },
          {
            "name": "Global Ultimate Duns Text",
            "dataType": "string",
            "sourceColumn": "Global Ultimate Duns Text",
            "encodingHint": "hash"
          },
          {
            "name": "Hq Parent Duns",
            "dataType": "string",
            "sourceColumn": "Hq Parent Duns",
            "encodingHint": "hash"
          },
          {
            "name": "Hq Parent Duns Text",
            "dataType": "string",
            "sourceColumn": "Hq Parent Duns Text",
            "encodingHint": "hash"
          },
          {
            "name": "Ind Sector",
            "dataType": "string",
            "sourceColumn": "Ind Sector",
            "encodingHint": "hash"
          },
          {
            "name": "Ind Vertical",
            "dataType": "string",
            "sourceColumn": "Ind Vertical",
            "encodingHint": "hash"
          },
          {
            "name": "Indus Vertcl Desc",
            "dataType": "string",
            "sourceColumn": "Indus Vertcl Desc",
            "encodingHint": "hash"
          },
          {
            "name": "Multi-Industry 1 Description",
            "dataType": "string",
            "description": [
              "description associated with the first additional classification defined by Rockwell Automation, which groups the customer into to a specifc industry of interest, stored as a nvarchar",
              "",
              "If the Ship To Business Partner Industry Vertical Description is \"\"Multi Industry\"\", then at least one and up to three additional industry vertical classifications are required.",
              "",
              "Industry 1, Industry 2, and Industry 3 Verticals",
              "X1 - Airports",
              "X2 - Automotive",
              "X3 - Cement & Aggregate",
              "X4 - Chemicals & Plastics",
              "X5 - Entertainment",
              "X6 - Fibers & Textiles",
              "X7 - Food & Beverage",
              "X8 - Glass",
              "X9 - Household & P. Care",
              "X10 - Life Sciences",
              "X11 - Marine",
              "X12 - Mass Transit",
              "X13 - Metals",
              "X14 - Mining",
              "X15 - Oil & Gas",
              "X16 - Other",
              "X17 - Power & Energy",
              "X18 - Printing & Publishin",
              "X19 - Pulp & Paper",
              "X20 - Semiconductor & Elec",
              "X21 - Tire & Rubber",
              "X22 - Water / Wastewater",
              "X23 - Rockwell Distributor"
            ],
            "sourceColumn": "Multi-Industry 1 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Industry1 Text",
            "dataType": "string",
            "sourceColumn": "Industry1 Text",
            "encodingHint": "hash"
          },
          {
            "name": "Multi-Industry 2 Description",
            "dataType": "string",
            "description": [
              "description associated with the second additional classification defined by Rockwell Automation, which groups the customer into to a specifc industry of interest, stored as a nvarchar",
              "",
              "If the Ship To Business Partner Industry Vertical Description is \"\"Multi Industry\"\", then at least one and up to three additional industry vertical classifications are required.",
              "",
              "Industry 1, Industry 2, and Industry 3 Verticals",
              "X1 - Airports",
              "X2 - Automotive",
              "X3 - Cement & Aggregate",
              "X4 - Chemicals & Plastics",
              "X5 - Entertainment",
              "X6 - Fibers & Textiles",
              "X7 - Food & Beverage",
              "X8 - Glass",
              "X9 - Household & P. Care",
              "X10 - Life Sciences",
              "X11 - Marine",
              "X12 - Mass Transit",
              "X13 - Metals",
              "X14 - Mining",
              "X15 - Oil & Gas",
              "X16 - Other",
              "X17 - Power & Energy",
              "X18 - Printing & Publishin",
              "X19 - Pulp & Paper",
              "X20 - Semiconductor & Elec",
              "X21 - Tire & Rubber",
              "X22 - Water / Wastewater",
              "X23 - Rockwell Distributor"
            ],
            "sourceColumn": "Multi-Industry 2 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Industry2 Text",
            "dataType": "string",
            "sourceColumn": "Industry2 Text",
            "encodingHint": "hash"
          },
          {
            "name": "Multi-Industry 3 Description",
            "dataType": "string",
            "description": [
              "description associated with the third additional classification defined by Rockwell Automation, which groups the customer into to a specifc industry of interest, stored as a nvarchar",
              "",
              "If the Ship To Business Partner Industry Vertical Description is \"\"Multi Industry\"\", then at least one and up to three additional industry vertical classifications are required.",
              "",
              "Industry 1, Industry 2, and Industry 3 Verticals",
              "X1 - Airports",
              "X2 - Automotive",
              "X3 - Cement & Aggregate",
              "X4 - Chemicals & Plastics",
              "X5 - Entertainment",
              "X6 - Fibers & Textiles",
              "X7 - Food & Beverage",
              "X8 - Glass",
              "X9 - Household & P. Care",
              "X10 - Life Sciences",
              "X11 - Marine",
              "X12 - Mass Transit",
              "X13 - Metals",
              "X14 - Mining",
              "X15 - Oil & Gas",
              "X16 - Other",
              "X17 - Power & Energy",
              "X18 - Printing & Publishin",
              "X19 - Pulp & Paper",
              "X20 - Semiconductor & Elec",
              "X21 - Tire & Rubber",
              "X22 - Water / Wastewater",
              "X23 - Rockwell Distributor"
            ],
            "sourceColumn": "Multi-Industry 3 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Industry3 Text",
            "dataType": "string",
            "sourceColumn": "Industry3 Text",
            "encodingHint": "hash"
          },
          {
            "name": "Latitude",
            "dataType": "double",
            "sourceColumn": "Latitude",
            "encodingHint": "hash"
          },
          {
            "name": "Longitude",
            "dataType": "double",
            "sourceColumn": "Longitude",
            "encodingHint": "hash"
          },
          {
            "name": "Prim Mkt",
            "dataType": "string",
            "sourceColumn": "Prim Mkt",
            "encodingHint": "hash"
          },
          {
            "name": "Prim Mkt Text",
            "dataType": "string",
            "sourceColumn": "Prim Mkt Text",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner RAAMP Code",
            "dataType": "string",
            "description": "code for the RAAMP services that the customer subscribes to (such as RO for RAAMP Only or RS for RAAMP / storeroom management), stored as a string",
            "sourceColumn": "Business Partner RAAMP Code",
            "encodingHint": "hash"
          },
          {
            "name": "Reg Ttry",
            "dataType": "string",
            "sourceColumn": "Reg Ttry",
            "encodingHint": "hash"
          },
          {
            "name": "Reg Ttry Text",
            "dataType": "string",
            "sourceColumn": "Reg Ttry Text",
            "encodingHint": "hash"
          },
          {
            "name": "Region",
            "dataType": "string",
            "description": "name of the state, province, or county (such as Wisconsin for WI or Paris for 75) associated with the address for the given Sold To Business Partner in SAP, stored as a string",
            "sourceColumn": "Region",
            "encodingHint": "hash"
          },
          {
            "name": "Sale Branch",
            "dataType": "string",
            "sourceColumn": "Sale Branch",
            "encodingHint": "hash"
          },
          {
            "name": "Sales District Code",
            "dataType": "string",
            "description": "code in SAP for the Rockwell Automation district sales area (such as ASE for Asia South East, BOS for Boston, and SEA for Seattle), comprised of multiple sales offices, responsible for providing support to the sold-to customer, stored as a three-letter string",
            "sourceColumn": "Sales District Code",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Office Code",
            "dataType": "string",
            "description": "code in SAP for the Rockwell Automation sales office (such as DET for Detroit or MKE for Milwaukee) responsible for providing support to the sold-to customer, stored as a three-letter string",
            "sourceColumn": "Sales Office Code",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Region",
            "dataType": "string",
            "description": [
              "the top level in the Rockwell Automation sales office hierarchy, which represents the four main geographical areas of the business world (see below), stored as a nvarchar",
              "",
              "AP = Asia/Pacific",
              "EMEA = Europe, Middle East, and Africa",
              "LA = Latin America",
              "NA = North America",
              "",
              "The sales office hierarchy has the structure:",
              "1) Region",
              "2) Sub-region",
              "3) District",
              "4) Sales Office",
              "5) Branch"
            ],
            "sourceColumn": "Sales Region",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Sub-Region",
            "dataType": "string",
            "description": [
              "code in SAP for the second level in the Rockwell Automation sales office hierarchy, which represents subdivisions of the four regions (see examples below), stored as a nvarchar",
              "",
              "AND = Andean region",
              "BRA = Brazil",
              "CAN = Canada",
              "CAR = Carribean region",
              "CEN = Central United States",
              "EAS = Eastern United States",
              "EER = Eastern Europe region",
              "GCR = Greater China region",
              "INR = India region",
              "KR = Korea",
              "MEX = Mexico",
              "MER = Middle East region",
              "NER = Northern Europe region",
              "SOU = Southern United States",
              "SPR = South Pacific region",
              "SEA = Southeast Asia",
              "SCO = Southern Cone of South America (Argentina, Chile, Brazil, Paraguay, and Uruguay)",
              "SER = Southern Europe region",
              "WES = Western United States",
              "",
              "The sales office hierarchy has the structure:",
              "1) Region",
              "2) Sub-region",
              "3) District",
              "4) Sales Office",
              "5) Branch"
            ],
            "sourceColumn": "Sales Sub-Region",
            "encodingHint": "hash"
          },
          {
            "name": "Sbureg Ttry",
            "dataType": "string",
            "sourceColumn": "Sbureg Ttry",
            "encodingHint": "hash"
          },
          {
            "name": "Sbureg Ttry Text",
            "dataType": "string",
            "sourceColumn": "Sbureg Ttry Text",
            "encodingHint": "hash"
          },
          {
            "name": "SIC Code",
            "dataType": "string",
            "description": "Standard Industry Classification (SIC) four-digit code from Dun & Bradstreet (D&B), separated by a tilde (such as \"3675 ~ Electronic Capacitors\" or \"3089 ~ Plastics Products, Not Elsewhere Classified\"), which classifies the customer into to an industry, stored as a nvarchar",
            "sourceColumn": "SIC Code",
            "encodingHint": "hash"
          },
          {
            "name": "SIC Code Text",
            "dataType": "string",
            "sourceColumn": "SIC Code Text",
            "encodingHint": "hash"
          },
          {
            "name": "SS Customer Type Code",
            "dataType": "string",
            "description": [
              "code for a category of business partners that Rockwell Automation transacts with or does business with (see examples below), stored as a two-digit string",
              "",
              "01 = A&E, EPC, or Consultant",
              "02 = Contractor",
              "03 = Educational Institution",
              "04 = End User (direct customer of RA)",
              "05 = Unauth Reseller",
              "06 = OEM",
              "07 = Panel Builder",
              "08 = RA Authorized Distributor",
              "09 = System Integrator",
              "10 = Rockwell Location",
              "11 = Authorized Reseller",
              "",
              ""
            ],
            "sourceColumn": "SS Customer Type Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Customer Type Description",
            "dataType": "string",
            "sourceColumn": "SS Customer Type Description",
            "encodingHint": "hash"
          },
          {
            "name": "Ss Indus Clfsn",
            "dataType": "string",
            "sourceColumn": "Ss Indus Clfsn",
            "encodingHint": "hash"
          },
          {
            "name": "Ss Indus Desc",
            "dataType": "string",
            "sourceColumn": "Ss Indus Desc",
            "encodingHint": "hash"
          },
          {
            "name": "SS SAP Sales Territory Code",
            "dataType": "string",
            "sourceColumn": "SS SAP Sales Territory Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales APR Code",
            "dataType": "string",
            "sourceColumn": "SS Sales APR Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales APR Description",
            "dataType": "string",
            "sourceColumn": "SS Sales APR Description",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Country Description",
            "dataType": "string",
            "sourceColumn": "SS Sales Country Description",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Country Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales District Code",
            "dataType": "string",
            "sourceColumn": "SS Sales District Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales District Description",
            "dataType": "string",
            "sourceColumn": "SS Sales District Description",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Office Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Office Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Organization Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Organization Code",
            "encodingHint": "hash"
          },
          {
            "name": "Ss Sales Region",
            "dataType": "string",
            "sourceColumn": "Ss Sales Region",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Region Description",
            "dataType": "string",
            "sourceColumn": "SS Sales Region Description",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Territory Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Territory Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Territory Description",
            "dataType": "string",
            "sourceColumn": "SS Sales Territory Description",
            "encodingHint": "hash"
          },
          {
            "name": "Region Name",
            "dataType": "string",
            "description": "name of the state, province, or county (such as Wisconsin for WI or Paris for 75) associated with the address for the given Sold To Business Partner in SAP, stored as a string",
            "sourceColumn": "Region Name",
            "encodingHint": "hash"
          },
          {
            "name": "Tlkit Parentid",
            "dataType": "string",
            "sourceColumn": "Tlkit Parentid",
            "encodingHint": "hash"
          },
          {
            "name": "Tlkit Prgnm",
            "dataType": "string",
            "sourceColumn": "Tlkit Prgnm",
            "encodingHint": "hash"
          },
          {
            "name": "Tlkit Prgnm Text",
            "dataType": "string",
            "sourceColumn": "Tlkit Prgnm Text",
            "encodingHint": "hash"
          },
          {
            "name": "Vas Code",
            "dataType": "string",
            "sourceColumn": "Vas Code",
            "encodingHint": "hash"
          },
          {
            "name": "Strategic Account",
            "dataType": "string",
            "sourceColumn": "Strategic Account"
          },
          {
            "name": "Strategic Account Description",
            "dataType": "string",
            "sourceColumn": "Strategic Account Description"
          },
          {
            "name": "Attribute 4",
            "dataType": "string",
            "sourceColumn": "Attribute 4"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_BUSINESS_PARTNER_SoldTo_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_BUSINESS_PARTNER_SoldTo_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_BUSINESS_PARTNER_SoldTo_BusNm,{\"BUSI_PRTNR_KEY\", \"Business Partner\", \"Account Group Code\", \"APR\", \"Attribute 4\", \"Strategic Account Level\", \"BAS Tax Jurisdiction Code\", \"BP Address Line0\", \"Business Address Short\", \"Business Address Short S\", \"BP Business Unit Group\", \"BP Category\", \"BP IND SYS\", \"BP Name First\", \"BP Name Last\", \"BP Relationship Status\", \"Bpartner Ltext\", \"Bpartner Mtext\", \"Bpartner Stext\", \"Branch Teretory\", \"Branch Teretory Text\", \"Country Code\", \"BP Country Name\", \"Country Name\", \"Customer Class\", \"Customer Type\", \"Customer Type Description\", \"Del Blk\", \"Dist Ttry\", \"Dist Ttry Text\", \"Geo Loc Precisid\", \"Glbl Agmt Ind\", \"Glbl Agmt Ind Text\", \"Global Ultimate Duns\", \"Global Ultimate Duns Text\", \"Hq Parent Duns\", \"Hq Parent Duns Text\", \"Ind Sector\", \"Ind Vertical\", \"Indus Vertcl Desc\", \"Multi-Industry 1 Description\", \"Industry1 Text\", \"Multi-Industry 2 Description\", \"Industry2 Text\", \"Multi-Industry 3 Description\", \"Industry3 Text\", \"Latitude\", \"Longitude\", \"Prim Mkt\", \"Prim Mkt Text\", \"Business Partner RAAMP Code\", \"Reg Ttry\", \"Reg Ttry Text\", \"Region\", \"Sale Branch\", \"Sales District Code\", \"Sales Office Code\", \"Sales Region\", \"Sales Sub-Region\", \"Sbureg Ttry\", \"Sbureg Ttry Text\", \"SIC Code\", \"SIC Code Text\", \"SS Customer Type Code\", \"SS Customer Type Description\", \"Ss Indus Clfsn\", \"Ss Indus Desc\", \"SS SAP Sales Territory Code\", \"SS Sales APR Code\", \"SS Sales APR Description\", \"SS Sales Country Description\", \"SS Sales Country Code\", \"SS Sales District Code\", \"SS Sales District Description\", \"SS Sales Office Code\", \"SS Sales Organization Code\", \"Ss Sales Region\", \"SS Sales Region Description\", \"SS Sales Territory Code\", \"SS Sales Territory Description\", \"Strategic Account\", \"Strategic Account Description\", \"Region Name\", \"Tlkit Parentid\", \"Tlkit Prgnm\", \"Tlkit Prgnm Text\", \"Vas Code\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_BUSINESS_PARTNER_END_CUSTOMER",
        "columns": [
          {
            "name": "BUSI_PRTNR_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BUSI_PRTNR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner",
            "dataType": "string",
            "sourceColumn": "Business Partner",
            "encodingHint": "hash"
          },
          {
            "name": "Account Group Code",
            "dataType": "string",
            "description": [
              "code in SAP for the type of relationship a business partner has with Rockwell Automation (see examples below), stored as a nvarchar",
              "",
              "0001 = Sold-to party",
              "0002 = Goods recipient",
              "0004 = Bill-to party",
              "0005 = Prospective Customer",
              "Z005 = RA Distributor",
              "Z006 = RA Inter/Intra Company",
              "Z099 = POS",
              "ZRAP = RA US Partner Plant",
              "ZRET = RA Return Vendor"
            ],
            "sourceColumn": "Account Group Code",
            "encodingHint": "hash"
          },
          {
            "name": "APR",
            "dataType": "string",
            "sourceColumn": "APR",
            "encodingHint": "hash"
          },
          {
            "name": "Strategic Account Level",
            "dataType": "string",
            "sourceColumn": "Strategic Account Level",
            "encodingHint": "hash"
          },
          {
            "name": "BAS Tax Jurisdiction Code",
            "dataType": "string",
            "sourceColumn": "BAS Tax Jurisdiction Code",
            "encodingHint": "hash"
          },
          {
            "name": "BP Address Line0",
            "dataType": "string",
            "sourceColumn": "BP Address Line0",
            "encodingHint": "hash"
          },
          {
            "name": "Business Address Short",
            "dataType": "string",
            "sourceColumn": "Business Address Short",
            "encodingHint": "hash"
          },
          {
            "name": "Business Address Short S",
            "dataType": "string",
            "sourceColumn": "Business Address Short S",
            "encodingHint": "hash"
          },
          {
            "name": "BP Business Unit Group",
            "dataType": "string",
            "sourceColumn": "BP Business Unit Group",
            "encodingHint": "hash"
          },
          {
            "name": "BP Category",
            "dataType": "string",
            "sourceColumn": "BP Category",
            "encodingHint": "hash"
          },
          {
            "name": "BP IND SYS",
            "dataType": "string",
            "sourceColumn": "BP IND SYS",
            "encodingHint": "hash"
          },
          {
            "name": "BP Name First",
            "dataType": "string",
            "sourceColumn": "BP Name First",
            "encodingHint": "hash"
          },
          {
            "name": "BP Name Last",
            "dataType": "string",
            "sourceColumn": "BP Name Last",
            "encodingHint": "hash"
          },
          {
            "name": "BP Relationship Status",
            "dataType": "int64",
            "sourceColumn": "BP Relationship Status",
            "encodingHint": "hash"
          },
          {
            "name": "Bpartner Ltext",
            "dataType": "string",
            "sourceColumn": "Bpartner Ltext",
            "encodingHint": "hash"
          },
          {
            "name": "Bpartner Mtext",
            "dataType": "string",
            "sourceColumn": "Bpartner Mtext",
            "encodingHint": "hash"
          },
          {
            "name": "Bpartner Stext",
            "dataType": "string",
            "sourceColumn": "Bpartner Stext",
            "encodingHint": "hash"
          },
          {
            "name": "Branch Teretory",
            "dataType": "string",
            "sourceColumn": "Branch Teretory",
            "encodingHint": "hash"
          },
          {
            "name": "Branch Teretory Text",
            "dataType": "string",
            "sourceColumn": "Branch Teretory Text",
            "encodingHint": "hash"
          },
          {
            "name": "Country Code",
            "dataType": "string",
            "sourceColumn": "Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "BP Country Name",
            "dataType": "string",
            "sourceColumn": "BP Country Name",
            "encodingHint": "hash"
          },
          {
            "name": "Country Name",
            "dataType": "string",
            "description": "name associated with the code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a two-character string",
            "sourceColumn": "Country Name",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Class",
            "dataType": "string",
            "sourceColumn": "Customer Class",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Type",
            "dataType": "string",
            "sourceColumn": "Customer Type",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Type Description",
            "dataType": "string",
            "sourceColumn": "Customer Type Description",
            "encodingHint": "hash"
          },
          {
            "name": "Del Blk",
            "dataType": "string",
            "sourceColumn": "Del Blk",
            "encodingHint": "hash"
          },
          {
            "name": "Dist Ttry",
            "dataType": "string",
            "sourceColumn": "Dist Ttry",
            "encodingHint": "hash"
          },
          {
            "name": "Dist Ttry Text",
            "dataType": "string",
            "sourceColumn": "Dist Ttry Text",
            "encodingHint": "hash"
          },
          {
            "name": "Geo Loc Precisid",
            "dataType": "string",
            "sourceColumn": "Geo Loc Precisid",
            "encodingHint": "hash"
          },
          {
            "name": "Glbl Agmt Ind",
            "dataType": "string",
            "sourceColumn": "Glbl Agmt Ind",
            "encodingHint": "hash"
          },
          {
            "name": "Glbl Agmt Ind Text",
            "dataType": "string",
            "sourceColumn": "Glbl Agmt Ind Text",
            "encodingHint": "hash"
          },
          {
            "name": "Global Ultimate Duns",
            "dataType": "string",
            "sourceColumn": "Global Ultimate Duns",
            "encodingHint": "hash"
          },
          {
            "name": "Global Ultimate Duns Text",
            "dataType": "string",
            "sourceColumn": "Global Ultimate Duns Text",
            "encodingHint": "hash"
          },
          {
            "name": "Hq Parent Duns",
            "dataType": "string",
            "sourceColumn": "Hq Parent Duns",
            "encodingHint": "hash"
          },
          {
            "name": "Hq Parent Duns Text",
            "dataType": "string",
            "sourceColumn": "Hq Parent Duns Text",
            "encodingHint": "hash"
          },
          {
            "name": "Ind Sector",
            "dataType": "string",
            "sourceColumn": "Ind Sector",
            "encodingHint": "hash"
          },
          {
            "name": "Ind Vertical",
            "dataType": "string",
            "sourceColumn": "Ind Vertical",
            "encodingHint": "hash"
          },
          {
            "name": "Indus Vertcl Desc",
            "dataType": "string",
            "sourceColumn": "Indus Vertcl Desc",
            "encodingHint": "hash"
          },
          {
            "name": "Multi-Industry 1 Description",
            "dataType": "string",
            "description": [
              "description associated with the first additional classification defined by Rockwell Automation, which groups the customer into to a specifc industry of interest, stored as a nvarchar",
              "",
              "If the Ship To Business Partner Industry Vertical Description is \"\"Multi Industry\"\", then at least one and up to three additional industry vertical classifications are required.",
              "",
              "Industry 1, Industry 2, and Industry 3 Verticals",
              "X1 - Airports",
              "X2 - Automotive",
              "X3 - Cement & Aggregate",
              "X4 - Chemicals & Plastics",
              "X5 - Entertainment",
              "X6 - Fibers & Textiles",
              "X7 - Food & Beverage",
              "X8 - Glass",
              "X9 - Household & P. Care",
              "X10 - Life Sciences",
              "X11 - Marine",
              "X12 - Mass Transit",
              "X13 - Metals",
              "X14 - Mining",
              "X15 - Oil & Gas",
              "X16 - Other",
              "X17 - Power & Energy",
              "X18 - Printing & Publishin",
              "X19 - Pulp & Paper",
              "X20 - Semiconductor & Elec",
              "X21 - Tire & Rubber",
              "X22 - Water / Wastewater",
              "X23 - Rockwell Distributor"
            ],
            "sourceColumn": "Multi-Industry 1 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Industry1 Text",
            "dataType": "string",
            "sourceColumn": "Industry1 Text",
            "encodingHint": "hash"
          },
          {
            "name": "Multi-Industry 2 Description",
            "dataType": "string",
            "description": [
              "description associated with the second additional classification defined by Rockwell Automation, which groups the customer into to a specifc industry of interest, stored as a nvarchar",
              "",
              "If the Ship To Business Partner Industry Vertical Description is \"\"Multi Industry\"\", then at least one and up to three additional industry vertical classifications are required.",
              "",
              "Industry 1, Industry 2, and Industry 3 Verticals",
              "X1 - Airports",
              "X2 - Automotive",
              "X3 - Cement & Aggregate",
              "X4 - Chemicals & Plastics",
              "X5 - Entertainment",
              "X6 - Fibers & Textiles",
              "X7 - Food & Beverage",
              "X8 - Glass",
              "X9 - Household & P. Care",
              "X10 - Life Sciences",
              "X11 - Marine",
              "X12 - Mass Transit",
              "X13 - Metals",
              "X14 - Mining",
              "X15 - Oil & Gas",
              "X16 - Other",
              "X17 - Power & Energy",
              "X18 - Printing & Publishin",
              "X19 - Pulp & Paper",
              "X20 - Semiconductor & Elec",
              "X21 - Tire & Rubber",
              "X22 - Water / Wastewater",
              "X23 - Rockwell Distributor"
            ],
            "sourceColumn": "Multi-Industry 2 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Industry2 Text",
            "dataType": "string",
            "sourceColumn": "Industry2 Text",
            "encodingHint": "hash"
          },
          {
            "name": "Multi-Industry 3 Description",
            "dataType": "string",
            "description": [
              "description associated with the third additional classification defined by Rockwell Automation, which groups the customer into to a specifc industry of interest, stored as a nvarchar",
              "",
              "If the Ship To Business Partner Industry Vertical Description is \"\"Multi Industry\"\", then at least one and up to three additional industry vertical classifications are required.",
              "",
              "Industry 1, Industry 2, and Industry 3 Verticals",
              "X1 - Airports",
              "X2 - Automotive",
              "X3 - Cement & Aggregate",
              "X4 - Chemicals & Plastics",
              "X5 - Entertainment",
              "X6 - Fibers & Textiles",
              "X7 - Food & Beverage",
              "X8 - Glass",
              "X9 - Household & P. Care",
              "X10 - Life Sciences",
              "X11 - Marine",
              "X12 - Mass Transit",
              "X13 - Metals",
              "X14 - Mining",
              "X15 - Oil & Gas",
              "X16 - Other",
              "X17 - Power & Energy",
              "X18 - Printing & Publishin",
              "X19 - Pulp & Paper",
              "X20 - Semiconductor & Elec",
              "X21 - Tire & Rubber",
              "X22 - Water / Wastewater",
              "X23 - Rockwell Distributor"
            ],
            "sourceColumn": "Multi-Industry 3 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Industry3 Text",
            "dataType": "string",
            "sourceColumn": "Industry3 Text",
            "encodingHint": "hash"
          },
          {
            "name": "Latitude",
            "dataType": "double",
            "sourceColumn": "Latitude",
            "encodingHint": "hash"
          },
          {
            "name": "Longitude",
            "dataType": "double",
            "sourceColumn": "Longitude",
            "encodingHint": "hash"
          },
          {
            "name": "Prim Mkt",
            "dataType": "string",
            "sourceColumn": "Prim Mkt",
            "encodingHint": "hash"
          },
          {
            "name": "Prim Mkt Text",
            "dataType": "string",
            "sourceColumn": "Prim Mkt Text",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner RAAMP Code",
            "dataType": "string",
            "description": "code for the RAAMP services that the customer subscribes to (such as RO for RAAMP Only or RS for RAAMP / storeroom management), stored as a string",
            "sourceColumn": "Business Partner RAAMP Code",
            "encodingHint": "hash"
          },
          {
            "name": "Reg Ttry",
            "dataType": "string",
            "sourceColumn": "Reg Ttry",
            "encodingHint": "hash"
          },
          {
            "name": "Reg Ttry Text",
            "dataType": "string",
            "sourceColumn": "Reg Ttry Text",
            "encodingHint": "hash"
          },
          {
            "name": "Region",
            "dataType": "string",
            "description": "name of the state, province, or county (such as Wisconsin for WI or Paris for 75) associated with the address for the given Sold To Business Partner in SAP, stored as a string",
            "sourceColumn": "Region",
            "encodingHint": "hash"
          },
          {
            "name": "Sale Branch",
            "dataType": "string",
            "sourceColumn": "Sale Branch",
            "encodingHint": "hash"
          },
          {
            "name": "Sales District Code",
            "dataType": "string",
            "description": "code in SAP for the Rockwell Automation district sales area (such as ASE for Asia South East, BOS for Boston, and SEA for Seattle), comprised of multiple sales offices, responsible for providing support to the sold-to customer, stored as a three-letter string",
            "sourceColumn": "Sales District Code"
          },
          {
            "name": "Sales Office Code",
            "dataType": "string",
            "description": "code in SAP for the Rockwell Automation sales office (such as DET for Detroit or MKE for Milwaukee) responsible for providing support to the sold-to customer, stored as a three-letter string",
            "sourceColumn": "Sales Office Code",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Region",
            "dataType": "string",
            "description": [
              "the top level in the Rockwell Automation sales office hierarchy, which represents the four main geographical areas of the business world (see below), stored as a nvarchar",
              "",
              "AP = Asia/Pacific",
              "EMEA = Europe, Middle East, and Africa",
              "LA = Latin America",
              "NA = North America",
              "",
              "The sales office hierarchy has the structure:",
              "1) Region",
              "2) Sub-region",
              "3) District",
              "4) Sales Office",
              "5) Branch"
            ],
            "sourceColumn": "Sales Region",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Sub-Region",
            "dataType": "string",
            "description": [
              "code in SAP for the second level in the Rockwell Automation sales office hierarchy, which represents subdivisions of the four regions (see examples below), stored as a nvarchar",
              "",
              "AND = Andean region",
              "BRA = Brazil",
              "CAN = Canada",
              "CAR = Carribean region",
              "CEN = Central United States",
              "EAS = Eastern United States",
              "EER = Eastern Europe region",
              "GCR = Greater China region",
              "INR = India region",
              "KR = Korea",
              "MEX = Mexico",
              "MER = Middle East region",
              "NER = Northern Europe region",
              "SOU = Southern United States",
              "SPR = South Pacific region",
              "SEA = Southeast Asia",
              "SCO = Southern Cone of South America (Argentina, Chile, Brazil, Paraguay, and Uruguay)",
              "SER = Southern Europe region",
              "WES = Western United States",
              "",
              "The sales office hierarchy has the structure:",
              "1) Region",
              "2) Sub-region",
              "3) District",
              "4) Sales Office",
              "5) Branch"
            ],
            "sourceColumn": "Sales Sub-Region",
            "encodingHint": "hash"
          },
          {
            "name": "Sbureg Ttry",
            "dataType": "string",
            "sourceColumn": "Sbureg Ttry",
            "encodingHint": "hash"
          },
          {
            "name": "Sbureg Ttry Text",
            "dataType": "string",
            "sourceColumn": "Sbureg Ttry Text",
            "encodingHint": "hash"
          },
          {
            "name": "SIC Code",
            "dataType": "string",
            "description": "Standard Industry Classification (SIC) four-digit code from Dun & Bradstreet (D&B), separated by a tilde (such as \"3675 ~ Electronic Capacitors\" or \"3089 ~ Plastics Products, Not Elsewhere Classified\"), which classifies the customer into to an industry, stored as a nvarchar",
            "sourceColumn": "SIC Code",
            "encodingHint": "hash"
          },
          {
            "name": "SIC Code Text",
            "dataType": "string",
            "sourceColumn": "SIC Code Text",
            "encodingHint": "hash"
          },
          {
            "name": "SS Customer Type Code",
            "dataType": "string",
            "description": [
              "code for a category of business partners that Rockwell Automation transacts with or does business with (see examples below), stored as a two-digit string",
              "",
              "01 = A&E, EPC, or Consultant",
              "02 = Contractor",
              "03 = Educational Institution",
              "04 = End User (direct customer of RA)",
              "05 = Unauth Reseller",
              "06 = OEM",
              "07 = Panel Builder",
              "08 = RA Authorized Distributor",
              "09 = System Integrator",
              "10 = Rockwell Location",
              "11 = Authorized Reseller",
              "",
              ""
            ],
            "sourceColumn": "SS Customer Type Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Customer Type Description",
            "dataType": "string",
            "sourceColumn": "SS Customer Type Description",
            "encodingHint": "hash"
          },
          {
            "name": "Ss Indus Clfsn",
            "dataType": "string",
            "sourceColumn": "Ss Indus Clfsn",
            "encodingHint": "hash"
          },
          {
            "name": "Ss Indus Desc",
            "dataType": "string",
            "sourceColumn": "Ss Indus Desc",
            "encodingHint": "hash"
          },
          {
            "name": "SS SAP Sales Territory Code",
            "dataType": "string",
            "sourceColumn": "SS SAP Sales Territory Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales APR Code",
            "dataType": "string",
            "sourceColumn": "SS Sales APR Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales APR Description",
            "dataType": "string",
            "sourceColumn": "SS Sales APR Description",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Country Description",
            "dataType": "string",
            "sourceColumn": "SS Sales Country Description",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Country Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales District Code",
            "dataType": "string",
            "sourceColumn": "SS Sales District Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales District Description",
            "dataType": "string",
            "sourceColumn": "SS Sales District Description",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Office Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Office Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Organization Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Organization Code",
            "encodingHint": "hash"
          },
          {
            "name": "Ss Sales Region",
            "dataType": "string",
            "sourceColumn": "Ss Sales Region",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Region Description",
            "dataType": "string",
            "sourceColumn": "SS Sales Region Description",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Territory Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Territory Code",
            "encodingHint": "hash"
          },
          {
            "name": "SS Sales Territory Description",
            "dataType": "string",
            "sourceColumn": "SS Sales Territory Description",
            "encodingHint": "hash"
          },
          {
            "name": "Region Name",
            "dataType": "string",
            "description": "name of the state, province, or county (such as Wisconsin for WI or Paris for 75) associated with the address for the given Sold To Business Partner in SAP, stored as a string",
            "sourceColumn": "Region Name",
            "encodingHint": "hash"
          },
          {
            "name": "Tlkit Parentid",
            "dataType": "string",
            "sourceColumn": "Tlkit Parentid",
            "encodingHint": "hash"
          },
          {
            "name": "Tlkit Prgnm",
            "dataType": "string",
            "sourceColumn": "Tlkit Prgnm",
            "encodingHint": "hash"
          },
          {
            "name": "Tlkit Prgnm Text",
            "dataType": "string",
            "sourceColumn": "Tlkit Prgnm Text",
            "encodingHint": "hash"
          },
          {
            "name": "Vas Code",
            "dataType": "string",
            "sourceColumn": "Vas Code",
            "encodingHint": "hash"
          },
          {
            "name": "Strategic Account",
            "dataType": "string",
            "sourceColumn": "Strategic Account"
          },
          {
            "name": "Strategic Account Description",
            "dataType": "string",
            "sourceColumn": "Strategic Account Description"
          },
          {
            "name": " Attribute 4",
            "dataType": "string",
            "sourceColumn": " Attribute 4",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_BUSINESS_PARTNER_EndCust_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_BUSINESS_PARTNER_EndCust_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_BUSINESS_PARTNER_EndCust_BusNm,{\"BUSI_PRTNR_KEY\", \"Business Partner\", \"Account Group Code\", \"APR\", \" Attribute 4\", \"Strategic Account Level\", \"BAS Tax Jurisdiction Code\", \"BP Address Line0\", \"Business Address Short\", \"Business Address Short S\", \"BP Business Unit Group\", \"BP Category\", \"BP IND SYS\", \"BP Name First\", \"BP Name Last\", \"BP Relationship Status\", \"Bpartner Ltext\", \"Bpartner Mtext\", \"Bpartner Stext\", \"Branch Teretory\", \"Branch Teretory Text\", \"Country Code\", \"BP Country Name\", \"Country Name\", \"Customer Class\", \"Customer Type\", \"Customer Type Description\", \"Del Blk\", \"Dist Ttry\", \"Dist Ttry Text\", \"Geo Loc Precisid\", \"Glbl Agmt Ind\", \"Glbl Agmt Ind Text\", \"Global Ultimate Duns\", \"Global Ultimate Duns Text\", \"Hq Parent Duns\", \"Hq Parent Duns Text\", \"Ind Sector\", \"Ind Vertical\", \"Indus Vertcl Desc\", \"Multi-Industry 1 Description\", \"Industry1 Text\", \"Multi-Industry 2 Description\", \"Industry2 Text\", \"Multi-Industry 3 Description\", \"Industry3 Text\", \"Latitude\", \"Longitude\", \"Prim Mkt\", \"Prim Mkt Text\", \"Business Partner RAAMP Code\", \"Reg Ttry\", \"Reg Ttry Text\", \"Region\", \"Sale Branch\", \"Sales District Code\", \"Sales Office Code\", \"Sales Region\", \"Sales Sub-Region\", \"Sbureg Ttry\", \"Sbureg Ttry Text\", \"SIC Code\", \"SIC Code Text\", \"SS Customer Type Code\", \"SS Customer Type Description\", \"Ss Indus Clfsn\", \"Ss Indus Desc\", \"SS SAP Sales Territory Code\", \"SS Sales APR Code\", \"SS Sales APR Description\", \"SS Sales Country Description\", \"SS Sales Country Code\", \"SS Sales District Code\", \"SS Sales District Description\", \"SS Sales Office Code\", \"SS Sales Organization Code\", \"Ss Sales Region\", \"SS Sales Region Description\", \"SS Sales Territory Code\", \"SS Sales Territory Description\", \"Strategic Account\", \"Strategic Account Description\", \"Region Name\", \"Tlkit Parentid\", \"Tlkit Prgnm\", \"Tlkit Prgnm Text\", \"Vas Code\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Currency Conversion Manual",
        "calculationGroup": {
          "precedence": 2,
          "calculationItems": [
            {
              "name": "M Rate Conversion",
              "expression": [
                "VAR sumFact = SUMMARIZE(FACT_COPA,FACT_COPA[CRNCY_KEY],FACT_COPA[POSTNG_DATE_INT_KEY],\"X\",SELECTEDMEASURE())",
                "RETURN",
                "IF (HASONEVALUE(DIM_CRNCY[Currency Code]),",
                "    CALCULATE(",
                "        SUMX(",
                "            sumFact,",
                "            [X]",
                "            * MINX(",
                "                FILTER(",
                "                    DIM_CRNCY_CVRSN,",
                "\t\t\t\t\tDIM_CRNCY_CVRSN[RATE_EFF_FROM_DTE_INT_KEY] <= FACT_COPA[POSTNG_DATE_INT_KEY]",
                "                    &&  DIM_CRNCY_CVRSN[RATE_EFF_TO_DTE_INT_KEY] >= FACT_COPA[POSTNG_DATE_INT_KEY]",
                "                    && FACT_COPA[CRNCY_KEY]=DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "\t\t\t\t\t&& DIM_CRNCY_CVRSN[Rate Type] = \"M\"",
                "                ),",
                "                DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "            )",
                "        ),",
                "\t\tALL(DIM_CRNCY_CVRSN[Rate Effective To Date])",
                "    ),",
                "\tSELECTEDMEASURE()",
                ")"
              ]
            },
            {
              "name": "P Rate Conversion",
              "expression": [
                "VAR myFACT = SUMMARIZE(FACT_COPA,FACT_COPA[CRNCY_KEY],FACT_COPA[POSTNG_DATE_INT_KEY],\"X\",SELECTEDMEASURE())",
                "VAR myDate = MAX(DIM_CRNCY_CVRSN[Rate Effective To Date])",
                "",
                "RETURN ",
                "IF (HASONEVALUE(DIM_CRNCY[Currency Code]),",
                "    CALCULATE(",
                "\t    SUMX(myFACT, ",
                "\t\t    [X] ",
                "\t\t    * MINX( ",
                "\t\t\t    TOPN(1,      ",
                "                    FILTER(",
                "                        DIM_CRNCY_CVRSN,",
                "                            DIM_CRNCY_CVRSN[Rate Effective From Date] <= myDate",
                "                            && FACT_COPA[CRNCY_KEY]=DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                            && DIM_CRNCY_CVRSN[Rate Type] = \"P\"",
                "                    )",
                "         \t\t    ,DIM_CRNCY_CVRSN[Rate Effective From Date]",
                "        \t    )",
                "             ,DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "            ) ",
                "           ),ALL(DIM_CRNCY_CVRSN[Rate Effective To Date])",
                "    ),",
                "\tSELECTEDMEASURE()",
                ")"
              ]
            }
          ]
        },
        "columns": [
          {
            "name": "Conversion Types Manual",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Name"
          }
        ],
        "partitions": [
          {
            "name": "CalculationGroup 1",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "Controlling Value Type",
        "description": "DIM_CONTROLLING_VALUE_TYPE",
        "columns": [
          {
            "name": "Controlling Value Type Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Controlling Value Type Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Controlling Value Type Key",
            "encodingHint": "hash"
          },
          {
            "name": "Value Type Code",
            "dataType": "string",
            "description": "code that represents the type of controlling value type (such as 20 for planned and 10 for actual), which is used for reporting, stored as a string ",
            "sourceColumn": "Value Type Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Value Type Short Description",
            "dataType": "string",
            "description": "short description associated with the code that represents the type of controlling value type (such as planned for code 20 and actual for code 10), which is used for reporting, stored as a string ",
            "sourceColumn": "Value Type Short Description",
            "encodingHint": "hash"
          },
          {
            "name": "Value Type Medium Description",
            "dataType": "string",
            "description": "medium description associated with the code that represents the type of controlling value type (such as planned for code 20 and actual for code 10), which is used for reporting, stored as a string ",
            "sourceColumn": "Value Type Medium Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CONTROLLING_VALUE_TYPE_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CONTROLLING_VALUE_TYPE_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CONTROLLING_VALUE_TYPE_BusNm,{\"Controlling Value Type Key\", \"Value Type Code\", \"Value Type Short Description\", \"Value Type Medium Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Contolling Key Figure Category Type",
        "description": "DIM_CONTROLLING_KEY_FIGURE_CATEGORY_TYPE",
        "columns": [
          {
            "name": "Controlling Key Figure Category Type Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Controlling Key Figure Category Type Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Controlling Key Figure Category Type Key",
            "encodingHint": "hash"
          },
          {
            "name": "Key Figure Category Type Code",
            "dataType": "string",
            "description": "code (such as 000200 for Credit, 000400 for Sales or 001400 for Result from RA, etc.) that identifies the type of key figure category in SAP, stored as a string",
            "sourceColumn": "Key Figure Category Type Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Key Figure Category Type Short Description",
            "dataType": "string",
            "description": "short description associated with the code (such as Credit for code 000200, Sales for code 000400 or Result from RA for code 001400, etc.) that identifies the type of key figure category in SAP, stored as a string",
            "sourceColumn": "Key Figure Category Type Short Description",
            "encodingHint": "hash"
          },
          {
            "name": "Key Figure Category Type Medium Description",
            "dataType": "string",
            "description": "medium description associated with the code (such as Credit for code 000200, Sales for code 000400 or Result from Results Analysis for code 001400, etc.) that identifies the type of key figure category in SAP, stored as a string",
            "sourceColumn": "Key Figure Category Type Medium Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CONTROLLING_KEY_FIGURE_CATEGORY_TYPE_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CONTROLLING_KEY_FIGURE_CATEGORY_TYPE_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CONTROLLING_KEY_FIGURE_CATEGORY_TYPE_BusNm,{\"Controlling Key Figure Category Type Key\", \"Key Figure Category Type Code\", \"Key Figure Category Type Short Description\", \"Key Figure Category Type Medium Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Controlling Version",
        "description": "DIM_CONTROLLING_VERSION",
        "columns": [
          {
            "name": "Controlling Version Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Controlling Version Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Controlling Version Key",
            "encodingHint": "hash"
          },
          {
            "name": "Plan Version Code",
            "dataType": "string",
            "description": "code (such as 0 for Plan/actual version, 110 for PS: Forecast Version, or P02 for Plan Version 2, etc.) that identifies the current version the given controlling value type in SAP, stored as a string",
            "sourceColumn": "Plan Version Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Plan Version Name",
            "dataType": "string",
            "description": "name associated with the code (such as Plan/actual version for code 0, PS: Forecast Version for code 110, or Plan Version 2 for code P02, etc.) that identifies the current version the given controlling value type in SAP, stored as a string",
            "sourceColumn": "Plan Version Name",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CONTROLLING_VERSION_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CONTROLLING_VERSION_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CONTROLLING_VERSION_BusNm,{\"Controlling Version Key\", \"Plan Version Code\", \"Plan Version Name\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Controlling Value Type Details",
        "description": "DIM_CONTROLLING_VALUE_TYPE_DETAILS",
        "columns": [
          {
            "name": "Controlling  Value Type Details Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Controlling Value Type Details Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Controlling  Value Type Details Key",
            "encodingHint": "hash"
          },
          {
            "name": "Value Type Code",
            "dataType": "string",
            "description": "code that represents the type of controlling value type (such as 20 for planned and 10 for actual), which is used for reporting, stored as a string ",
            "sourceColumn": "Value Type Code",
            "encodingHint": "hash"
          },
          {
            "name": "Key Figure Category Type Code",
            "dataType": "string",
            "description": "code (such as 000200 for Credit, 000400 for Sales or 001400 for Result from RA, etc.) that identifies the type of key figure category in SAP, stored as a string",
            "sourceColumn": "Key Figure Category Type Code",
            "encodingHint": "hash"
          },
          {
            "name": "Detail Value Type Code",
            "dataType": "string",
            "description": "code that identifies characteristics for a given value type and key figure category type combination (such as 01 for Primary Costs or 02 for C0-Transfer), stored as a string",
            "sourceColumn": "Detail Value Type Code",
            "displayFolder": "Key Attributes"
          },
          {
            "name": "Detail Value Type short description",
            "dataType": "string",
            "description": "short description associated with the code that identifies characteristics for a given value type and key figure category type combination (such as Primary Costs for code 01 or C0-Transfer for code 02), stored as a string",
            "sourceColumn": "Detail Value Type short description",
            "encodingHint": "hash"
          },
          {
            "name": "Detail Value Type medium description",
            "dataType": "string",
            "description": "medium description associated with the code that identifies characteristics for a given value type and key figure category type combination (such as Primary Costs for code 01 or C0-Transfer for code 02), stored as a string",
            "sourceColumn": "Detail Value Type medium description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CONTROLLING_VALUE_TYPE_DETAILS_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CONTROLLING_VALUE_TYPE_DETAILS_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CONTROLLING_VALUE_TYPE_DETAILS_BusNm,{\"Controlling  Value Type Details Key\", \"Value Type Code\", \"Key Figure Category Type Code\", \"Detail Value Type Code\", \"Detail Value Type short description\", \"Detail Value Type medium description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Controlling Value Type Statistics",
        "description": "DIM_CONTROLLING_VALUE_TYPE_STATISTICS",
        "columns": [
          {
            "name": "Controlling Value Type Statistics Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Controlling Value Type Statistics Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Controlling Value Type Statistics Key",
            "encodingHint": "hash"
          },
          {
            "name": "Value Type Code",
            "dataType": "string",
            "description": "code that represents the type of controlling value type (such as 20 for planned and 10 for actual), which is used for reporting, stored as a string ",
            "sourceColumn": "Value Type Code",
            "encodingHint": "hash"
          },
          {
            "name": "Value Type Statistical Indicator",
            "dataType": "string",
            "description": "indicator of whether the given Value Type Code is used for statistical reporting (1 If the value type is used for statistical reporting or 0 if the value type is not used for statistical reporting), stored as a string",
            "sourceColumn": "Value Type Statistical Indicator",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Value Type Statistics Code Short Description",
            "dataType": "string",
            "description": [
              "\"short description associated with the given Value Type Code and Value Type Statistics Indicator combination (see examples below), stored as a string",
              "",
              "Act. (Not Statist.) = Value Type Code 010 and Value Type Statistics Indicator 0",
              "Statistical Actual = Value Type Code 010 and Value Type Statistics Indicator 1\""
            ],
            "sourceColumn": "Value Type Statistics Code Short Description",
            "encodingHint": "hash"
          },
          {
            "name": "Value Type Statistics Code Medium Description",
            "dataType": "string",
            "description": [
              "medium description associated with the given Value Type Code and Value Type Statistics Indicator combination (see examples below), stored as a string",
              "",
              "Actual (Not Statistical) = Value Type Code 010 and Value Type Statistics Indicator 0",
              "Statistical Actual = Value Type Code 010 and Value Type Statistics Indicator 2"
            ],
            "sourceColumn": "Value Type Statistics Code Medium Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CONTROLLING_VALUE_TYPE_STATISTICS_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CONTROLLING_VALUE_TYPE_STATISTICS_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CONTROLLING_VALUE_TYPE_STATISTICS_BusNm,{\"Controlling Value Type Statistics Key\", \"Value Type Code\", \"Value Type Statistical Indicator\", \"Value Type Statistics Code Short Description\", \"Value Type Statistics Code Medium Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Controlling Valuation View",
        "description": "DIM_CONTROLLING_VALUATION_VIEW",
        "columns": [
          {
            "name": "Controlling Valuation View Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Controlling Valuation View Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Controlling Valuation View Key",
            "encodingHint": "hash"
          },
          {
            "name": "Valuation View Code",
            "dataType": "string",
            "description": [
              "\"code that identifies a distinct view on which a given business transaction can be valuated (such as 0 for Legal Valuation, 1 for Group Valuation, or 2 for Profit Center Valuation), stored a string",
              "",
              "In the context of multiple valuation and transfer prices, you can define the following views:",
              "",
              "Legal View = The business transactions between afflicated companies are valuated using external sales prices.",
              "Group View = The business transactions within the group are represented using group-wide cost rates.",
              "Profit Center View = The business transactions between profit centers are valuated using managerial or controlling rates.\""
            ],
            "sourceColumn": "Valuation View Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Valuation View Long Description",
            "dataType": "string",
            "description": [
              "\"long description associated with the code that identifies a distinct view on which a given business transaction can be valuated (such as Legal Valuation for code 0, Group Valuation for code 1, or Profit Center Valuation for code 2), stored a string",
              "",
              "In the context of multiple valuation and transfer prices, you can define the following views:",
              "",
              "Legal View = The business transactions between afflicated companies are valuated using external sales prices.",
              "Group View = The business transactions within the group are represented using group-wide cost rates.",
              "Profit Center View = The business transactions between profit centers are valuated using managerial or controlling rates.Profit Center View\""
            ],
            "sourceColumn": "Valuation View Long Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CONTROLLING_VALUATION_VIEW_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CONTROLLING_VALUATION_VIEW_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CONTROLLING_VALUATION_VIEW_BusNm,{\"Controlling Valuation View Key\", \"Valuation View Code\", \"Valuation View Long Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Cost Center",
        "description": "DIM_COST_CTR",
        "columns": [
          {
            "name": "Cost Center Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Cost Center Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Cost Center Key",
            "encodingHint": "hash"
          },
          {
            "name": "Controlling Area Code",
            "dataType": "string",
            "description": [
              "\"the second level in the Rockwell Automation internal organization hierarchy in SAP (such as RA00, the common controlling area used globally at Rockwell Automation), for which costs and revenues are collected and reported, stored as a string",
              "",
              "The internal organization hierarchy ensures consistent standard financial reporting and has the structure:",
              "1) Operating Concern",
              "2) Controlling Area",
              "3) Company Code",
              "4) Business Area",
              "5) Cost Center\""
            ],
            "isHidden": true,
            "sourceColumn": "Controlling Area Code",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Code",
            "dataType": "string",
            "description": "code in SAP (such as 20030 for FDLDET Detroit) for an organizational unit within a Business Area that represents a defined location in which costs are incurred, stored as a string",
            "sourceColumn": "Cost Center Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Effective To Date",
            "dataType": "dateTime",
            "description": "the date on which the cost center is no longer effective (which may be a past, present, or future date), stored in yyyy-MM-dd format",
            "sourceColumn": "Cost Center Effective To Date",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Effective From Date",
            "dataType": "dateTime",
            "description": "the date on which the cost center is effective (which may be a past, present, or future date), stored in yyyy-MM-dd format",
            "sourceColumn": "Cost Center Effective From Date",
            "encodingHint": "hash"
          },
          {
            "name": "Actual Primary Postings Lock Indicator",
            "dataType": "string",
            "description": [
              "indicator (such as X if locked for posting or blank if it is not) of whether a cost center is locked for posting with direct costs, stored as a string",
              "",
              "If the indicator is active, no primary costs can be posted to the cost center. You may, however, still use the cost center for evaluations such as summarization, etc."
            ],
            "sourceColumn": "Actual Primary Postings Lock Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Planned Primary Costs Lock Indicator",
            "dataType": "string",
            "description": [
              "Indicator (such as X if locked for planning with direct costs or blank if not) defining whether a cost center is locked for planning with direct costs, stored as a string",
              "",
              "If the indicator is active, you cannot plan any primary costs on the affected cost center at this time."
            ],
            "sourceColumn": "Planned Primary Costs Lock Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Company Code",
            "dataType": "string",
            "description": "code in SAP (four digits stored as text, for example, US = 1000, Canada = 2000, Germany = 4016, France = 4013, Netherlands = 4100) used to organize accounting information related to business transactions, representing the smallest organizational unit for which a complete self-contained set of accounts can be drawn up for purposes of external reporting, financial statements, and profit and loss statements, stored as a string",
            "isHidden": true,
            "sourceColumn": "Company Code",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Category Code",
            "dataType": "string",
            "description": [
              "\"classification defined by Rockwell Automation (see examples below), which groups similar cost centers, stored as a string",
              "",
              "A - RA Administration",
              "B - RA Marketing",
              "D - RA Production\""
            ],
            "sourceColumn": "Cost Center Category Code",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Currency Code",
            "dataType": "string",
            "description": [
              "\"code for the currency used for the transactions within the given cost center (such as EUR or USD) in SAP, stored as a string",
              "",
              "All cost center planning is done in local currency.\""
            ],
            "sourceColumn": "Cost Center Currency Code"
          },
          {
            "name": "Cost Sheet Description",
            "dataType": "string",
            "description": [
              "\"description that stores cost sheet information pertaining to costs associated with a product or production job, stored as a string",
              "",
              "The cost sheet combines all components of the overhead costing and determines the rules for calculating the values to be posted.\""
            ],
            "sourceColumn": "Cost Sheet Description",
            "encodingHint": "hash"
          },
          {
            "name": "Tax Jurisdiction Code",
            "dataType": "string",
            "description": [
              "\"code that identifies the tax jurisdiction associated with the given cost center, stored as a string",
              "",
              "There are four jurisdiction levels for calculation procedure TAXUSJ and six jurisdiction levels for calculation procedure TAXUSX. Each jurisdiction level will have its own jurisdiction code (such as PA0000000 for the state of Pennsylvania or PA0010100 for the city of Pittsburgh)\""
            ],
            "sourceColumn": "Tax Jurisdiction Code",
            "encodingHint": "hash"
          },
          {
            "name": "Profit Center",
            "dataType": "string",
            "description": [
              "\"code (see example below) that identifies the organizational unit used for both business unit and product line reporting, stored as a string",
              "",
              "For example:  ",
              "PB1USOP001",
              "where:",
              "PB = Push Buttons (sub-business unit)",
              "1 = North America (region)",
              "US = United States (country)",
              "OP = Operator Interface (product category)",
              "001 = NEMA Pushbutton 30mm (product line)\""
            ],
            "isHidden": true,
            "sourceColumn": "Profit Center",
            "encodingHint": "hash"
          },
          {
            "name": "Plant Code",
            "dataType": "string",
            "description": "code in SAP for the physical location (4 digits stored as text, such as 1020 for Twinsburg, 1090 for the Champaign Distribution Center, 4000 for the Central European Distribution Center, and 4080 for the EMEA main service hub) at which material is produced and stored as inventory, or goods and services are provided, stored as a string",
            "isHidden": true,
            "sourceColumn": "Plant Code",
            "encodingHint": "hash"
          },
          {
            "name": "Actual Secondary Costs Lock Indicator",
            "dataType": "string",
            "description": [
              "\"indicator (such as X if a secondary cost can be posted or blank if it cannot) of whether a secondary cost can be posted in the given cost center; which if active, it is not possible to post secondary costs to the cost center, stored as a string",
              "",
              "This indicator normally only locks the cost center for actual debits of secondary costs. However, actual credits to the cost center are a possibility as well.\""
            ],
            "sourceColumn": "Actual Secondary Costs Lock Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Actual Revenue Postings Lock Indicator",
            "dataType": "string",
            "description": [
              "\"indicator (such as X if locked for the posting of revenue or blank if not) of whether a given cost center is locked for the posting of revenue, stored as a string",
              "",
              "If the indicator is active, you cannot post revenues to the affected cost center.",
              "",
              "If the indicator is inactive, the revenues are written to the cost center as statistics only.\""
            ],
            "sourceColumn": "Actual Revenue Postings Lock Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Commitment Update Lock Indicator",
            "dataType": "string",
            "description": [
              "\"indicator (such as X if the commitment can be update or blank if not) of whether a given commitment associated with the cost center can be updated or not, stored as a string",
              "",
              "If the Commitment Update Lock Indicator is active, no commitments can be updated to the affected cost center.\""
            ],
            "sourceColumn": "Commitment Update Lock Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Planned Secondary Costs Lock Indicator",
            "dataType": "string",
            "description": [
              "\"indicator (such as X if a secondary cost can be posted or blank if not) of whether a secondary cost can be posted in the given cost center; which if active, it is not possible to post secondary costs to the cost center, stored as a string",
              "",
              "This indicator normally only locks the cost center for actual debits of secondary costs. However, actual credits to the cost center are a possibility as well.\""
            ],
            "sourceColumn": "Planned Secondary Costs Lock Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Allocation Methods Allowed Indicator",
            "dataType": "string",
            "description": [
              "\"indicator that determines what settlement options are permitted for a given cost center, stored as a string",
              "",
              "This indicator is not used presently.\""
            ],
            "sourceColumn": "Allocation Methods Allowed Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Record Consumption Quantity Indicator",
            "dataType": "string",
            "description": [
              "\"indicator (such as X if the system issues a message or blank if not) that defines whether the system issues a message if no quantity or quantity unit is specified for commitment or actual postings, stored as a string",
              "",
              "The indicator has no effect on planning and allows the consumption quantities to be planned at a later date.",
              "The indicator has no effect on quantity updates or on the identification of quantities in reports.",
              "You must set the indicator if you want to cost using an overhead that is dependent on the unit of measure posted with this cost element.",
              "The indicator is an active default setting for the combination of cost center and cost element if in the master data for the cost center and cost element, it is defined that quantities should be managed.\""
            ],
            "sourceColumn": "Record Consumption Quantity Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "CO-CCA Overhead Code",
            "dataType": "string",
            "description": "code that specifies which overhead is applied to the given reference object (such as a material), which forms a link between overhead conditions and the following: a material master record or a sales order item, stored as a string",
            "sourceColumn": "CO-CCA Overhead Code",
            "encodingHint": "hash"
          },
          {
            "name": "Country Code",
            "dataType": "string",
            "description": "code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a two-character string",
            "sourceColumn": "Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Name 1",
            "dataType": "string",
            "description": "name 1 associated with the Business Partner Identifier in SAP for the legal entity name of the company either created in the customer master or imported through EDI (such as a distributor or an end customer), which is associated with the given cost center, stored as a string",
            "sourceColumn": "Business Partner Name 1",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Name 2",
            "dataType": "string",
            "description": "name 2 associated with the Business Partner Identifier in SAP for the legal entity name of the company either created in the customer master or imported through EDI (such as a distributor or an end customer), which is associated with the given cost center, stored as a string",
            "sourceColumn": "Business Partner Name 2",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Name 3",
            "dataType": "string",
            "description": "name 3 associated with the Business Partner Identifier in SAP for the legal entity name of the company either created in the customer master or imported through EDI (such as a distributor or an end customer), which is associated with the given cost center, stored as a string",
            "sourceColumn": "Business Partner Name 3",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Name 4",
            "dataType": "string",
            "description": "name 4 associated with the Business Partner Identifier in SAP for the legal entity name of the company either created in the customer master or imported through EDI (such as a distributor or an end customer), which is associated with the given cost center, stored as a string",
            "sourceColumn": "Business Partner Name 4",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner City Name",
            "dataType": "string",
            "description": "name of the city for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "Business Partner City Name",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner District Name",
            "dataType": "string",
            "description": "name of the district for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "Business Partner District Name",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Street Address",
            "dataType": "string",
            "description": "free-form text for the address (usually a building number and street) of the location of the given Business Partner, stored as a string",
            "sourceColumn": "Business Partner Street Address",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner PO Box",
            "dataType": "string",
            "description": "number of the post office box for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "Business Partner PO Box",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Postal Code",
            "dataType": "string",
            "description": "postal code associated with the address for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "Business Partner Postal Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner PO Box Postal Code",
            "dataType": "string",
            "description": [
              "\"postal code of the post office (\"\"PO\"\") box for the given  Business Partner in SAP, stored as a string",
              "",
              "The Business Partner PO Box Postal Code is used for countries where the postal code (such as the ZIP code in the United States) that is used to send mail to the company P.O. Box is different than the one that is used to send letters to the company address.",
              "",
              "Also, some large companies have their own postal code and no post office box.\""
            ],
            "sourceColumn": "Business Partner PO Box Postal Code",
            "encodingHint": "hash"
          },
          {
            "name": "Region (State Province County) Code",
            "dataType": "string",
            "sourceColumn": "Region (State Province County) Code",
            "encodingHint": "hash"
          },
          {
            "name": "First telephone number",
            "dataType": "string",
            "description": "free-form text for the primary telephone number (such as +1 414 867 5309) of the primary contact for the Business Partner, stored as a string",
            "sourceColumn": "First telephone number",
            "encodingHint": "hash"
          },
          {
            "name": "Second telephone number",
            "dataType": "string",
            "description": "free-form text for the secondary telephone number (such as +1 414 867 5309) of the primary contact for the Business Partner, stored as a string",
            "sourceColumn": "Second telephone number",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Hierarchy Code",
            "dataType": "string",
            "description": "the Rockwell Automation hierarchy in SAP (RA for Rockwell Automation) used to organize cost centers within RA00 (the common Controlling Area used globally at Rockwell Automation), stored as a string",
            "sourceColumn": "Cost Center Hierarchy Code",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Statistical Indicator ",
            "dataType": "string",
            "description": "indicator used to classify the given Cost Center for statistical reporting (such as X for yes or blank if not), stored as a string",
            "sourceColumn": "Cost Center Statistical Indicator ",
            "encodingHint": "hash"
          },
          {
            "name": "Object number",
            "dataType": "string",
            "description": "identifier that uniquely identifies an object (order, project, cost center, etc.) within a client, which is used in tables for status administration, cost collection, etc., stored as a string",
            "sourceColumn": "Object number",
            "encodingHint": "hash"
          },
          {
            "name": "Functional Area Code",
            "dataType": "string",
            "description": [
              "\"code in SAP that represents a line item on the income statement (such as 1000 for Sales-3rd Party Sales, 2000 for Standard Cost of Sales, 2100 for Inventory Adjustment-Scrap Sales, 5000 for Field Sales, 6005 for Marketing-Commercial, and 7000 for Admin), stored as a string",
              "",
              "All general ledger accounts in SAP are assigned to a Functional Area, which is then associated with an HFM account.\""
            ],
            "isHidden": true,
            "sourceColumn": "Functional Area Code",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Name",
            "dataType": "string",
            "description": "name associated with the code in SAP (such as SSC DR Photo for code 2003 or SSC DR Planning for code 2006) for an organizational unit within a Business Area that represents a defined location in which costs are incurred, stored as a string",
            "sourceColumn": "Cost Center Name",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Description",
            "dataType": "string",
            "description": "description associated with the code in SAP for an organizational unit within a Business Area that represents a defined location in which costs are incurred, stored as a string",
            "sourceColumn": "Cost Center Description",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Short Description",
            "dataType": "string",
            "description": "short description associated with the code in SAP for an organizational unit within a Business Area that represents a defined location in which costs are incurred, stored as a string",
            "sourceColumn": "Cost Center Short Description",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Department Name",
            "dataType": "string",
            "description": [
              "name (such as Research Department, Marketing, etc.) of the department associated with the given cost center, stored as a string",
              ""
            ],
            "sourceColumn": "Cost Center Department Name",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_COST_CTR_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_COST_CTR_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_COST_CTR_BusNm,{\"Cost Center Key\", \"Controlling Area Code\", \"Cost Center Code\", \"Cost Center Effective To Date\", \"Cost Center Effective From Date\", \"Actual Primary Postings Lock Indicator\", \"Planned Primary Costs Lock Indicator\", \"Company Code\", \"Cost Center Category Code\", \"Cost Center Currency Code\", \"Cost Sheet Description\", \"Tax Jurisdiction Code\", \"Profit Center\", \"Plant Code\", \"Actual Secondary Costs Lock Indicator\", \"Actual Revenue Postings Lock Indicator\", \"Commitment Update Lock Indicator\", \"Planned Secondary Costs Lock Indicator\", \"Allocation Methods Allowed Indicator\", \"Record Consumption Quantity Indicator\", \"Cost Center Department Name\", \"CO-CCA Overhead Code\", \"Country Code\", \"Business Partner Name 1\", \"Business Partner Name 2\", \"Business Partner Name 3\", \"Business Partner Name 4\", \"Business Partner City Name\", \"Business Partner District Name\", \"Business Partner Street Address\", \"Business Partner PO Box\", \"Business Partner Postal Code\", \"Business Partner PO Box Postal Code\", \"Region (State Province County) Code\", \"First telephone number\", \"Second telephone number\", \"Cost Center Hierarchy Code\", \"Cost Center Statistical Indicator \", \"Object number\", \"Functional Area Code\", \"Cost Center Name\", \"Cost Center Description\", \"Cost Center Short Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Controlling Area Activity Type",
        "description": "DIM_CONTROLLING_AREA_ACTIVITY_TYPE",
        "columns": [
          {
            "name": "Controlling Area Activity Type Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Controlling Area Activity Type Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Controlling Area Activity Type Key",
            "encodingHint": "hash"
          },
          {
            "name": "Controlling Area Code",
            "dataType": "string",
            "description": [
              "\"the second level in the Rockwell Automation internal organization hierarchy in SAP (such as RA00, the common controlling area used globally at Rockwell Automation), for which costs and revenues are collected and reported, stored as a string",
              "",
              "The internal organization hierarchy ensures consistent standard financial reporting and has the structure:",
              "1) Operating Concern",
              "2) Controlling Area",
              "3) Company Code",
              "4) Business Area",
              "5) Cost Center\""
            ],
            "isHidden": true,
            "sourceColumn": "Controlling Area Code",
            "encodingHint": "hash"
          },
          {
            "name": "Activity Type Code",
            "dataType": "string",
            "description": [
              "\"code in SAP (such as CAT001 for Direct Labor or CAT009 for Panels) that describes the given activity produced by a cost center, measured in units of time or quantity, stored as a string",
              "",
              "In Activity Type Planning, control data determines whether the activity price for evaluation of the activity type is manually set or if it is derived iteratively through activity price calculation. \""
            ],
            "sourceColumn": "Activity Type Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Activity Type Effective To Date",
            "dataType": "dateTime",
            "description": "date in SAP on which the given activity type is no longer effective (which may be a past, present, or future date), stored as a timestamp in the format yyyy-mm-dd",
            "sourceColumn": "Activity Type Effective To Date",
            "encodingHint": "hash"
          },
          {
            "name": "Activity Type Effective From Date",
            "dataType": "dateTime",
            "description": "date in SAP on which the given activity type is effective (which may be a past, present, or future date), stored as a timestamp in the format yyyy-mm-dd",
            "sourceColumn": "Activity Type Effective From Date",
            "encodingHint": "hash"
          },
          {
            "name": "Activity Type Unit Of Measure",
            "dataType": "string",
            "description": "the unit of measure used when posting the consumed activity quantity (such as EA for each or H for hours), which is based upon the unit of measure in the activity type master data, stored as a string",
            "sourceColumn": "Activity Type Unit Of Measure",
            "encodingHint": "hash"
          },
          {
            "name": "Activity Type Category Indicator",
            "dataType": "string",
            "description": [
              "\"indicator which is used to determine the method of activity quantity planning and activity allocation(see examples below), stored as a string",
              "",
              "For example:",
              "",
              "Activity Type Category 1 (Manual entry, manual allocation)",
              "Activity types of this category use planned activity quantities. The planned activity is allocated to the different receiver objects using activity input planning. It may be necessary to reconcile the activity quantities and the planned scheduled activity. Actual activity quantities are entered for each business transaction using internal activity allocation.",
              "",
              "Activity Type Category 2 (Indirect calculation, indirect allocation)",
              "The quantities produced by the activity types in this category cannot be calculated, if they can they can only be calculated with great effort. The Planned and Actual activity quantities are determined in indirect activity allocation using one of the following:",
              "-The defined sender/receiver relationshps",
              "-The receiver tracing factors",
              "-Fixed quantities (defined in the segments)",
              "",
              "Allocating the activities also takes place automatically through indirect activity allocation as described above. The actual and planned activity quantities result from the sum of the activity inputs calculated from the tracing factors on the individual receivers. Planned and scheduled activity quantities are therefore automatically reconciled.",
              "",
              "Activity Type Category 3 (indirect determination, indirect allocation)",
              "Activity types of this category use activity quantities entered manually. Entering the actual activity quantity takes place on an activity-related basis using a special function (Non-allocatable activities) for which no receiver objects can be given.The plan and actual activity quantities are allocated indirectly using defined sender/receiver relationships. The R/3 System calculates the activity quantity to be allocated for each receiver based on the ratios of tracing factors for all receivers. The manually planned or posted activity is thereby completely allocated to the receivers. This ensures that plan activities are fully reconciled after carrying out indirect activity allocation.",
              "",
              "Activity type category 4 (Manual entry, no allocation)",
              "Activity types of this category use activity quantities entered manually. Allocations to other objects are not possible.The actual activity quantity is entered for each transaction using a special function (Non-allocatable activities). No receiver objects can be entered.",
              "",
              "The Activity Type Category can be saved as a default value in the master data for an activity type or a business process for allocatable activity type categories or allocation categories (category 1, 2, or 3). \""
            ],
            "sourceColumn": "Activity Type Category Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Variant Activity Type Category for Actual Postings Indicator",
            "dataType": "string",
            "description": [
              "\"indicator which is used to determine the method of actual activity allocation (see examples below), stored a string",
              "",
              "For example:",
              "",
              "Activity type category 1 (Manual entry, manual allocation)",
              "Actual activity quantities in internal activity allocation are entered based on transaction.",
              "",
              "",
              "Activity Type Category 2 (Indirect calculation, indirect allocation)",
              "The quantities produced by the activity types in this category cannot be calculated, if they can they can only be calculated with great effort. The Planned and Actual activity quantities are determined in indirect activity allocation using defined sender/receiver relationships and receiver tracing factors or fixed quantities (defined in the segments).",
              "Allocating the activities takes place automatically through indirect activity allocation as described above. The actual and planned activity quantities result from the sum of the activity inputs calculated from the tracing factors on the individual receivers.",
              "The planned and scheduled activity quantities are therefore automatically reconciled. ",
              "",
              "",
              "Activity type category 3 (indirect determination, indirect allocation)",
              "Activity quantities are planned manually. Entering the actual activity quantity takes place on a transaction-related basis using a special function (Non-allocatable activities) for which no receiver objects can be given. The planned and actual activity quantities are allocated indirectly using defined sender/receiver relationships. The R/3 System calculates the activity quantity to be allocated for each receiver based on the ratios of tracing factors for all receivers. The manually planned or posted activity is thereby completely allocated to the receivers.This ensures that the plan activities are fully reconciled after carrying out indirect activity allocation",
              "",
              "Activity type category 4 (Manual entry, no allocation)",
              "Activity types of this category use actual activity quantities entered on a transaction-related basis using a special function (Non-allocatable activities) where no receiver objects can be entered.",
              "",
              "Activity type category 5 (Calculation and allocation via target = actual activity allocation)",
              "Because the allocation is used only for actual values, activities used in target = actual activity allocation must be given separate activity type categories for planned and actual. ",
              "",
              "Planning can use categories 1, 2, or 3, where 1 is used as a rule.\""
            ],
            "sourceColumn": "Variant Activity Type Category for Actual Postings Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Activity Type Created Date",
            "dataType": "dateTime",
            "sourceColumn": "Activity Type Created Date",
            "encodingHint": "hash"
          },
          {
            "name": "Activity Type Created By Identifier",
            "dataType": "string",
            "description": "Windows login identifier (such as OGALIND) of the person who created the given cost estimate, stored as a string",
            "sourceColumn": "Activity Type Created By Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Activity Type Valid Cost Center Categories Indicator",
            "dataType": "string",
            "description": "indicator used to determine what cost center types are allowed for a given Activity Type Code, which determines what is allowed for planning or as a sender what is allowed for internal activity allocation, stored as a string",
            "sourceColumn": "Activity Type Valid Cost Center Categories Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Output Factor Unit of Measure",
            "dataType": "string",
            "description": [
              "\"the unit of measure that the given activity produced at the time of posting, stored as a string",
              "",
              "The unit of measure of the recorded output is defined in the activity type master and cannot be changed.",
              "",
              "It is possible to make subsequent planned and actual posting in an output unit of measure different than the one recorded, provided it can be converted to the unit of measure defined in the activity type master. \""
            ],
            "sourceColumn": "Output Factor Unit of Measure",
            "encodingHint": "hash"
          },
          {
            "name": "Output Factor",
            "dataType": "double",
            "description": [
              "\"factor calculated to describe the relationship between activity quantity and output quantity (see example calculation below), stored as a decimal",
              "",
              "Output quantity = Activity quantity * Output factor",
              "",
              "In planning you can calculate the output quantity from the activity quantity and output factor. In the planning transaction, choose \"\"Edit -> Activity -> Output\"\".\""
            ],
            "sourceColumn": "Output Factor",
            "encodingHint": "hash"
          },
          {
            "name": "Allocation Cost Element",
            "dataType": "string",
            "description": [
              "\"name of the allocation cost element (secondary cost element), of which the given activity type or business process is allocated, stored as a string",
              "",
              "The allocation cost element is the central characteristic used in all Controlling Document postings. Because of their central role, they are important for reporting (many reports are structured according to the posted cost elements). ",
              "",
              "The Allocation Cost Element can be used to store a default value in the master data of an activity type or a business process.",
              "",
              "The default Allocation Cost Element  value can be overwritten within planning if you are planning for the first time. \""
            ],
            "sourceColumn": "Allocation Cost Element",
            "encodingHint": "hash"
          },
          {
            "name": "Activity Type Lock Indicator",
            "dataType": "string",
            "description": [
              "\"indicator (such as X if locked for activity input planning or blank if not) of whether the given activity type is locked for activity input planning, stored as a string",
              "",
              "If the indicator is active, the affected activity type cannot be included.",
              "",
              "If planning is reconciled (planned activity = scheduled activity), the indicator should be activated so that the planned quantity remains unchanged.",
              "",
              "If the indicator is inactive, the activity type can be drawn upon for activity input planning and indirect activity allocation in plan.",
              "",
              "If active, the lock indicator has no effect on:",
              "-actual postings",
              "-planning, other than activity input planning and indirect activity allocation in plan",
              "-activity price changes\""
            ],
            "sourceColumn": "Activity Type Lock Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Activity Type Name",
            "dataType": "string",
            "description": "name associated with the code in SAP (such as Direct Labor for code CAT001 or  Labor - 2nd rate for code CAT020) that describes the given activity produced by a cost center, measured in units of time or quantity, stored as a string",
            "sourceColumn": "Activity Type Name",
            "encodingHint": "hash"
          },
          {
            "name": "Activity Type Long Description",
            "dataType": "string",
            "description": "long description associated with the code in SAP (such as Standard Direct Labor for code CAT001 or Panels for code CAT009) that describes the given activity produced by a cost center, measured in units of time or quantity, stored as a string",
            "sourceColumn": "Activity Type Long Description",
            "encodingHint": "hash"
          },
          {
            "name": "Activity Type Short Description",
            "dataType": "string",
            "description": "short description associated with the code in SAP (such as Direct Labor for code CAT001 or Panels for code CAT009) that describes the given activity produced by a cost center, measured in units of time or quantity, stored as a string",
            "sourceColumn": "Activity Type Short Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CONTROLLING_AREA_ACTIVITY_TYPE_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CONTROLLING_AREA_ACTIVITY_TYPE_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CONTROLLING_AREA_ACTIVITY_TYPE_BusNm,{\"Controlling Area Activity Type Key\", \"Controlling Area Code\", \"Activity Type Code\", \"Activity Type Effective To Date\", \"Activity Type Effective From Date\", \"Activity Type Unit Of Measure\", \"Activity Type Category Indicator\", \"Variant Activity Type Category for Actual Postings Indicator\", \"Activity Type Created Date\", \"Activity Type Created By Identifier\", \"Activity Type Valid Cost Center Categories Indicator\", \"Output Factor Unit of Measure\", \"Output Factor\", \"Allocation Cost Element\", \"Activity Type Lock Indicator\", \"Activity Type Name\", \"Activity Type Long Description\", \"Activity Type Short Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Cost Element By Controlling Area",
        "description": "DIM_COST_ELEMENT_CONTROLLING_AREA",
        "columns": [
          {
            "name": "Cost Element Controlling Area key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Cost Element Controlling Area Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Cost Element Controlling Area key",
            "encodingHint": "hash"
          },
          {
            "name": "Controlling Area Code",
            "dataType": "string",
            "description": "the second level in the Rockwell Automation internal organization hierarchy in SAP (such as RA00, the common controlling area used globally at Rockwell Automation), for which costs and revenues are collected and reported, stored as a string",
            "isHidden": true,
            "sourceColumn": "Controlling Area Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element Code",
            "dataType": "string",
            "description": "category of an activity that incurs costs (see examples below), used in activity based costing (which states that products consume activities and activities consume resources), stored as a string",
            "sourceColumn": "Cost Element Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element Effective To Date",
            "dataType": "dateTime",
            "description": "date in SAP on which the given cost element is no longer effective (which may be a past, present, or future date), stored as a timestamp in yyyy-mm-dd format",
            "sourceColumn": "Cost Element Effective To Date",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element Effective From Date",
            "dataType": "dateTime",
            "description": "date in SAP on which the given cost element is effective (which may be a past, present, or future date), stored as a timestamp in yyyy-mm-dd format",
            "sourceColumn": "Cost Element Effective From Date",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element Category Code",
            "dataType": "string",
            "description": "code that identifies the given cost element category, which is used in the Controlling (CO) component, that determines which cost elements can be used for certain business transactions (see examples below), stored as a string",
            "sourceColumn": "Cost Element Category Code",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element Attributes Description",
            "dataType": "string",
            "description": "description (a property or parameter) used as an aid in the identification of a given cost element, stored as a string",
            "sourceColumn": "Cost Element Attributes Description",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Code",
            "dataType": "string",
            "description": "code in SAP (such as 20030 for FDLDET Detroit) for an organizational unit within a Business Area that represents a defined location in which costs are incurred, stored as a string",
            "sourceColumn": "Cost Center Code",
            "encodingHint": "hash"
          },
          {
            "name": "Order Number",
            "dataType": "string",
            "description": "Number which identifies an order within a client.",
            "sourceColumn": "Order Number",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element Unit of Measure",
            "dataType": "string",
            "description": "the unit of measure used with the given cost element (such as '2' for 'square inch', '3' for 'cubic inch' or 'CAN' for 'Canister'), stored as a string",
            "sourceColumn": "Cost Element Unit of Measure",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element Deactivated Indicator",
            "dataType": "string",
            "description": "indicator (such as x if cost element has been deactivated or null if not) of whether the given cost element has been deactivated in SAP, stored as a string",
            "sourceColumn": "Cost Element Deactivated Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element Short Description",
            "dataType": "string",
            "description": "brief description for the Cost Element, which is a category of an activity that incurs costs, stored as a string",
            "sourceColumn": "Cost Element Short Description",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element Medium Description",
            "dataType": "string",
            "description": "medium-length description for the Cost Element, which is a category of an activity that incurs costs, stored as a string",
            "sourceColumn": "Cost Element Medium Description",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element Deletion Indicator",
            "dataType": "string",
            "description": "indicator (such as x if marked for deletion or null if not) of whether the given cost element has been marked for deletion in SAP, stored as a string",
            "sourceColumn": "Cost Element Deletion Indicator",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_COST_ELEMENT_CONTROLLING_AREA_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_COST_ELEMENT_CONTROLLING_AREA_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_COST_ELEMENT_CONTROLLING_AREA_BusNm,{\"Cost Element Controlling Area key\", \"Controlling Area Code\", \"Cost Element Code\", \"Cost Element Effective To Date\", \"Cost Element Effective From Date\", \"Cost Element Category Code\", \"Cost Element Attributes Description\", \"Cost Center Code\", \"Order Number\", \"Cost Element Unit of Measure\", \"Cost Element Deactivated Indicator\", \"Cost Element Deletion Indicator\", \"Cost Element Short Description\", \"Cost Element Medium Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "GL Account by Chart Of Accounts",
        "description": "DIM_GL_ACCOUNT_MASTER_COA",
        "columns": [
          {
            "name": "G/L Account Master COA Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the G/L Account Master COA Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "G/L Account Master COA Key",
            "encodingHint": "hash"
          },
          {
            "name": "Chart of Accounts",
            "dataType": "string",
            "description": [
              "\"code for the chart of accounts (see examples below) that applies to the given scope, stored as a string",
              "",
              "RAHF - Group - a higher level of accounts used to consolidate operating details from the operating chart of accounts, primarily designed for HFM reporting",
              "",
              "RCOA - Operating - the standard chart of accounts in SAP FI used for posting transactions, with most settings standard across all company codes",
              "",
              "xxCA - country-specific alternate charts of account that allow for reporting of results in a country-mandated chart format\""
            ],
            "sourceColumn": "Chart of Accounts",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "G/L Account Number",
            "dataType": "string",
            "description": "identifier for the general ledger account (such as 627000 for COGS STANDARD for cost of goods sold or 141000 for INV FIN GDS for inventory analysis), stored as a string",
            "sourceColumn": "G/L Account Number",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Balance Sheet Account Indicator",
            "dataType": "string",
            "description": "indicator (such as x if used as a balance sheet account and blank if not) of whether the given G/L account is managed as a balance sheet account, stored as a string",
            "sourceColumn": "Balance Sheet Account Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "G/L Account Number Significant Length",
            "dataType": "string",
            "description": "identifier for the general ledger account, which contains leading zeros (such as 00075000 for the G/L account number 75000), stored as a string",
            "sourceColumn": "G/L Account Number Significant Length",
            "encodingHint": "hash"
          },
          {
            "name": "Group Account Number",
            "dataType": "string",
            "description": "number for the line item associated with the given account, as defined within the balance sheet and the Profit and Loss structure, which is assgined by the given G/L Account Number or the group account number, stored as a string",
            "sourceColumn": "Group Account Number",
            "encodingHint": "hash"
          },
          {
            "name": "P&L Account Indicator",
            "dataType": "string",
            "description": "indicator (such as X if the earnings are retained or null if they are not ) that identifies if a Profit and Loss statement account needs to be created, which determines the retained earnings account for each Profit and Loss account, stored as a string",
            "sourceColumn": "P&L Account Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "G/L Account Group Code",
            "dataType": "string",
            "description": "code in SAP that classifies the given G/L account with the G/L account master record, stored as a string",
            "sourceColumn": "G/L Account Group Code",
            "encodingHint": "hash"
          },
          {
            "name": "Trading Partner Company Identifier",
            "dataType": "string",
            "description": "identifier for the given Business Partner Identifier (such as 185, the identifier for the company FDS 185 Turkey) or the Company Code of the purchasing company, such as the receiving plant for an intercompany transaction (such as 3031, the identfier for the company Rockwell Automation Chile S.A.), stored as a string",
            "sourceColumn": "Trading Partner Company Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "G/L Account Deletion Indicator",
            "dataType": "string",
            "description": "indicator (such as X if master record will be deleted or blank it not) of whether the data in the given master record will be deleted, stored as a string",
            "sourceColumn": "G/L Account Deletion Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "G/L Account Creation Blocked Indicator",
            "dataType": "string",
            "description": "indicator (such as X if the account is blocked or blank if not) of whether the given G/L account is to blocked for creation in the specified company code, stored as a string",
            "sourceColumn": "G/L Account Creation Blocked Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "G/L Account Posting Blocked Indicator",
            "dataType": "string",
            "description": "indicator (such as X if the account is blocked or blank if not) of whether the given G/L account is blocked for posting, stored as a string",
            "sourceColumn": "G/L Account Posting Blocked Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "G/L Account Planning Blocked Indicator",
            "dataType": "string",
            "description": "indicator (such as X if the acccount is blocked or blank if not) of whether the given G/L account is blocked for planning, stored as a string",
            "sourceColumn": "G/L Account Planning Blocked Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Functional Area Code",
            "dataType": "string",
            "description": "code in SAP that represents a line item on the income statement (such as 1000 for Sales-3rd Party Sales, 2000 for Standard Cost of Sales, 2100 for Inventory Adjustment-Scrap Sales, 5000 for Field Sales, 6005 for Marketing-Commercial, and 7000 for Admin), stored as a string",
            "isHidden": true,
            "sourceColumn": "Functional Area Code",
            "encodingHint": "hash"
          },
          {
            "name": "G/L Account Short Description",
            "dataType": "string",
            "description": "short description associated with the identifer for the general ledger account (such as Creditors of the enterprise for GL account number 100 or Third Party Security for GL account number 1000), stored as a string",
            "sourceColumn": "G/L Account Short Description",
            "encodingHint": "hash"
          },
          {
            "name": "G/L Account Long Description",
            "dataType": "string",
            "description": "long description associated with the identifer for the general ledger account (such as Creditors of the enterprise, 3rd Party Securities for GL account number 100 or Third Party Giving guarantees on behalf of enterprise for GL account number 1000), stored as a string",
            "sourceColumn": "G/L Account Long Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_GL_ACCOUNT_MASTER_COA_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_GL_ACCOUNT_MASTER_COA_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_GL_ACCOUNT_MASTER_COA_BusNm,{\"G/L Account Master COA Key\", \"Chart of Accounts\", \"G/L Account Number\", \"Balance Sheet Account Indicator\", \"G/L Account Number Significant Length\", \"Group Account Number\", \"P&L Account Indicator\", \"G/L Account Group Code\", \"Trading Partner Company Identifier\", \"G/L Account Deletion Indicator\", \"G/L Account Creation Blocked Indicator\", \"G/L Account Posting Blocked Indicator\", \"G/L Account Planning Blocked Indicator\", \"Functional Area Code\", \"G/L Account Short Description\", \"G/L Account Long Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Controlling Business Area",
        "description": "DIM_CONTROLLING_BUSINESS_AREA",
        "columns": [
          {
            "name": "Controlling Business Area Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Controlling Business Area Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Controlling Business Area Key",
            "encodingHint": "hash"
          },
          {
            "name": "Business Area Code",
            "dataType": "string",
            "description": "code in SAP to identify an organizational unit of financial accounting that represents a separate area of operations or responsibilities within the company and to which value changes recorded in financial accounting can be allocated, stored as a string",
            "sourceColumn": "Business Area Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Business Area Description",
            "dataType": "string",
            "description": "description associated with the code in SAP to identify an organizational unit of financial accounting that represents a separate area of operations or responsibilities within the company and to which value changes recorded in financial accounting can be allocated, stored as a string",
            "sourceColumn": "Business Area Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CONTROLLING_BUSINESS_AREA_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CONTROLLING_BUSINESS_AREA_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CONTROLLING_BUSINESS_AREA_BusNm,{\"Controlling Business Area Key\", \"Business Area Code\", \"Business Area Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Cost Element By Chart Of Accounts",
        "description": "DIM_COST_ELEMENT_COA",
        "columns": [
          {
            "name": "Cost Element COA Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Chart of Accounts Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Cost Element COA Key",
            "encodingHint": "hash"
          },
          {
            "name": "Chart Of Accounts Code",
            "dataType": "string",
            "sourceColumn": "Chart Of Accounts Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element Code",
            "dataType": "string",
            "description": "category of an activity that incurs costs (see examples below), used in activity based costing (which states that products consume activities and activities consume resources), stored as a string",
            "sourceColumn": "Cost Element Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element Created Date",
            "dataType": "dateTime",
            "description": "date on which the given cost element was created in SAP, stored as a timestamp in yyyy-mm-dd format",
            "sourceColumn": "Cost Element Created Date",
            "encodingHint": "hash"
          },
          {
            "name": "Functional Area Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Functional Area Code",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element COA Name",
            "dataType": "string",
            "description": "name for the Cost Element COA, which is a category of an activity that incurs costs, stored as a string",
            "sourceColumn": "Cost Element COA Name",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element COA Long Description",
            "dataType": "string",
            "description": "long description for the Cost Element COA, which is a category of an activity that incurs costs, stored as a string",
            "sourceColumn": "Cost Element COA Long Description",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element COA Short Description",
            "dataType": "string",
            "description": "brief description for the Cost Element COA, which is a category of an activity that incurs costs, stored as a string",
            "sourceColumn": "Cost Element COA Short Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_COST_ELEMENT_COA_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_COST_ELEMENT_COA_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_COST_ELEMENT_COA_BusNm,{\"Cost Element COA Key\", \"Chart Of Accounts Code\", \"Cost Element Code\", \"Cost Element Created Date\", \"Functional Area Code\", \"Cost Element COA Name\", \"Cost Element COA Long Description\", \"Cost Element COA Short Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Controlling Area",
        "description": "DIM_CONTROLLING_AREA",
        "columns": [
          {
            "name": "Controlling Area Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Controlling Area Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Controlling Area Key",
            "encodingHint": "hash"
          },
          {
            "name": "Controlling Area Code",
            "dataType": "string",
            "sourceColumn": "Controlling Area Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Controlling Area Name",
            "dataType": "string",
            "description": "description associated with the second level in the Rockwell Automation internal organization hierarchy in SAP (such as RA00, the common controlling area used globally at Rockwell Automation), for which costs and revenues are collected and reported, stored as a string",
            "sourceColumn": "Controlling Area Name",
            "encodingHint": "hash"
          },
          {
            "name": "List Price Currency Code",
            "dataType": "string",
            "description": "code for the currency used for the standard catalog list price (such as EUR or USD) in SAP, based on the Sales Org for the country in which the product will be or was sold, stored as a string",
            "sourceColumn": "List Price Currency Code",
            "encodingHint": "hash"
          },
          {
            "name": "Chart of Accounts",
            "dataType": "string",
            "sourceColumn": "Chart of Accounts",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Year Variant Code",
            "dataType": "string",
            "description": "code for the fiscal year calendar used in SAP (such as RA, which signifies that the Rockwell Automation fiscal year spans from 1 Oct to 30 Sep), stored as a string",
            "sourceColumn": "Fiscal Year Variant Code",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Hierarchy Code",
            "dataType": "string",
            "description": "the Rockwell Automation hierarchy in SAP (RA for Rockwell Automation) used to organize cost centers within RA00 (the common Controlling Area used globally at Rockwell Automation), stored as a string",
            "sourceColumn": "Cost Center Hierarchy Code",
            "encodingHint": "hash"
          },
          {
            "name": "Operating Concern Code",
            "dataType": "string",
            "sourceColumn": "Operating Concern Code",
            "encodingHint": "hash"
          },
          {
            "name": "Profit Center Hierarchy Area Code",
            "dataType": "string",
            "description": "code (such as KNX_ENG for Kinetix engineering in the US or WAR_CON_LA for warranty concessions in Latin America) that identifies a group of profit centers used for both business unit and product line reporting, stored as a string",
            "sourceColumn": "Profit Center Hierarchy Area Code",
            "encodingHint": "hash"
          },
          {
            "name": "Valuation View Code",
            "dataType": "int64",
            "description": "code that identifies a distinct view on which a given business transaction can be valuated (such as 0 for Legal Valuation, 1 for Group Valuation, or 2 for Profit Center Valuation), stored a string",
            "sourceColumn": "Valuation View Code",
            "encodingHint": "hash"
          },
          {
            "name": "Calculation Base Valuation View Code",
            "dataType": "int64",
            "description": [
              "code for the valuation view (such as 2 for Profit Center Valuation or 5 for Parallel Cost of Goods Manufactured 1) for the Controlling Area Calculation Base, stored as a integer",
              "The Calculation Base determines to which cost elements overhead is applied together. "
            ],
            "sourceColumn": "Calculation Base Valuation View Code",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CONTROLLING_AREA_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CONTROLLING_AREA_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CONTROLLING_AREA_BusNm,{\"Controlling Area Key\", \"Controlling Area Code\", \"Controlling Area Name\", \"List Price Currency Code\", \"Chart of Accounts\", \"Fiscal Year Variant Code\", \"Cost Center Hierarchy Code\", \"Operating Concern Code\", \"Profit Center Hierarchy Area Code\", \"Valuation View Code\", \"Calculation Base Valuation View Code\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Vendor",
        "description": "DIM_VENDOR",
        "columns": [
          {
            "name": "Vendor Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Vendor Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Vendor Key",
            "encodingHint": "hash"
          },
          {
            "name": "Country Code",
            "dataType": "string",
            "description": "code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a two-character string",
            "sourceColumn": "Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "Vendor Name 1",
            "dataType": "string",
            "description": [
              "\"name 1 associated with the business partner identifier in SAP for the company that supplied goods to Rockwell Automation to fulfill a purchase order (such as USA TOLERANCE RINGS for Vendor Business Partner Identifier 100010), stored as a string",
              "",
              "For a stock transfer order (where one Rockwell Automation location receives the product from another plant or distribution center), the Vendor Business Partner Identifier is a Rockwell Automation (internal) business partner identifier.\""
            ],
            "sourceColumn": "Vendor Name 1",
            "encodingHint": "hash"
          },
          {
            "name": "Vendor Name 2",
            "dataType": "string",
            "description": [
              "\"name 2 associated with the business partner identifier in SAP for the company that supplied goods to Rockwell Automation to fulfill a purchase order (such as DO NOT USE, DO NOT USE - INACTIVE, or INDUSTRIALS CONTROLS DIVISION), stored as a string",
              "",
              "For a stock transfer order (where one Rockwell Automation location receives the product from another plant or distribution center), the Vendor Business Partner Identifier is a Rockwell Automation (internal) business partner identifier.\""
            ],
            "sourceColumn": "Vendor Name 2",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner City Name",
            "dataType": "string",
            "description": "name of the city for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "Business Partner City Name",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner District Name",
            "dataType": "string",
            "description": "name of the district for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "Business Partner District Name",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner PO Box",
            "dataType": "string",
            "description": "number of the post office box for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "Business Partner PO Box",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner PO Box Postal Code",
            "dataType": "string",
            "description": [
              "\"postal code of the post office (\"\"PO\"\") box for the given  Business Partner in SAP, stored as a string",
              "",
              "The Business Partner PO Box Postal Code is used for countries where the postal code (such as the ZIP code in the United States) that is used to send mail to the company P.O. Box is different than the one that is used to send letters to the company address.",
              "",
              "Also, some large companies have their own postal code and no post office box.\""
            ],
            "sourceColumn": "Business Partner PO Box Postal Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Postal Code",
            "dataType": "string",
            "description": "postal code associated with the address for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "Business Partner Postal Code",
            "encodingHint": "hash"
          },
          {
            "name": "Vendor Business Partner Street Address",
            "dataType": "string",
            "description": "free-form text for the address (usually a building number and street) of the location of the given vendor, stored as a string",
            "sourceColumn": "Vendor Business Partner Street Address",
            "encodingHint": "hash"
          },
          {
            "name": "Vendor Business Address Services Identifier",
            "dataType": "string",
            "description": "identifier in SAP Business Address Services (such as 1234556234 for REXEL CONSOLIDATED), which identifies an address (including the company name, postal code, and city), associated with the given Vendor Business Partner Identifier, stored as a string",
            "sourceColumn": "Vendor Business Address Services Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner SIC Code",
            "dataType": "string",
            "description": "Standard Industry Classification (SIC) four-digit code and description from Dun & Bradstreet (D&B) (such as 3675 for Electronic Capacitors), which classifies the customer into to an industry, stored as a string",
            "sourceColumn": "Business Partner SIC Code",
            "encodingHint": "hash"
          },
          {
            "name": "Vendor Account Group Code",
            "dataType": "string",
            "description": [
              "\"code in SAP (such as 001 for Vendor, 002 for Goods Supplier, or 004 for Invoicing Party) used to classify a given vendor master record, stored a a string",
              "",
              "The Vendor Account Group Code determines the number interval for the account number of the vendor, whether the number is assigned by the user or by the system, and which specifications are necessary and/or possible in the master record.\""
            ],
            "sourceColumn": "Vendor Account Group Code",
            "encodingHint": "hash"
          },
          {
            "name": "Vendor Central Deletion Indicator",
            "dataType": "string",
            "description": [
              "\"indicator (such as x if yes or null if not) of whether the data in the given master record will be deleted, stored as a string ",
              "",
              "To delete this data, you have to run the archiving program for Accounts Receivable or Accounts Payable. This program will archive all master records marked for deletion, provided there is no dependent data present. \""
            ],
            "sourceColumn": "Vendor Central Deletion Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Vendor Central Posting Block Indicator",
            "dataType": "string",
            "description": [
              "\"indicator (such as x if blocked for posting or null if not) of whether the given vendor account is blocked for posting for all company codes, stored as a string",
              "",
              "If the Vendor Central Posting Block is set, the system prevents users from posting items to this account and issues an error message to inform them that the account is blocked. \""
            ],
            "sourceColumn": "Vendor Central Posting Block Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Trading Partner Company Identifier",
            "dataType": "string",
            "description": [
              "\"identifier for the given Business Partner Identifier (such as 185, the identifier for the company FDS 185 Turkey) or the Company Code of the purchasing company, such as the receiving plant for an intercompany transaction (such as 3031, the identfier for the company Rockwell Automation Chile S.A.), stored as a string",
              "",
              "A Trading Partner is a legally independent company belonging to the group [company].  Some accounts require a Trading Partner.  The Trading Partner Company Identifier is required on some manually posted transactions (such as FB50, FB60 and FB70).  The Trading Partner Company Identifer is also required for intercompany accounts payable and accounts receivable transactions, intercompany miscellaneous income and expense transactions, and intercompany sales & cost of sales transactions, which are submitted to the HFM system for consolidation.\""
            ],
            "sourceColumn": "Trading Partner Company Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "VAT Registration Number",
            "dataType": "string",
            "description": [
              "\"identifier for the number used within the European Union (EU) for value added tax purposes, which is used with vendors within the EU for tax-exempt deliveries for the \"\"EC sales list\"\", stored as a string",
              "",
              "The full identifier starts with an ISO 3166-1 alpha-2 country code and then it consists of 2 and 13 characters",
              "",
              "The check rules are defined for each EU country and cannot be changed.\""
            ],
            "sourceColumn": "VAT Registration Number",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner PO Box City Name",
            "dataType": "string",
            "description": "name of the city associated with the Postal Code for the Post Office (\"PO\") Box for the given Vendor Business Partner in SAP (such as \"Pekin IL\" for Postal Code 61555), stored as a string",
            "sourceColumn": "Business Partner PO Box City Name",
            "encodingHint": "hash"
          },
          {
            "name": "Plant Code",
            "dataType": "string",
            "description": "code in SAP for the physical location (4 digits stored as text, such as 1020 for Twinsburg, 1090 for the Champaign Distribution Center, 4000 for the Central European Distribution Center, and 4080 for the EMEA main service hub) at which material is produced and stored as inventory, or goods and services are provided, stored as a string",
            "sourceColumn": "Plant Code",
            "encodingHint": "hash"
          },
          {
            "name": "Tax Jurisdiction Code",
            "dataType": "string",
            "description": [
              "\"code that identifies the tax jurisdiction associated with the given vendor, stored as a string",
              "",
              "There are four jurisdiction levels for calculation procedure TAXUSJ and six jurisdiction levels for calculation procedure TAXUSX. Each jurisdiction level will have its own jurisdiction code (such as PA0000000 for the state of Pennsylvania or PA0010100 for the city of Pittsburgh)",
              "",
              "The tax jurisdiction is always the city in which the given goods are supplied.\""
            ],
            "sourceColumn": "Tax Jurisdiction Code",
            "encodingHint": "hash"
          },
          {
            "name": "Vendor Payment Block Indicator",
            "dataType": "string",
            "description": "indicator (such as X if the given vendor is blocked or blank if not) of whether there is a block on payments for the given vendor, stored as a string",
            "sourceColumn": "Vendor Payment Block Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Tax Number Type",
            "dataType": "string",
            "description": [
              "\"number for the identification of the vendor for tax purposes (for example, 80 for CUIT), which is used for DGI tax reporting, stored as a string",
              "",
              "If the Argentine tax number checking routine is switched on, the number is also used to check the contents of the field tax code 1. \""
            ],
            "sourceColumn": "Tax Number Type",
            "encodingHint": "hash"
          },
          {
            "name": "Vendor Business Type Description",
            "dataType": "string",
            "description": "description of the classification defined by SAP, which groups the vendor into a specific business (such as elec machine, trade, repair), stored as a string",
            "sourceColumn": "Vendor Business Type Description",
            "encodingHint": "hash"
          },
          {
            "name": "Vendor Industry Type Description",
            "dataType": "string",
            "description": "description of the classification defined by SAP, which groups the vendor into a specific industry (such as manufacture, wholesale, service), stored as a string",
            "sourceColumn": "Vendor Industry Type Description",
            "encodingHint": "hash"
          },
          {
            "name": "Business Purpose Completion Indicator",
            "dataType": "string",
            "description": "indicator (such as X if the purpose for the vendor has been completed, or blank it not) of whether the end purchase for the master data used by the consuming applications has been reached, which upon being set blocks the given vendor, stored as a string",
            "sourceColumn": "Business Purpose Completion Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Sold to Business Partner Identifier",
            "dataType": "string",
            "description": [
              "\"business partner identifier in SAP (such as P1090 for REXEL CONSOLIDATED) for the company (such as a Rockwell Automation plant, a distributor, or an end customer) that purchased the product, as listed on the sales order, stored as a string",
              "",
              "For a stock transfer order (where one Rockwell Automation location receives the product from another plant or distribution center), the Sold To Business Partner Identifier is a Rockwell Automation (internal) business partner identifier.\""
            ],
            "sourceColumn": "Sold to Business Partner Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Region (State Province County) Code",
            "dataType": "string",
            "description": "abbreviation in SAP for the state, province, or county (such as WI for Wisconsin or TWN for Taiwan), stored as a string",
            "sourceColumn": "Region (State Province County) Code",
            "encodingHint": "hash"
          },
          {
            "name": "Vendor Business Partner Identifier",
            "dataType": "string",
            "description": [
              "\"business partner identifier in SAP (such as 0001003665 for ARROW ELECTRONICS) for the given company that supplies goods to Rockwell Automation to fulfill a purchase order, stored as a string",
              "",
              "For a stock transfer order (where one Rockwell Automation location receives the product from another plant or distribution center), the Vendor Business Partner Identifier is a Rockwell Automation (internal) business partner identifier.\""
            ],
            "sourceColumn": "Vendor Business Partner Identifier",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Vendor Imposed Central Purchasing Block Indicator",
            "dataType": "string",
            "description": "indicator (such as X if the given record is blocked or blank if it is not) of whether or not the vendor master record is blocked for all departments (which determines if posting to the given record is allowed), stored as a string",
            "sourceColumn": "Vendor Imposed Central Purchasing Block Indicator"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_VENDOR_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_VENDOR_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_VENDOR_BusNm,{\"Vendor Key\", \"Vendor Business Partner Identifier\", \"Country Code\", \"Vendor Name 1\", \"Vendor Name 2\", \"Business Partner City Name\", \"Business Partner District Name\", \"Business Partner PO Box\", \"Business Partner PO Box Postal Code\", \"Business Partner Postal Code\", \"Vendor Business Partner Street Address\", \"Vendor Business Address Services Identifier\", \"Business Partner SIC Code\", \"Vendor Account Group Code\", \"Vendor Central Deletion Indicator\", \"Vendor Central Posting Block Indicator\", \"Vendor Imposed Central Purchasing Block Indicator\", \"Trading Partner Company Identifier\", \"VAT Registration Number\", \"Business Partner PO Box City Name\", \"Plant Code\", \"Tax Jurisdiction Code\", \"Vendor Payment Block Indicator\", \"Tax Number Type\", \"Vendor Business Type Description\", \"Vendor Industry Type Description\", \"Business Purpose Completion Indicator\", \"Sold to Business Partner Identifier\", \"Region (State Province County) Code\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Controlling Debit Credit Type",
        "description": "DIM_CONTROLLING_DEBIT_CREDIT_TYPE",
        "columns": [
          {
            "name": "Controlling Debit Credit Type Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Controlling Debit Credit Type Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Controlling Debit Credit Type Key",
            "encodingHint": "hash"
          },
          {
            "name": "Debit Credit Type Code",
            "dataType": "string",
            "description": "code that identifies the type of debit or credit (such as 'A' for Credit for Settlement, 'H' for Credit Posting or Sender Credit Posting, 'L' for Credit from Delivery to Stock), stored as a string",
            "sourceColumn": "Debit Credit Type Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Debit Credit Type Long Description",
            "dataType": "string",
            "description": "long description associated with the code that identifies the type of debit or credit (such as Credit for Settlement for code value 'A' ,Credit Posting or Sender Credit Posting for code value 'H', or Credit from Delivery to Stock for code value 'L'), stored as a string",
            "sourceColumn": "Debit Credit Type Long Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CONTROLLING_DEBIT_CREDIT_TYPE_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CONTROLLING_DEBIT_CREDIT_TYPE_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CONTROLLING_DEBIT_CREDIT_TYPE_BusNm,{\"Controlling Debit Credit Type Key\", \"Debit Credit Type Code\", \"Debit Credit Type Long Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Accounting Document",
        "description": "DIM_ACCNTNG_DOCMNT",
        "columns": [
          {
            "name": "Accounting Document Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Accounting Document Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Accounting Document Key",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Accounting Document Identifier",
            "dataType": "string",
            "description": "identifier for the cost accounting document in SAP (such as the receipt of an invoice or credit memo from the vendor) for the given cost center, stored as a string",
            "sourceColumn": "Cost Accounting Document Identifier",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Accounting Document Line Item Number",
            "dataType": "string",
            "description": "number of the line item in the given cost accounting document in SAP for the cost center, stored as an integer",
            "sourceColumn": "Cost Accounting Document Line Item Number",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Accounting Document Line Item Number Description",
            "dataType": "string",
            "description": "description associated with the given line item (such as DKC DIGI KEY CORP, ULINE SHIP SUPPLIES or QUEST COMPONEN00 OF 00) in the cost accounting document in SAP for the cost center, stored as a string",
            "sourceColumn": "Cost Accounting Document Line Item Number Description",
            "encodingHint": "hash"
          },
          {
            "name": "Posting Date",
            "dataType": "dateTime",
            "description": "identifier (a counter generated in increments of 1, such as 100,101,102...) for the Posting Date Foreign Key in the Fact CCA Actuals table, which links to the Posting Date in the Date Dimension table, stored as a Date",
            "sourceColumn": "Posting Date",
            "encodingHint": "hash"
          },
          {
            "name": "Document Date",
            "dataType": "dateTime",
            "description": "identifier (a counter generated in increments of 1, such as 100,101,102...) for the Document Date Foreign Key in the Fact CCA Actuals table, which links to the Document Date in the Date Dimension table, stored as a date",
            "sourceColumn": "Document Date",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_CCA_V_DIM_ACCNTNG_DOCMNT_BusNm = Source{[Schema=\"FIN_CCA\",Item=\"V_DIM_ACCNTNG_DOCMNT_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_CCA_V_DIM_ACCNTNG_DOCMNT_BusNm,{\"Accounting Document Key\", \"Cost Accounting Document Identifier\", \"Cost Accounting Document Line Item Number\", \"Cost Accounting Document Line Item Number Description\", \"Posting Date\", \"Document Date\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          },
          {
            "name": "Current Fiscal Period",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\t[Accounting Document Key]",
                "\t\t\t, [Cost Accounting Document Identifier]",
                "\t\t\t, [Cost Accounting Document Line Item Number]",
                "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                "\t\t\t, [Posting Date]",
                "\t\t\t, [Document Date]",
                "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                "\t\twhere Part = 'Current Fiscal Period'",
                "       \"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\t[Accounting Document Key]",
                  "\t\t\t, [Cost Accounting Document Identifier]",
                  "\t\t\t, [Cost Accounting Document Line Item Number]",
                  "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                  "\t\t\t, [Posting Date]",
                  "\t\t\t, [Document Date]",
                  "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                  "\t\twhere Part = 'Current Fiscal Period'",
                  "       \"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Prev Fiscal Period",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\t[Accounting Document Key]",
                "\t\t\t, [Cost Accounting Document Identifier]",
                "\t\t\t, [Cost Accounting Document Line Item Number]",
                "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                "\t\t\t, [Posting Date]",
                "\t\t\t, [Document Date]",
                "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                "\t\twhere Part = 'Prev Fiscal Period'",
                "       \"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\t[Accounting Document Key]",
                  "\t\t\t, [Cost Accounting Document Identifier]",
                  "\t\t\t, [Cost Accounting Document Line Item Number]",
                  "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                  "\t\t\t, [Posting Date]",
                  "\t\t\t, [Document Date]",
                  "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                  "\t\twhere Part = 'Prev Fiscal Period'",
                  "       \"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Current Fiscal Year",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\t[Accounting Document Key]",
                "\t\t\t, [Cost Accounting Document Identifier]",
                "\t\t\t, [Cost Accounting Document Line Item Number]",
                "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                "\t\t\t, [Posting Date]",
                "\t\t\t, [Document Date]",
                "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                "\t\twhere Part = 'Current Fiscal Year'",
                "       \"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\t[Accounting Document Key]",
                  "\t\t\t, [Cost Accounting Document Identifier]",
                  "\t\t\t, [Cost Accounting Document Line Item Number]",
                  "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                  "\t\t\t, [Posting Date]",
                  "\t\t\t, [Document Date]",
                  "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                  "\t\twhere Part = 'Current Fiscal Year'",
                  "       \"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\t[Accounting Document Key]",
                "\t\t\t, [Cost Accounting Document Identifier]",
                "\t\t\t, [Cost Accounting Document Line Item Number]",
                "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                "\t\t\t, [Posting Date]",
                "\t\t\t, [Document Date]",
                "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                "\t\twhere Part = 'PrevFiscalYear'",
                "       \"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\t[Accounting Document Key]",
                  "\t\t\t, [Cost Accounting Document Identifier]",
                  "\t\t\t, [Cost Accounting Document Line Item Number]",
                  "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                  "\t\t\t, [Posting Date]",
                  "\t\t\t, [Document Date]",
                  "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                  "\t\twhere Part = 'PrevFiscalYear'",
                  "       \"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear-1",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\t[Accounting Document Key]",
                "\t\t\t, [Cost Accounting Document Identifier]",
                "\t\t\t, [Cost Accounting Document Line Item Number]",
                "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                "\t\t\t, [Posting Date]",
                "\t\t\t, [Document Date]",
                "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                "\t\twhere Part = 'PrevFiscalYear-1'",
                "       \"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\t[Accounting Document Key]",
                  "\t\t\t, [Cost Accounting Document Identifier]",
                  "\t\t\t, [Cost Accounting Document Line Item Number]",
                  "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                  "\t\t\t, [Posting Date]",
                  "\t\t\t, [Document Date]",
                  "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                  "\t\twhere Part = 'PrevFiscalYear-1'",
                  "       \"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear-2",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\t[Accounting Document Key]",
                "\t\t\t, [Cost Accounting Document Identifier]",
                "\t\t\t, [Cost Accounting Document Line Item Number]",
                "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                "\t\t\t, [Posting Date]",
                "\t\t\t, [Document Date]",
                "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                "\t\twhere Part = 'PrevFiscalYear-2'",
                "       \"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\t[Accounting Document Key]",
                  "\t\t\t, [Cost Accounting Document Identifier]",
                  "\t\t\t, [Cost Accounting Document Line Item Number]",
                  "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                  "\t\t\t, [Posting Date]",
                  "\t\t\t, [Document Date]",
                  "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                  "\t\twhere Part = 'PrevFiscalYear-2'",
                  "       \"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear-3",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\t[Accounting Document Key]",
                "\t\t\t, [Cost Accounting Document Identifier]",
                "\t\t\t, [Cost Accounting Document Line Item Number]",
                "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                "\t\t\t, [Posting Date]",
                "\t\t\t, [Document Date]",
                "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                "\t\twhere Part = 'PrevFiscalYear-3'",
                "       \"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\t[Accounting Document Key]",
                  "\t\t\t, [Cost Accounting Document Identifier]",
                  "\t\t\t, [Cost Accounting Document Line Item Number]",
                  "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                  "\t\t\t, [Posting Date]",
                  "\t\t\t, [Document Date]",
                  "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                  "\t\twhere Part = 'PrevFiscalYear-3'",
                  "       \"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Default",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\t[Accounting Document Key]",
                "\t\t\t, [Cost Accounting Document Identifier]",
                "\t\t\t, [Cost Accounting Document Line Item Number]",
                "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                "\t\t\t, [Posting Date]",
                "\t\t\t, [Document Date]",
                "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                "\t\twhere Part = 'Default'",
                "       \"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\t[Accounting Document Key]",
                  "\t\t\t, [Cost Accounting Document Identifier]",
                  "\t\t\t, [Cost Accounting Document Line Item Number]",
                  "\t\t\t, [Cost Accounting Document Line Item Number Description]",
                  "\t\t\t, [Posting Date]",
                  "\t\t\t, [Document Date]",
                  "\t\tFROM [FIN_CCA].[V_DIM_ACCNTNG_DOCMNT_BUSNM] ",
                  "\t\twhere Part = 'Default'",
                  "       \"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Partner Object",
        "description": "DIM_PARTNER_OBJECT",
        "columns": [
          {
            "name": "Partner Object Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Partner Object Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Partner Object Key",
            "encodingHint": "hash"
          },
          {
            "name": "Partner Object Code",
            "dataType": "string",
            "description": "code for the given partner object in SAP (such as 0ATY, OCCT, or OCOR), which is the first two characters of the object number, stored as a string",
            "sourceColumn": "Partner Object Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Partner Object Value",
            "dataType": "string",
            "description": "value associated with the partner object in SAP (such as RA000000003188 or RA000000070050CCC903), stored as a string",
            "sourceColumn": "Partner Object Value",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_CCA_V_DIM_PARTNER_OBJECT_BusNm = Source{[Schema=\"FIN_CCA\",Item=\"V_DIM_PARTNER_OBJECT_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_CCA_V_DIM_PARTNER_OBJECT_BusNm,{\"Partner Object Key\", \"Partner Object Code\", \"Partner Object Value\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "FACT_CCA_PLAN_ACTUALS",
        "isHidden": true,
        "columns": [
          {
            "name": "CRNCY_KEY",
            "dataType": "int64",
            "sourceColumn": "CRNCY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CONTROLLING_AREA_KEY",
            "dataType": "int64",
            "sourceColumn": "CONTROLLING_AREA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PERIOD_KEY",
            "dataType": "int64",
            "sourceColumn": "PERIOD_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COST_CTR_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_CTR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COST_CTR_HIERARCHY_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_CTR_HIERARCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRFT_CTR_KEY",
            "dataType": "int64",
            "sourceColumn": "PRFT_CTR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRFT_CTR_HRCHY_KEY",
            "dataType": "int64",
            "sourceColumn": "PRFT_CTR_HRCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COST_ELEMENT_COA_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_ELEMENT_COA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COST_ELEMENT_CONTROLLING_AREA_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_ELEMENT_CONTROLLING_AREA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COST_ELEMENT_HIERARCHY_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_ELEMENT_HIERARCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CRNCY_TYPE_KEY",
            "dataType": "int64",
            "sourceColumn": "CRNCY_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MEASURE_TYPE_KEY",
            "dataType": "int64",
            "sourceColumn": "MEASURE_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "UOM_KEY",
            "dataType": "int64",
            "sourceColumn": "UOM_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "DETAIL_VALUE_TYPE_KEY",
            "dataType": "int64",
            "sourceColumn": "DETAIL_VALUE_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "STATISTICS_KEY",
            "dataType": "int64",
            "sourceColumn": "STATISTICS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CONTROLLING_VERSION_KEY",
            "dataType": "int64",
            "sourceColumn": "CONTROLLING_VERSION_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "VALUATION_VIEW_KEY",
            "dataType": "int64",
            "sourceColumn": "VALUATION_VIEW_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SENDER_RECEIVER_KEY",
            "dataType": "int64",
            "sourceColumn": "SENDER_RECEIVER_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "FUNCL_AREA_KEY",
            "dataType": "int64",
            "sourceColumn": "FUNCL_AREA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRTNR_FUNCL_AREA_KEY",
            "dataType": "int64",
            "sourceColumn": "PRTNR_FUNCL_AREA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COMPANY_KEY",
            "dataType": "int64",
            "sourceColumn": "COMPANY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COST_CTR_ELIM_IBV_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_CTR_ELIM_IBV_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PLANT_KEY",
            "dataType": "int64",
            "sourceColumn": "PLANT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRTNR_OBJ_KEY",
            "dataType": "int64",
            "sourceColumn": "PRTNR_OBJ_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ACTUAL_CONSUMPTION_QTY",
            "dataType": "double",
            "sourceColumn": "ACTUAL_CONSUMPTION_QTY",
            "encodingHint": "value"
          },
          {
            "name": "ACTUAL_FIX_CONSUMPTION_QTY",
            "dataType": "double",
            "sourceColumn": "ACTUAL_FIX_CONSUMPTION_QTY",
            "encodingHint": "value"
          },
          {
            "name": "ACTUAL_VAR_CONSUMPTION_QTY",
            "dataType": "double",
            "sourceColumn": "ACTUAL_VAR_CONSUMPTION_QTY",
            "encodingHint": "value"
          },
          {
            "name": "PLAN_CONSUMPTION_QTY",
            "dataType": "double",
            "sourceColumn": "PLAN_CONSUMPTION_QTY",
            "encodingHint": "value"
          },
          {
            "name": "PLAN_FIX_CONSUMPTION_QTY",
            "dataType": "double",
            "sourceColumn": "PLAN_FIX_CONSUMPTION_QTY",
            "encodingHint": "value"
          },
          {
            "name": "PLAN_VAR_CONSUMPTION_QTY",
            "dataType": "double",
            "sourceColumn": "PLAN_VAR_CONSUMPTION_QTY",
            "encodingHint": "value"
          },
          {
            "name": "DATE_DTE_KEY",
            "dataType": "dateTime",
            "sourceColumn": "DATE_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CONTROLLING_PLAN_VERSION_KEY",
            "dataType": "int64",
            "sourceColumn": "CONTROLLING_PLAN_VERSION_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
            "dataType": "int64",
            "sourceColumn": "CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CONTROLLING_VALUE_TYPE_KEY",
            "dataType": "int64",
            "sourceColumn": "CONTROLLING_VALUE_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ACTUAL_AMT",
            "dataType": "double",
            "sourceColumn": "ACTUAL_AMT",
            "encodingHint": "value"
          },
          {
            "name": "ACTUAL_FIXED_AMT",
            "dataType": "double",
            "sourceColumn": "ACTUAL_FIXED_AMT",
            "encodingHint": "value"
          },
          {
            "name": "ACTUAL_VARIABLE_AMT",
            "dataType": "double",
            "sourceColumn": "ACTUAL_VARIABLE_AMT",
            "encodingHint": "value"
          },
          {
            "name": "PLAN_AMT",
            "dataType": "double",
            "sourceColumn": "PLAN_AMT",
            "encodingHint": "value"
          },
          {
            "name": "PLAN_FIXED_AMT",
            "dataType": "double",
            "sourceColumn": "PLAN_FIXED_AMT",
            "encodingHint": "value"
          },
          {
            "name": "PLAN_VARIABLE_AMT",
            "dataType": "double",
            "sourceColumn": "PLAN_VARIABLE_AMT",
            "encodingHint": "value"
          },
          {
            "name": "PRFT_CTR_HRCHY_TAX_KEY",
            "dataType": "int64",
            "sourceColumn": "PRFT_CTR_HRCHY_TAX_KEY"
          },
          {
            "name": "PRFT_CTR_HRCHY_REGION_KEY",
            "dataType": "int64",
            "sourceColumn": "PRFT_CTR_HRCHY_REGION_KEY"
          },
          {
            "name": "COST_CTR_HIERARCHY_REGION_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_CTR_HIERARCHY_REGION_KEY"
          }
        ],
        "partitions": [
          {
            "name": "FACT_CCA_PLAN_ACTUALS",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_CCA_V_FACT_CCA_PLAN_ACTUALS_AAS = Source{[Schema=\"FIN_CCA\",Item=\"V_FACT_CCA_PLAN_ACTUALS_AAS\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_CCA_V_FACT_CCA_PLAN_ACTUALS_AAS,{\"CRNCY_KEY\", \"CONTROLLING_AREA_KEY\", \"PERIOD_KEY\", \"COST_CTR_KEY\", \"PRFT_CTR_KEY\", \"PRFT_CTR_HRCHY_KEY\", \"PRFT_CTR_HRCHY_TAX_KEY\", \"PRFT_CTR_HRCHY_REGION_KEY\", \"COST_CTR_HIERARCHY_KEY\", \"COST_CTR_HIERARCHY_REGION_KEY\", \"COST_ELEMENT_HIERARCHY_KEY\", \"COST_ELEMENT_COA_KEY\", \"COST_ELEMENT_CONTROLLING_AREA_KEY\", \"CONTROLLING_AREA_ACTIVITY_TYPE_KEY\", \"CONTROLLING_VALUE_TYPE_KEY\", \"CRNCY_TYPE_KEY\", \"MEASURE_TYPE_KEY\", \"UOM_KEY\", \"DETAIL_VALUE_TYPE_KEY\", \"STATISTICS_KEY\", \"CONTROLLING_VERSION_KEY\", \"CONTROLLING_PLAN_VERSION_KEY\", \"VALUATION_VIEW_KEY\", \"SENDER_RECEIVER_KEY\", \"FUNCL_AREA_KEY\", \"PRTNR_FUNCL_AREA_KEY\", \"COMPANY_KEY\", \"COST_CTR_ELIM_IBV_KEY\", \"PLANT_KEY\", \"PRTNR_OBJ_KEY\", \"ACTUAL_AMT\", \"ACTUAL_FIXED_AMT\", \"ACTUAL_VARIABLE_AMT\", \"ACTUAL_CONSUMPTION_QTY\", \"ACTUAL_FIX_CONSUMPTION_QTY\", \"ACTUAL_VAR_CONSUMPTION_QTY\", \"PLAN_AMT\", \"PLAN_FIXED_AMT\", \"PLAN_VARIABLE_AMT\", \"PLAN_CONSUMPTION_QTY\", \"PLAN_FIX_CONSUMPTION_QTY\", \"PLAN_VAR_CONSUMPTION_QTY\", \"DATE_DTE_KEY\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    FIN_CCA_V_FACT_CCA_PLAN_ACTUALS_AAS = Source{[Schema=\"FIN_CCA\",Item=\"V_FACT_CCA_PLAN_ACTUALS_AAS\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_CCA_V_FACT_CCA_PLAN_ACTUALS_AAS,{\"CRNCY_KEY\", \"CONTROLLING_AREA_KEY\", \"PERIOD_KEY\", \"COST_CTR_KEY\", \"COST_CTR_HIERARCHY_KEY\", \"PRFT_CTR_KEY\", \"PRFT_CTR_HRCHY_KEY\", \"COST_ELEMENT_COA_KEY\", \"COST_ELEMENT_CONTROLLING_AREA_KEY\", \"COST_ELEMENT_HIERARCHY_KEY\", \"CONTROLLING_AREA_ACTIVITY_TYPE_KEY\", \"CONTROLLING_VALUE_TYPE_KEY\", \"CRNCY_TYPE_KEY\", \"MEASURE_TYPE_KEY\", \"UOM_KEY\", \"DETAIL_VALUE_TYPE_KEY\", \"STATISTICS_KEY\", \"CONTROLLING_VERSION_KEY\", \"VALUATION_VIEW_KEY\", \"SENDER_RECEIVER_KEY\", \"FUNCL_AREA_KEY\", \"PRTNR_FUNCL_AREA_KEY\", \"COMPANY_KEY\", \"COST_CTR_ELIM_IBV_KEY\", \"PLANT_KEY\", \"PRTNR_OBJ_KEY\", \"ACTUAL_AMT\", \"ACTUAL_FIXED_AMT\", \"ACTUAL_VARIABLE_AMT\", \"ACTUAL_CONSUMPTION_QTY\", \"ACTUAL_FIX_CONSUMPTION_QTY\", \"ACTUAL_VAR_CONSUMPTION_QTY\", \"PLAN_AMT\", \"PLAN_FIXED_AMT\", \"PLAN_VARIABLE_AMT\", \"PLAN_CONSUMPTION_QTY\", \"PLAN_FIX_CONSUMPTION_QTY\", \"PLAN_VAR_CONSUMPTION_QTY\", \"DATE_DTE_KEY\"})",
                  "in",
                  "    #\"Removed Other Columns\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Current Fiscal Period",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\tCRNCY_KEY, CONTROLLING_AREA_KEY, PERIOD_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, MEASURE_TYPE_KEY, UOM_KEY",
                "\t\t\t, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY, CONTROLLING_VERSION_KEY, CONTROLLING_PLAN_VERSION_KEY",
                "\t\t\t, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY",
                "\t\t\t, COMPANY_KEY, COST_CTR_ELIM_IBV_KEY, PLANT_KEY, PRTNR_OBJ_KEY",
                "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT, ACTUAL_CONSUMPTION_QTY",
                "\t\t\t, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VAR_CONSUMPTION_QTY",
                "\t\t\t, PLAN_AMT, PLAN_FIXED_AMT, PLAN_VARIABLE_AMT, PLAN_CONSUMPTION_QTY",
                "\t\t\t, PLAN_FIX_CONSUMPTION_QTY, PLAN_VAR_CONSUMPTION_QTY, DATE_DTE_KEY",
                "\t\tFROM [FIN_CCA].[V_FACT_CCA_PLAN_ACTUALS_AAS] ",
                "\t\twhere Part = 'Current Fiscal Period'",
                "\t\t\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\tCRNCY_KEY, CONTROLLING_AREA_KEY, PERIOD_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                  "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                  "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                  "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                  "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, MEASURE_TYPE_KEY, UOM_KEY",
                  "\t\t\t, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY, CONTROLLING_VERSION_KEY, CONTROLLING_PLAN_VERSION_KEY",
                  "\t\t\t, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY",
                  "\t\t\t, COMPANY_KEY, COST_CTR_ELIM_IBV_KEY, PLANT_KEY, PRTNR_OBJ_KEY",
                  "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT, ACTUAL_CONSUMPTION_QTY",
                  "\t\t\t, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VAR_CONSUMPTION_QTY",
                  "\t\t\t, PLAN_AMT, PLAN_FIXED_AMT, PLAN_VARIABLE_AMT, PLAN_CONSUMPTION_QTY",
                  "\t\t\t, PLAN_FIX_CONSUMPTION_QTY, PLAN_VAR_CONSUMPTION_QTY, DATE_DTE_KEY",
                  "\t\tFROM [FIN_CCA].[V_FACT_CCA_PLAN_ACTUALS_AAS] ",
                  "\t\twhere Part = 'Current Fiscal Period'",
                  "\t\t\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Current Fiscal Year",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\tCRNCY_KEY, CONTROLLING_AREA_KEY, PERIOD_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, MEASURE_TYPE_KEY, UOM_KEY",
                "\t\t\t, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY, CONTROLLING_VERSION_KEY, CONTROLLING_PLAN_VERSION_KEY",
                "\t\t\t, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY",
                "\t\t\t, COMPANY_KEY, COST_CTR_ELIM_IBV_KEY, PLANT_KEY, PRTNR_OBJ_KEY",
                "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT, ACTUAL_CONSUMPTION_QTY",
                "\t\t\t, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VAR_CONSUMPTION_QTY",
                "\t\t\t, PLAN_AMT, PLAN_FIXED_AMT, PLAN_VARIABLE_AMT, PLAN_CONSUMPTION_QTY",
                "\t\t\t, PLAN_FIX_CONSUMPTION_QTY, PLAN_VAR_CONSUMPTION_QTY, DATE_DTE_KEY",
                "\t\tFROM [FIN_CCA].[V_FACT_CCA_PLAN_ACTUALS_AAS] ",
                "\t\twhere Part = 'Current Fiscal Year'",
                "\t\t\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\tCRNCY_KEY, CONTROLLING_AREA_KEY, PERIOD_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                  "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                  "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                  "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                  "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, MEASURE_TYPE_KEY, UOM_KEY",
                  "\t\t\t, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY, CONTROLLING_VERSION_KEY, CONTROLLING_PLAN_VERSION_KEY",
                  "\t\t\t, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY",
                  "\t\t\t, COMPANY_KEY, COST_CTR_ELIM_IBV_KEY, PLANT_KEY, PRTNR_OBJ_KEY",
                  "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT, ACTUAL_CONSUMPTION_QTY",
                  "\t\t\t, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VAR_CONSUMPTION_QTY",
                  "\t\t\t, PLAN_AMT, PLAN_FIXED_AMT, PLAN_VARIABLE_AMT, PLAN_CONSUMPTION_QTY",
                  "\t\t\t, PLAN_FIX_CONSUMPTION_QTY, PLAN_VAR_CONSUMPTION_QTY, DATE_DTE_KEY",
                  "\t\tFROM [FIN_CCA].[V_FACT_CCA_PLAN_ACTUALS_AAS] ",
                  "\t\twhere Part = 'Current Fiscal Year'",
                  "\t\t\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\tCRNCY_KEY, CONTROLLING_AREA_KEY, PERIOD_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, MEASURE_TYPE_KEY, UOM_KEY",
                "\t\t\t, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY, CONTROLLING_VERSION_KEY, CONTROLLING_PLAN_VERSION_KEY",
                "\t\t\t, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY",
                "\t\t\t, COMPANY_KEY, COST_CTR_ELIM_IBV_KEY, PLANT_KEY, PRTNR_OBJ_KEY",
                "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT, ACTUAL_CONSUMPTION_QTY",
                "\t\t\t, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VAR_CONSUMPTION_QTY",
                "\t\t\t, PLAN_AMT, PLAN_FIXED_AMT, PLAN_VARIABLE_AMT, PLAN_CONSUMPTION_QTY",
                "\t\t\t, PLAN_FIX_CONSUMPTION_QTY, PLAN_VAR_CONSUMPTION_QTY, DATE_DTE_KEY",
                "\t\tFROM [FIN_CCA].[V_FACT_CCA_PLAN_ACTUALS_AAS] ",
                "\t\twhere Part = 'PrevFiscalYear'",
                "\t\t\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\tCRNCY_KEY, CONTROLLING_AREA_KEY, PERIOD_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                  "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                  "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                  "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                  "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, MEASURE_TYPE_KEY, UOM_KEY",
                  "\t\t\t, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY, CONTROLLING_VERSION_KEY, CONTROLLING_PLAN_VERSION_KEY",
                  "\t\t\t, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY",
                  "\t\t\t, COMPANY_KEY, COST_CTR_ELIM_IBV_KEY, PLANT_KEY, PRTNR_OBJ_KEY",
                  "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT, ACTUAL_CONSUMPTION_QTY",
                  "\t\t\t, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VAR_CONSUMPTION_QTY",
                  "\t\t\t, PLAN_AMT, PLAN_FIXED_AMT, PLAN_VARIABLE_AMT, PLAN_CONSUMPTION_QTY",
                  "\t\t\t, PLAN_FIX_CONSUMPTION_QTY, PLAN_VAR_CONSUMPTION_QTY, DATE_DTE_KEY",
                  "\t\tFROM [FIN_CCA].[V_FACT_CCA_PLAN_ACTUALS_AAS] ",
                  "\t\twhere Part = 'PrevFiscalYear'",
                  "\t\t\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear-1",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\tCRNCY_KEY, CONTROLLING_AREA_KEY, PERIOD_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, MEASURE_TYPE_KEY, UOM_KEY",
                "\t\t\t, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY, CONTROLLING_VERSION_KEY, CONTROLLING_PLAN_VERSION_KEY",
                "\t\t\t, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY",
                "\t\t\t, COMPANY_KEY, COST_CTR_ELIM_IBV_KEY, PLANT_KEY, PRTNR_OBJ_KEY",
                "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT, ACTUAL_CONSUMPTION_QTY",
                "\t\t\t, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VAR_CONSUMPTION_QTY",
                "\t\t\t, PLAN_AMT, PLAN_FIXED_AMT, PLAN_VARIABLE_AMT, PLAN_CONSUMPTION_QTY",
                "\t\t\t, PLAN_FIX_CONSUMPTION_QTY, PLAN_VAR_CONSUMPTION_QTY, DATE_DTE_KEY",
                "\t\tFROM [FIN_CCA].[V_FACT_CCA_PLAN_ACTUALS_AAS] ",
                "\t\twhere Part = 'PrevFiscalYear-1'",
                "\t\t\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\tCRNCY_KEY, CONTROLLING_AREA_KEY, PERIOD_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                  "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                  "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                  "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                  "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, MEASURE_TYPE_KEY, UOM_KEY",
                  "\t\t\t, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY, CONTROLLING_VERSION_KEY, CONTROLLING_PLAN_VERSION_KEY",
                  "\t\t\t, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY",
                  "\t\t\t, COMPANY_KEY, COST_CTR_ELIM_IBV_KEY, PLANT_KEY, PRTNR_OBJ_KEY",
                  "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT, ACTUAL_CONSUMPTION_QTY",
                  "\t\t\t, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VAR_CONSUMPTION_QTY",
                  "\t\t\t, PLAN_AMT, PLAN_FIXED_AMT, PLAN_VARIABLE_AMT, PLAN_CONSUMPTION_QTY",
                  "\t\t\t, PLAN_FIX_CONSUMPTION_QTY, PLAN_VAR_CONSUMPTION_QTY, DATE_DTE_KEY",
                  "\t\tFROM [FIN_CCA].[V_FACT_CCA_PLAN_ACTUALS_AAS] ",
                  "\t\twhere Part = 'PrevFiscalYear-1'",
                  "\t\t\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear-2",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\tCRNCY_KEY, CONTROLLING_AREA_KEY, PERIOD_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, MEASURE_TYPE_KEY, UOM_KEY",
                "\t\t\t, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY, CONTROLLING_VERSION_KEY, CONTROLLING_PLAN_VERSION_KEY",
                "\t\t\t, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY",
                "\t\t\t, COMPANY_KEY, COST_CTR_ELIM_IBV_KEY, PLANT_KEY, PRTNR_OBJ_KEY",
                "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT, ACTUAL_CONSUMPTION_QTY",
                "\t\t\t, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VAR_CONSUMPTION_QTY",
                "\t\t\t, PLAN_AMT, PLAN_FIXED_AMT, PLAN_VARIABLE_AMT, PLAN_CONSUMPTION_QTY",
                "\t\t\t, PLAN_FIX_CONSUMPTION_QTY, PLAN_VAR_CONSUMPTION_QTY, DATE_DTE_KEY",
                "\t\tFROM [FIN_CCA].[V_FACT_CCA_PLAN_ACTUALS_AAS] ",
                "\t\twhere Part = 'PrevFiscalYear-2'",
                "\t\t\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\tCRNCY_KEY, CONTROLLING_AREA_KEY, PERIOD_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                  "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                  "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                  "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                  "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, MEASURE_TYPE_KEY, UOM_KEY",
                  "\t\t\t, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY, CONTROLLING_VERSION_KEY, CONTROLLING_PLAN_VERSION_KEY",
                  "\t\t\t, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY",
                  "\t\t\t, COMPANY_KEY, COST_CTR_ELIM_IBV_KEY, PLANT_KEY, PRTNR_OBJ_KEY",
                  "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT, ACTUAL_CONSUMPTION_QTY",
                  "\t\t\t, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VAR_CONSUMPTION_QTY",
                  "\t\t\t, PLAN_AMT, PLAN_FIXED_AMT, PLAN_VARIABLE_AMT, PLAN_CONSUMPTION_QTY",
                  "\t\t\t, PLAN_FIX_CONSUMPTION_QTY, PLAN_VAR_CONSUMPTION_QTY, DATE_DTE_KEY",
                  "\t\tFROM [FIN_CCA].[V_FACT_CCA_PLAN_ACTUALS_AAS] ",
                  "\t\twhere Part = 'PrevFiscalYear-2'",
                  "\t\t\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear-3",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\tCRNCY_KEY, CONTROLLING_AREA_KEY, PERIOD_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, MEASURE_TYPE_KEY, UOM_KEY",
                "\t\t\t, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY, CONTROLLING_VERSION_KEY, CONTROLLING_PLAN_VERSION_KEY",
                "\t\t\t, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY",
                "\t\t\t, COMPANY_KEY, COST_CTR_ELIM_IBV_KEY, PLANT_KEY, PRTNR_OBJ_KEY",
                "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT, ACTUAL_CONSUMPTION_QTY",
                "\t\t\t, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VAR_CONSUMPTION_QTY",
                "\t\t\t, PLAN_AMT, PLAN_FIXED_AMT, PLAN_VARIABLE_AMT, PLAN_CONSUMPTION_QTY",
                "\t\t\t, PLAN_FIX_CONSUMPTION_QTY, PLAN_VAR_CONSUMPTION_QTY, DATE_DTE_KEY",
                "\t\tFROM [FIN_CCA].[V_FACT_CCA_PLAN_ACTUALS_AAS] ",
                "\t\twhere Part = 'PrevFiscalYear-3'",
                "\t\t\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\tCRNCY_KEY, CONTROLLING_AREA_KEY, PERIOD_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                  "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                  "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                  "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                  "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, MEASURE_TYPE_KEY, UOM_KEY",
                  "\t\t\t, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY, CONTROLLING_VERSION_KEY, CONTROLLING_PLAN_VERSION_KEY",
                  "\t\t\t, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY",
                  "\t\t\t, COMPANY_KEY, COST_CTR_ELIM_IBV_KEY, PLANT_KEY, PRTNR_OBJ_KEY",
                  "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT, ACTUAL_CONSUMPTION_QTY",
                  "\t\t\t, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VAR_CONSUMPTION_QTY",
                  "\t\t\t, PLAN_AMT, PLAN_FIXED_AMT, PLAN_VARIABLE_AMT, PLAN_CONSUMPTION_QTY",
                  "\t\t\t, PLAN_FIX_CONSUMPTION_QTY, PLAN_VAR_CONSUMPTION_QTY, DATE_DTE_KEY",
                  "\t\tFROM [FIN_CCA].[V_FACT_CCA_PLAN_ACTUALS_AAS] ",
                  "\t\twhere Part = 'PrevFiscalYear-3'",
                  "\t\t\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Prev Fiscal Period",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\tCRNCY_KEY, CONTROLLING_AREA_KEY, PERIOD_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, MEASURE_TYPE_KEY, UOM_KEY",
                "\t\t\t, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY, CONTROLLING_VERSION_KEY, CONTROLLING_PLAN_VERSION_KEY",
                "\t\t\t, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY",
                "\t\t\t, COMPANY_KEY, COST_CTR_ELIM_IBV_KEY, PLANT_KEY, PRTNR_OBJ_KEY",
                "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT, ACTUAL_CONSUMPTION_QTY",
                "\t\t\t, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VAR_CONSUMPTION_QTY",
                "\t\t\t, PLAN_AMT, PLAN_FIXED_AMT, PLAN_VARIABLE_AMT, PLAN_CONSUMPTION_QTY",
                "\t\t\t, PLAN_FIX_CONSUMPTION_QTY, PLAN_VAR_CONSUMPTION_QTY, DATE_DTE_KEY",
                "\t\tFROM [FIN_CCA].[V_FACT_CCA_PLAN_ACTUALS_AAS] ",
                "\t\twhere Part = 'Prev Fiscal Period'",
                "\t\t\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\tCRNCY_KEY, CONTROLLING_AREA_KEY, PERIOD_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                  "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                  "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                  "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                  "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, MEASURE_TYPE_KEY, UOM_KEY",
                  "\t\t\t, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY, CONTROLLING_VERSION_KEY, CONTROLLING_PLAN_VERSION_KEY",
                  "\t\t\t, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY",
                  "\t\t\t, COMPANY_KEY, COST_CTR_ELIM_IBV_KEY, PLANT_KEY, PRTNR_OBJ_KEY",
                  "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT, ACTUAL_CONSUMPTION_QTY",
                  "\t\t\t, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VAR_CONSUMPTION_QTY",
                  "\t\t\t, PLAN_AMT, PLAN_FIXED_AMT, PLAN_VARIABLE_AMT, PLAN_CONSUMPTION_QTY",
                  "\t\t\t, PLAN_FIX_CONSUMPTION_QTY, PLAN_VAR_CONSUMPTION_QTY, DATE_DTE_KEY",
                  "\t\tFROM [FIN_CCA].[V_FACT_CCA_PLAN_ACTUALS_AAS] ",
                  "\t\twhere Part = 'Prev Fiscal Period'",
                  "\t\t\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Partner Functional Area",
        "description": "DIM_FUNCL_AREA_PARTNER",
        "columns": [
          {
            "name": "FUNCL_AREA_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "FUNCL_AREA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Functional Area Code",
            "dataType": "string",
            "description": [
              "code in SAP that represents a line item on the income statement (such as 1000 for Sales-3rd Party Sales, 2000 for Standard Cost of Sales, 2100 for Inventory Adjustment-Scrap Sales, 5000 for Field Sales, 6005 for Marketing-Commercial, and 7000 for Admin), stored as a nvarchar",
              "",
              "All general ledger accounts in SAP are assigned to a Functional Area, which is then associated with an HFM account."
            ],
            "sourceColumn": "Functional Area Code",
            "encodingHint": "hash"
          },
          {
            "name": "Functional Area Description",
            "dataType": "string",
            "description": [
              "description associated with the code in SAP that represents a line item on the income statement (such as 1000 for Sales-3rd Party Sales, 2000 for Standard Cost of Sales, 2100 for Inventory Adjustment-Scrap Sales, 5000 for Field Sales, 6005 for Marketing-Commercial, and 7000 for Admin), stored as a nvarchar",
              "",
              "All general ledger accounts in SAP are assigned to a Functional Area, which is then associated with an HFM account."
            ],
            "sourceColumn": "Functional Area Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_FUNCL_AREA_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_FUNCL_AREA_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_FUNCL_AREA_BusNm,{\"FUNCL_AREA_KEY\", \"Functional Area Code\", \"Functional Area Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Cost Center IBV",
        "description": "DIM_COST_CTR_IBV",
        "columns": [
          {
            "name": "Cost Center Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Cost Center Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Cost Center Key",
            "encodingHint": "hash"
          },
          {
            "name": "Controlling Area Code",
            "dataType": "string",
            "description": [
              "\"the second level in the Rockwell Automation internal organization hierarchy in SAP (such as RA00, the common controlling area used globally at Rockwell Automation), for which costs and revenues are collected and reported, stored as a string",
              "",
              "The internal organization hierarchy ensures consistent standard financial reporting and has the structure:",
              "1) Operating Concern",
              "2) Controlling Area",
              "3) Company Code",
              "4) Business Area",
              "5) Cost Center\""
            ],
            "isHidden": true,
            "sourceColumn": "Controlling Area Code",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Code",
            "dataType": "string",
            "description": "code in SAP (such as 20030 for FDLDET Detroit) for an organizational unit within a Business Area that represents a defined location in which costs are incurred, stored as a string",
            "sourceColumn": "Cost Center Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Effective To Date",
            "dataType": "dateTime",
            "description": "the date on which the cost center is no longer effective (which may be a past, present, or future date), stored in yyyy-MM-dd format",
            "sourceColumn": "Cost Center Effective To Date",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Effective From Date",
            "dataType": "dateTime",
            "description": "the date on which the cost center is effective (which may be a past, present, or future date), stored in yyyy-MM-dd format",
            "sourceColumn": "Cost Center Effective From Date",
            "encodingHint": "hash"
          },
          {
            "name": "Actual Primary Postings Lock Indicator",
            "dataType": "string",
            "description": [
              "indicator (such as X if locked for posting or blank if it is not) of whether a cost center is locked for posting with direct costs, stored as a string",
              "",
              "If the indicator is active, no primary costs can be posted to the cost center. You may, however, still use the cost center for evaluations such as summarization, etc."
            ],
            "sourceColumn": "Actual Primary Postings Lock Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Planned Primary Costs Lock Indicator",
            "dataType": "string",
            "description": [
              "Indicator (such as X if locked for planning with direct costs or blank if not) defining whether a cost center is locked for planning with direct costs, stored as a string",
              "",
              "If the indicator is active, you cannot plan any primary costs on the affected cost center at this time."
            ],
            "sourceColumn": "Planned Primary Costs Lock Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Company Code",
            "dataType": "string",
            "description": "code in SAP (four digits stored as text, for example, US = 1000, Canada = 2000, Germany = 4016, France = 4013, Netherlands = 4100) used to organize accounting information related to business transactions, representing the smallest organizational unit for which a complete self-contained set of accounts can be drawn up for purposes of external reporting, financial statements, and profit and loss statements, stored as a string",
            "sourceColumn": "Company Code",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Category Code",
            "dataType": "string",
            "description": [
              "\"classification defined by Rockwell Automation (see examples below), which groups similar cost centers, stored as a string",
              "",
              "A - RA Administration",
              "B - RA Marketing",
              "D - RA Production\""
            ],
            "sourceColumn": "Cost Center Category Code",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Currency Code",
            "dataType": "string",
            "description": [
              "\"code for the currency used for the transactions within the given cost center (such as EUR or USD) in SAP, stored as a string",
              "",
              "All cost center planning is done in local currency.\""
            ],
            "sourceColumn": "Cost Center Currency Code"
          },
          {
            "name": "Cost Sheet Description",
            "dataType": "string",
            "description": [
              "\"description that stores cost sheet information pertaining to costs associated with a product or production job, stored as a string",
              "",
              "The cost sheet combines all components of the overhead costing and determines the rules for calculating the values to be posted.\""
            ],
            "sourceColumn": "Cost Sheet Description",
            "encodingHint": "hash"
          },
          {
            "name": "Tax Jurisdiction Code",
            "dataType": "string",
            "description": [
              "\"code that identifies the tax jurisdiction associated with the given cost center, stored as a string",
              "",
              "There are four jurisdiction levels for calculation procedure TAXUSJ and six jurisdiction levels for calculation procedure TAXUSX. Each jurisdiction level will have its own jurisdiction code (such as PA0000000 for the state of Pennsylvania or PA0010100 for the city of Pittsburgh)\""
            ],
            "sourceColumn": "Tax Jurisdiction Code",
            "encodingHint": "hash"
          },
          {
            "name": "Profit Center",
            "dataType": "string",
            "description": [
              "\"code (see example below) that identifies the organizational unit used for both business unit and product line reporting, stored as a string",
              "",
              "For example:  ",
              "PB1USOP001",
              "where:",
              "PB = Push Buttons (sub-business unit)",
              "1 = North America (region)",
              "US = United States (country)",
              "OP = Operator Interface (product category)",
              "001 = NEMA Pushbutton 30mm (product line)\""
            ],
            "isHidden": true,
            "sourceColumn": "Profit Center",
            "encodingHint": "hash"
          },
          {
            "name": "Plant Code",
            "dataType": "string",
            "description": "code in SAP for the physical location (4 digits stored as text, such as 1020 for Twinsburg, 1090 for the Champaign Distribution Center, 4000 for the Central European Distribution Center, and 4080 for the EMEA main service hub) at which material is produced and stored as inventory, or goods and services are provided, stored as a string",
            "isHidden": true,
            "sourceColumn": "Plant Code",
            "encodingHint": "hash"
          },
          {
            "name": "Actual Secondary Costs Lock Indicator",
            "dataType": "string",
            "description": [
              "\"indicator (such as X if a secondary cost can be posted or blank if it cannot) of whether a secondary cost can be posted in the given cost center; which if active, it is not possible to post secondary costs to the cost center, stored as a string",
              "",
              "This indicator normally only locks the cost center for actual debits of secondary costs. However, actual credits to the cost center are a possibility as well.\""
            ],
            "sourceColumn": "Actual Secondary Costs Lock Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Actual Revenue Postings Lock Indicator",
            "dataType": "string",
            "description": [
              "\"indicator (such as X if locked for the posting of revenue or blank if not) of whether a given cost center is locked for the posting of revenue, stored as a string",
              "",
              "If the indicator is active, you cannot post revenues to the affected cost center.",
              "",
              "If the indicator is inactive, the revenues are written to the cost center as statistics only.\""
            ],
            "sourceColumn": "Actual Revenue Postings Lock Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Commitment Update Lock Indicator",
            "dataType": "string",
            "description": [
              "\"indicator (such as X if the commitment can be update or blank if not) of whether a given commitment associated with the cost center can be updated or not, stored as a string",
              "",
              "If the Commitment Update Lock Indicator is active, no commitments can be updated to the affected cost center.\""
            ],
            "sourceColumn": "Commitment Update Lock Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Planned Secondary Costs Lock Indicator",
            "dataType": "string",
            "description": [
              "\"indicator (such as X if a secondary cost can be posted or blank if not) of whether a secondary cost can be posted in the given cost center; which if active, it is not possible to post secondary costs to the cost center, stored as a string",
              "",
              "This indicator normally only locks the cost center for actual debits of secondary costs. However, actual credits to the cost center are a possibility as well.\""
            ],
            "sourceColumn": "Planned Secondary Costs Lock Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Allocation Methods Allowed Indicator",
            "dataType": "string",
            "description": [
              "\"indicator that determines what settlement options are permitted for a given cost center, stored as a string",
              "",
              "This indicator is not used presently.\""
            ],
            "sourceColumn": "Allocation Methods Allowed Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Record Consumption Quantity Indicator",
            "dataType": "string",
            "description": [
              "\"indicator (such as X if the system issues a message or blank if not) that defines whether the system issues a message if no quantity or quantity unit is specified for commitment or actual postings, stored as a string",
              "",
              "The indicator has no effect on planning and allows the consumption quantities to be planned at a later date.",
              "The indicator has no effect on quantity updates or on the identification of quantities in reports.",
              "You must set the indicator if you want to cost using an overhead that is dependent on the unit of measure posted with this cost element.",
              "The indicator is an active default setting for the combination of cost center and cost element if in the master data for the cost center and cost element, it is defined that quantities should be managed.\""
            ],
            "sourceColumn": "Record Consumption Quantity Indicator",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Department Name",
            "dataType": "string",
            "description": [
              "name (such as Research Department, Marketing, etc.) of the department associated with the given cost center, stored as a string",
              ""
            ],
            "sourceColumn": "Cost Center Department Name",
            "encodingHint": "hash"
          },
          {
            "name": "CO-CCA Overhead Code",
            "dataType": "string",
            "description": "code that specifies which overhead is applied to the given reference object (such as a material), which forms a link between overhead conditions and the following: a material master record or a sales order item, stored as a string",
            "sourceColumn": "CO-CCA Overhead Code",
            "encodingHint": "hash"
          },
          {
            "name": "Country Code",
            "dataType": "string",
            "description": "code for the country (such as CA for Canada, PE for Peru, TH for Thailand, and US for the United States) in SAP, stored as a two-character string",
            "sourceColumn": "Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Name 1",
            "dataType": "string",
            "description": "name 1 associated with the Business Partner Identifier in SAP for the legal entity name of the company either created in the customer master or imported through EDI (such as a distributor or an end customer), which is associated with the given cost center, stored as a string",
            "sourceColumn": "Business Partner Name 1",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Name 2",
            "dataType": "string",
            "description": "name 2 associated with the Business Partner Identifier in SAP for the legal entity name of the company either created in the customer master or imported through EDI (such as a distributor or an end customer), which is associated with the given cost center, stored as a string",
            "sourceColumn": "Business Partner Name 2",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Name 3",
            "dataType": "string",
            "description": "name 3 associated with the Business Partner Identifier in SAP for the legal entity name of the company either created in the customer master or imported through EDI (such as a distributor or an end customer), which is associated with the given cost center, stored as a string",
            "sourceColumn": "Business Partner Name 3",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Name 4",
            "dataType": "string",
            "description": "name 4 associated with the Business Partner Identifier in SAP for the legal entity name of the company either created in the customer master or imported through EDI (such as a distributor or an end customer), which is associated with the given cost center, stored as a string",
            "sourceColumn": "Business Partner Name 4",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner City Name",
            "dataType": "string",
            "description": "name of the city for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "Business Partner City Name",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner District Name",
            "dataType": "string",
            "description": "name of the district for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "Business Partner District Name",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Street Address",
            "dataType": "string",
            "description": "free-form text for the address (usually a building number and street) of the location of the given Business Partner, stored as a string",
            "sourceColumn": "Business Partner Street Address",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner PO Box",
            "dataType": "string",
            "description": "number of the post office box for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "Business Partner PO Box",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner Postal Code",
            "dataType": "string",
            "description": "postal code associated with the address for the given Business Partner in SAP, stored as a string",
            "sourceColumn": "Business Partner Postal Code",
            "encodingHint": "hash"
          },
          {
            "name": "Business Partner PO Box Postal Code",
            "dataType": "string",
            "description": [
              "\"postal code of the post office (\"\"PO\"\") box for the given  Business Partner in SAP, stored as a string",
              "",
              "The Business Partner PO Box Postal Code is used for countries where the postal code (such as the ZIP code in the United States) that is used to send mail to the company P.O. Box is different than the one that is used to send letters to the company address.",
              "",
              "Also, some large companies have their own postal code and no post office box.\""
            ],
            "sourceColumn": "Business Partner PO Box Postal Code",
            "encodingHint": "hash"
          },
          {
            "name": "Region (State Province County) Code",
            "dataType": "string",
            "sourceColumn": "Region (State Province County) Code",
            "encodingHint": "hash"
          },
          {
            "name": "First telephone number",
            "dataType": "string",
            "description": "free-form text for the primary telephone number (such as +1 414 867 5309) of the primary contact for the Business Partner, stored as a string",
            "sourceColumn": "First telephone number",
            "encodingHint": "hash"
          },
          {
            "name": "Second telephone number",
            "dataType": "string",
            "description": "free-form text for the secondary telephone number (such as +1 414 867 5309) of the primary contact for the Business Partner, stored as a string",
            "sourceColumn": "Second telephone number",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Hierarchy Code",
            "dataType": "string",
            "description": "the Rockwell Automation hierarchy in SAP (RA for Rockwell Automation) used to organize cost centers within RA00 (the common Controlling Area used globally at Rockwell Automation), stored as a string",
            "sourceColumn": "Cost Center Hierarchy Code",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Statistical Indicator ",
            "dataType": "string",
            "description": "indicator used to classify the given Cost Center for statistical reporting (such as X for yes or blank if not), stored as a string",
            "sourceColumn": "Cost Center Statistical Indicator ",
            "encodingHint": "hash"
          },
          {
            "name": "Object number",
            "dataType": "string",
            "description": "identifier that uniquely identifies an object (order, project, cost center, etc.) within a client, which is used in tables for status administration, cost collection, etc., stored as a string",
            "sourceColumn": "Object number",
            "encodingHint": "hash"
          },
          {
            "name": "Functional Area Code",
            "dataType": "string",
            "description": [
              "\"code in SAP that represents a line item on the income statement (such as 1000 for Sales-3rd Party Sales, 2000 for Standard Cost of Sales, 2100 for Inventory Adjustment-Scrap Sales, 5000 for Field Sales, 6005 for Marketing-Commercial, and 7000 for Admin), stored as a string",
              "",
              "All general ledger accounts in SAP are assigned to a Functional Area, which is then associated with an HFM account.\""
            ],
            "isHidden": true,
            "sourceColumn": "Functional Area Code",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Name",
            "dataType": "string",
            "description": "name associated with the code in SAP (such as SSC DR Photo for code 2003 or SSC DR Planning for code 2006) for an organizational unit within a Business Area that represents a defined location in which costs are incurred, stored as a string",
            "sourceColumn": "Cost Center Name",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Description",
            "dataType": "string",
            "description": "description associated with the code in SAP for an organizational unit within a Business Area that represents a defined location in which costs are incurred, stored as a string",
            "sourceColumn": "Cost Center Description",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center Short Description",
            "dataType": "string",
            "description": "short description associated with the code in SAP for an organizational unit within a Business Area that represents a defined location in which costs are incurred, stored as a string",
            "sourceColumn": "Cost Center Short Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_COST_CTR_IBV_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_COST_CTR_IBV_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_COST_CTR_IBV_BusNm,{\"Cost Center Key\", \"Controlling Area Code\", \"Cost Center Code\", \"Cost Center Effective To Date\", \"Cost Center Effective From Date\", \"Actual Primary Postings Lock Indicator\", \"Planned Primary Costs Lock Indicator\", \"Company Code\", \"Cost Center Category Code\", \"Cost Center Currency Code\", \"Cost Sheet Description\", \"Tax Jurisdiction Code\", \"Profit Center\", \"Plant Code\", \"Actual Secondary Costs Lock Indicator\", \"Actual Revenue Postings Lock Indicator\", \"Commitment Update Lock Indicator\", \"Planned Secondary Costs Lock Indicator\", \"Allocation Methods Allowed Indicator\", \"Record Consumption Quantity Indicator\", \"Cost Center Department Name\", \"CO-CCA Overhead Code\", \"Country Code\", \"Business Partner Name 1\", \"Business Partner Name 2\", \"Business Partner Name 3\", \"Business Partner Name 4\", \"Business Partner City Name\", \"Business Partner District Name\", \"Business Partner Street Address\", \"Business Partner PO Box\", \"Business Partner Postal Code\", \"Business Partner PO Box Postal Code\", \"Region (State Province County) Code\", \"First telephone number\", \"Second telephone number\", \"Cost Center Hierarchy Code\", \"Cost Center Statistical Indicator \", \"Object number\", \"Functional Area Code\", \"Cost Center Name\", \"Cost Center Description\", \"Cost Center Short Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Controlling Version Plan",
        "description": "DIM_CONTROLLING_VERSION_PLANControlling Version Plan",
        "columns": [
          {
            "name": "Controlling Version Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Controlling Version Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Controlling Version Key",
            "encodingHint": "hash"
          },
          {
            "name": "Plan Version Code",
            "dataType": "string",
            "description": "code (such as 0 for Plan/actual version, 110 for PS: Forecast Version, or P02 for Plan Version 2, etc.) that identifies the current version the given controlling value type in SAP, stored as a string",
            "sourceColumn": "Plan Version Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Plan Version Name",
            "dataType": "string",
            "description": "name associated with the code (such as Plan/actual version for code 0, PS: Forecast Version for code 110, or Plan Version 2 for code P02, etc.) that identifies the current version the given controlling value type in SAP, stored as a string",
            "sourceColumn": "Plan Version Name",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CONTROLLING_VERSION_PLAN_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CONTROLLING_VERSION_PLAN_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_CONTROLLING_VERSION_PLAN_BusNm,{\"Controlling Version Key\", \"Plan Version Code\", \"Plan Version Name\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Profit Center Hierarchy Region",
        "description": "GLBL.V_DIM_PRFT_CTR_HRCHY_REG_BUSNM",
        "columns": [
          {
            "name": "PRFT_CTR_HRCHY_REGION_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "PRFT_CTR_HRCHY_REGION_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SAP Client Number",
            "dataType": "string",
            "description": "number that identifies the production environment of SAP deployed at Rockwell Automation, stored as a nvarchar",
            "isHidden": true,
            "sourceColumn": "SAP Client Number",
            "encodingHint": "hash"
          },
          {
            "name": "Level 1 Code",
            "dataType": "string",
            "description": "code associated with level 1 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 1 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 2 Code",
            "dataType": "string",
            "description": "code associated with level 2 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 2 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 2 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 2 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 2 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 3 Code",
            "dataType": "string",
            "description": "code associated with level 3 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 3 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 3 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 3 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 3 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 4 Code",
            "dataType": "string",
            "description": "code associated with level 4 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 4 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 4 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 4 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 4 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 5 Code",
            "dataType": "string",
            "description": "code associated with level 5 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 5 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 5 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 5 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 5 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 6 Code",
            "dataType": "string",
            "description": "code associated with level 6 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 6 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 6 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 6 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 6 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 7 Code",
            "dataType": "string",
            "description": "code associated with level 7 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 7 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 7 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 7 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 7 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 8 Code",
            "dataType": "string",
            "description": "code associated with level 8 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 8 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 8 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 8 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 8 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 9 Code",
            "dataType": "string",
            "description": "code associated with level 9 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 9 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 9 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 9 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 9 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 10 Code",
            "dataType": "string",
            "description": "code associated with level 10 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 10 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 10 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 10 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 10 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Profit Center",
            "dataType": "string",
            "description": [
              "code (see example below) that identifies the organizational unit used for both business unit and product line reporting, stored as a nvarchar",
              "",
              "For example:  ",
              "PB1USOP001",
              "where:",
              "PB = Push Buttons (sub-business unit)",
              "1 = North America (region)",
              "US = United States (country)",
              "OP = Operator Interface (product category)",
              "001 = NEMA Pushbutton 30mm (product line)"
            ],
            "sourceColumn": "Profit Center",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PRFT_CTR_HRCHY_REGION_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_PRFT_CTR_HRCHY_REGION_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_PRFT_CTR_HRCHY_REGION_BusNm,{\"PRFT_CTR_HRCHY_REGION_KEY\", \"SAP Client Number\", \"Level 1 Code\", \"Level 2 Code\", \"Level 2 Description\", \"Level 3 Code\", \"Level 3 Description\", \"Level 4 Code\", \"Level 4 Description\", \"Level 5 Code\", \"Level 5 Description\", \"Level 6 Code\", \"Level 6 Description\", \"Level 7 Code\", \"Level 7 Description\", \"Level 8 Code\", \"Level 8 Description\", \"Level 9 Code\", \"Level 9 Description\", \"Level 10 Code\", \"Level 10 Description\", \"Profit Center\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Profit Center Hierarchy Region",
            "levels": [
              {
                "name": "Level 2 Description",
                "ordinal": 0,
                "column": "Level 2 Description"
              },
              {
                "name": "Level 3 Description",
                "ordinal": 1,
                "column": "Level 3 Description"
              },
              {
                "name": "Level 4 Description",
                "ordinal": 2,
                "column": "Level 4 Description"
              },
              {
                "name": "Level 5 Description",
                "ordinal": 3,
                "column": "Level 5 Description"
              },
              {
                "name": "Level 6 Description",
                "ordinal": 4,
                "column": "Level 6 Description"
              },
              {
                "name": "Level 7 Description",
                "ordinal": 5,
                "column": "Level 7 Description"
              },
              {
                "name": "Level 8 Code",
                "ordinal": 6,
                "column": "Level 8 Code"
              },
              {
                "name": "Level 9 Code",
                "ordinal": 7,
                "column": "Level 9 Code"
              },
              {
                "name": "Level 10 Code",
                "ordinal": 8,
                "column": "Level 10 Code"
              }
            ]
          }
        ]
      },
      {
        "name": "Profit Center Hierarchy Tax",
        "description": "GLBL.V_DIM_PRFT_CTR_HRCHY_TAX_BUSNM",
        "columns": [
          {
            "name": "PRFT_CTR_HRCHY_TAX_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "PRFT_CTR_HRCHY_TAX_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SAP Client Number",
            "dataType": "string",
            "description": "number that identifies the production environment of SAP deployed at Rockwell Automation, stored as a nvarchar",
            "isHidden": true,
            "sourceColumn": "SAP Client Number",
            "encodingHint": "hash"
          },
          {
            "name": "Level 1 Code",
            "dataType": "string",
            "description": "code associated with level 1 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 1 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 2 Code",
            "dataType": "string",
            "description": "code associated with level 2 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 2 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 2 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 2 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 2 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 3 Code",
            "dataType": "string",
            "description": "code associated with level 3 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 3 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 3 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 3 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 3 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 4 Code",
            "dataType": "string",
            "description": "code associated with level 4 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 4 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 4 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 4 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 4 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 5 Code",
            "dataType": "string",
            "description": "code associated with level 5 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 5 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 5 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 5 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 5 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 6 Code",
            "dataType": "string",
            "description": "code associated with level 6 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 6 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 6 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 6 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 6 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 7 Code",
            "dataType": "string",
            "description": "code associated with level 7 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 7 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 7 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 7 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 7 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 8 Code",
            "dataType": "string",
            "description": "code associated with level 8 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 8 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 8 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 8 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 8 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 9 Code",
            "dataType": "string",
            "description": "code associated with level 9 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 9 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 9 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 9 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 9 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 10 Code",
            "dataType": "string",
            "description": "code associated with level 10 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 10 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 10 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 10 of the profit center hierarchy, stored as a nvarchar",
            "sourceColumn": "Level 10 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Profit Center",
            "dataType": "string",
            "description": [
              "code (see example below) that identifies the organizational unit used for both business unit and product line reporting, stored as a nvarchar",
              "",
              "For example:  ",
              "PB1USOP001",
              "where:",
              "PB = Push Buttons (sub-business unit)",
              "1 = North America (region)",
              "US = United States (country)",
              "OP = Operator Interface (product category)",
              "001 = NEMA Pushbutton 30mm (product line)"
            ],
            "sourceColumn": "Profit Center",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PRFT_CTR_HRCHY_TAX_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_PRFT_CTR_HRCHY_TAX_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_PRFT_CTR_HRCHY_TAX_BusNm,{\"PRFT_CTR_HRCHY_TAX_KEY\", \"SAP Client Number\", \"Level 1 Code\", \"Level 2 Code\", \"Level 2 Description\", \"Level 3 Code\", \"Level 3 Description\", \"Level 4 Code\", \"Level 4 Description\", \"Level 5 Code\", \"Level 5 Description\", \"Level 6 Code\", \"Level 6 Description\", \"Level 7 Code\", \"Level 7 Description\", \"Level 8 Code\", \"Level 8 Description\", \"Level 9 Code\", \"Level 9 Description\", \"Level 10 Code\", \"Level 10 Description\", \"Profit Center\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Profit Center Hierarchy Tax",
            "levels": [
              {
                "name": "Level 2 Description",
                "ordinal": 0,
                "column": "Level 2 Description"
              },
              {
                "name": "Level 3 Description",
                "ordinal": 1,
                "column": "Level 3 Description"
              },
              {
                "name": "Level 4 Description",
                "ordinal": 2,
                "column": "Level 4 Description"
              },
              {
                "name": "Level 5 Description",
                "ordinal": 3,
                "column": "Level 5 Description"
              },
              {
                "name": "Level 6 Description",
                "ordinal": 4,
                "column": "Level 6 Description"
              },
              {
                "name": "Level 7 Description",
                "ordinal": 5,
                "column": "Level 7 Description"
              },
              {
                "name": "Level 8 Code",
                "ordinal": 6,
                "column": "Level 8 Code"
              },
              {
                "name": "Level 9 Code",
                "ordinal": 7,
                "column": "Level 9 Code"
              },
              {
                "name": "Level 10 Code",
                "ordinal": 8,
                "column": "Level 10 Code"
              }
            ]
          }
        ]
      },
      {
        "name": "Cost Center Hierarchy Standard",
        "description": "GLBL.V_DIM_COST_CTR_HIERARCHY_BUSNM",
        "columns": [
          {
            "name": "COST_CTR_HRCHY_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the Cost Center Hierarchy Dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "COST_CTR_HRCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SAP Client Number",
            "dataType": "string",
            "description": "number that identifies the production environment of SAP deployed at Rockwell Automation, stored as a string",
            "isHidden": true,
            "sourceColumn": "SAP Client Number",
            "encodingHint": "hash"
          },
          {
            "name": "Level 1 Code",
            "dataType": "string",
            "description": "code associated with level 1 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 1 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 2 Code",
            "dataType": "string",
            "description": "code associated with level 2 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 2 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 2 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 2 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 2 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 3 Code",
            "dataType": "string",
            "description": "code associated with level 3 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 3 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 3 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 3 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 3 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 4 Code",
            "dataType": "string",
            "description": "code associated with level 4 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 4 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 4 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 4 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 4 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 5 Code",
            "dataType": "string",
            "description": "code associated with level 5 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 5 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 5 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 5 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 5 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 6 Code",
            "dataType": "string",
            "description": "code associated with level 6 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 6 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 6 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 6 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 6 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 7 Code",
            "dataType": "string",
            "description": "code associated with level 7 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 7 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 7 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 7 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 7 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 8 Code",
            "dataType": "string",
            "description": "code associated with level 8 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 8 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 8 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 8 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 8 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 9 Code",
            "dataType": "string",
            "description": "code associated with level 9 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 9 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 9 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 9 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 9 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 10 Code",
            "dataType": "string",
            "description": "code associated with level 10 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 10 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 10 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 10 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 10 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center",
            "dataType": "string",
            "description": "code in SAP (such as 20030 for FDLDET Detroit) for an organizational unit within a Business Area that represents a defined location in which costs are incurred, stored as a string",
            "sourceColumn": "Cost Center",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_COST_CTR_HIERARCHY_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_COST_CTR_HIERARCHY_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_COST_CTR_HIERARCHY_BusNm,{\"COST_CTR_HRCHY_KEY\", \"SAP Client Number\", \"Level 1 Code\", \"Level 2 Code\", \"Level 2 Description\", \"Level 3 Code\", \"Level 3 Description\", \"Level 4 Code\", \"Level 4 Description\", \"Level 5 Code\", \"Level 5 Description\", \"Level 6 Code\", \"Level 6 Description\", \"Level 7 Code\", \"Level 7 Description\", \"Level 8 Code\", \"Level 8 Description\", \"Level 9 Code\", \"Level 9 Description\", \"Level 10 Code\", \"Level 10 Description\", \"Cost Center\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Cost Center Hierarchy",
            "levels": [
              {
                "name": "Level 2 Description",
                "ordinal": 0,
                "column": "Level 2 Description"
              },
              {
                "name": "Level 3 Description",
                "ordinal": 1,
                "column": "Level 3 Description"
              },
              {
                "name": "Level 4 Description",
                "ordinal": 2,
                "column": "Level 4 Description"
              },
              {
                "name": "Level 5 Description",
                "ordinal": 3,
                "column": "Level 5 Description"
              },
              {
                "name": "Level 6 Description",
                "ordinal": 4,
                "column": "Level 6 Description"
              },
              {
                "name": "Level 7 Description",
                "ordinal": 5,
                "column": "Level 7 Description"
              },
              {
                "name": "Level 8 Code",
                "ordinal": 6,
                "column": "Level 8 Code"
              },
              {
                "name": "Level 9 Code",
                "ordinal": 7,
                "column": "Level 9 Code"
              },
              {
                "name": "Level 10 Code",
                "ordinal": 8,
                "column": "Level 10 Code"
              }
            ]
          }
        ]
      },
      {
        "name": "Cost Center Hierarchy Region",
        "description": "GLBL.V_DIM_COST_CTR_HIERARCHY_REG_BUSNM",
        "columns": [
          {
            "name": "COST_CTR_HRCHY_KEY_REGION",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "COST_CTR_HRCHY_KEY_REGION",
            "encodingHint": "hash"
          },
          {
            "name": "SAP Client Number",
            "dataType": "string",
            "description": "number that identifies the production environment of SAP deployed at Rockwell Automation, stored as a string",
            "isHidden": true,
            "sourceColumn": "SAP Client Number",
            "encodingHint": "hash"
          },
          {
            "name": "Level 1 Code",
            "dataType": "string",
            "description": "code associated with level 1 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 1 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 2 Code",
            "dataType": "string",
            "description": "code associated with level 2 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 2 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 2 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 2 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 2 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 3 Code",
            "dataType": "string",
            "description": "code associated with level 3 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 3 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 3 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 3 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 3 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 4 Code",
            "dataType": "string",
            "description": "code associated with level 4 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 4 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 4 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 4 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 4 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 5 Code",
            "dataType": "string",
            "description": "code associated with level 5 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 5 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 5 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 5 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 5 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 6 Code",
            "dataType": "string",
            "description": "code associated with level 6 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 6 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 6 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 6 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 6 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 7 Code",
            "dataType": "string",
            "description": "code associated with level 7 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 7 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 7 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 7 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 7 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 8 Code",
            "dataType": "string",
            "description": "code associated with level 8 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 8 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 8 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 8 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 8 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 9 Code",
            "dataType": "string",
            "description": "code associated with level 9 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 9 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 9 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 9 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 9 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 10 Code",
            "dataType": "string",
            "description": "code associated with level 10 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 10 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 10 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 10 of the cost center hierarchy, stored as a string",
            "sourceColumn": "Level 10 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Center",
            "dataType": "string",
            "description": "code in SAP (such as 20030 for FDLDET Detroit) for an organizational unit within a Business Area that represents a defined location in which costs are incurred, stored as a string",
            "sourceColumn": "Cost Center",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_COST_CTR_HIERARCHY_REGION_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_COST_CTR_HIERARCHY_REGION_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_COST_CTR_HIERARCHY_REGION_BusNm,{\"COST_CTR_HRCHY_KEY_REGION\", \"SAP Client Number\", \"Level 1 Code\", \"Level 2 Code\", \"Level 2 Description\", \"Level 3 Code\", \"Level 3 Description\", \"Level 4 Code\", \"Level 4 Description\", \"Level 5 Code\", \"Level 5 Description\", \"Level 6 Code\", \"Level 6 Description\", \"Level 7 Code\", \"Level 7 Description\", \"Level 8 Code\", \"Level 8 Description\", \"Level 9 Code\", \"Level 9 Description\", \"Level 10 Code\", \"Level 10 Description\", \"Cost Center\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Cost Center Hierarchy Region",
            "levels": [
              {
                "name": "Level 2 Description",
                "ordinal": 0,
                "column": "Level 2 Description"
              },
              {
                "name": "Level 3 Description",
                "ordinal": 1,
                "column": "Level 3 Description"
              },
              {
                "name": "Level 4 Description",
                "ordinal": 2,
                "column": "Level 4 Description"
              },
              {
                "name": "Level 5 Description",
                "ordinal": 3,
                "column": "Level 5 Description"
              },
              {
                "name": "Level 6 Description",
                "ordinal": 4,
                "column": "Level 6 Description"
              },
              {
                "name": "Level 7 Description",
                "ordinal": 5,
                "column": "Level 7 Description"
              },
              {
                "name": "Level 8 Code",
                "ordinal": 6,
                "column": "Level 8 Code"
              },
              {
                "name": "Level 9 Code",
                "ordinal": 7,
                "column": "Level 9 Code"
              },
              {
                "name": "Level 10 Code",
                "ordinal": 8,
                "column": "Level 10 Code"
              }
            ]
          }
        ]
      },
      {
        "name": "Cost Element Hierarchy Standard",
        "description": "GLBL.V_DIM_COST_ELEMENT_HIERARCHY_BUSNM",
        "columns": [
          {
            "name": "COST_ELEMNT_HRCHY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "COST_ELEMNT_HRCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SAP Client Number",
            "dataType": "string",
            "description": "number that identifies the production environment of sap deployed at Rockwell Automation, stored as a string",
            "isHidden": true,
            "sourceColumn": "SAP Client Number",
            "encodingHint": "hash"
          },
          {
            "name": "Level 1 Code",
            "dataType": "string",
            "description": "code associated with level 1 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 1 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 2 Code",
            "dataType": "string",
            "description": "code associated with level 2 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 2 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 2 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 2 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 2 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 3 Code",
            "dataType": "string",
            "description": "code associated with level 3 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 3 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 3 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 3 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 3 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 4 Code",
            "dataType": "string",
            "description": "code associated with level 4 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 4 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 4 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 4 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 4 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 5 Code",
            "dataType": "string",
            "description": "code associated with level 5 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 5 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 5 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 5 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 5 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 6 Code",
            "dataType": "string",
            "description": "code associated with level 6 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 6 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 6 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 6 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 6 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 7 Code",
            "dataType": "string",
            "description": "code associated with level 7 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 7 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 7 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 7 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 7 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 8 Code",
            "dataType": "string",
            "description": "code associated with level 8 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 8 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 8 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 8 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 8 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 9 Code",
            "dataType": "string",
            "description": "code associated with level 9 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 9 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 9 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 9 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 9 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Level 10 Code",
            "dataType": "string",
            "description": "code associated with level 10 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 10 Code",
            "encodingHint": "hash"
          },
          {
            "name": "Level 10 Description",
            "dataType": "string",
            "description": "description associated with the code listed in level 10 of the cost element hierarchy, stored as a string",
            "sourceColumn": "Level 10 Description",
            "encodingHint": "hash"
          },
          {
            "name": "Cost Element",
            "dataType": "string",
            "description": [
              "\"category of an activity that incurs costs (see examples below), used in activity based costing (which states that products consume activities and activities consume resources), stored as a string",
              "",
              "543000 sales - intercompany",
              "700001 operating expenses - salary, wages, and benefits",
              "700002 operating expenses - commission, bonus, and recognition",
              "700003 operating expenses - recruiting and relocation",
              "762100 travel",
              "763200 training",
              "",
              "A primary Cost Element is an account used for operating expenses charged to a cost object (cost center, I/O or project WBS element) and corresponds with RCOA (7XXXXX);  a secondary Cost Element is an account used exclusively to allocate costs between cost objects for management reporting purposes and does not exist in RCOA (9XXXXX).\""
            ],
            "sourceColumn": "Cost Element",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_COST_ELEMENT_HIERARCHY_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_COST_ELEMENT_HIERARCHY_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_COST_ELEMENT_HIERARCHY_BusNm,{\"COST_ELEMNT_HRCHY_KEY\", \"SAP Client Number\", \"Level 1 Code\", \"Level 2 Code\", \"Level 2 Description\", \"Level 3 Code\", \"Level 3 Description\", \"Level 4 Code\", \"Level 4 Description\", \"Level 5 Code\", \"Level 5 Description\", \"Level 6 Code\", \"Level 6 Description\", \"Level 7 Code\", \"Level 7 Description\", \"Level 8 Code\", \"Level 8 Description\", \"Level 9 Code\", \"Level 9 Description\", \"Level 10 Code\", \"Level 10 Description\", \"Cost Element\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Cost Element Hierarchy",
            "levels": [
              {
                "name": "Level 2 Description",
                "ordinal": 0,
                "column": "Level 2 Description"
              },
              {
                "name": "Level 3 Description",
                "ordinal": 1,
                "column": "Level 3 Description"
              },
              {
                "name": "Level 4 Description",
                "ordinal": 2,
                "column": "Level 4 Description"
              },
              {
                "name": "Level 5 Description",
                "ordinal": 3,
                "column": "Level 5 Description"
              },
              {
                "name": "Level 6 Description",
                "ordinal": 4,
                "column": "Level 6 Description"
              },
              {
                "name": "Level 7 Description",
                "ordinal": 5,
                "column": "Level 7 Description"
              },
              {
                "name": "Level 8 Code",
                "ordinal": 6,
                "column": "Level 8 Code"
              },
              {
                "name": "Level 9 Code",
                "ordinal": 7,
                "column": "Level 9 Code"
              },
              {
                "name": "Level 10 Code",
                "ordinal": 8,
                "column": "Level 10 Code"
              }
            ]
          }
        ]
      },
      {
        "name": "FACT_CCA_ACTUALS",
        "isHidden": true,
        "columns": [
          {
            "name": "PERIOD_KEY",
            "dataType": "int64",
            "sourceColumn": "PERIOD_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CONTROLLING_AREA_KEY",
            "dataType": "int64",
            "sourceColumn": "CONTROLLING_AREA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COST_CTR_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_CTR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRFT_CTR_KEY",
            "dataType": "int64",
            "sourceColumn": "PRFT_CTR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRFT_CTR_HRCHY_KEY",
            "dataType": "int64",
            "sourceColumn": "PRFT_CTR_HRCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRFT_CTR_HRCHY_TAX_KEY",
            "dataType": "int64",
            "sourceColumn": "PRFT_CTR_HRCHY_TAX_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRFT_CTR_HRCHY_REGION_KEY",
            "dataType": "int64",
            "sourceColumn": "PRFT_CTR_HRCHY_REGION_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COST_CTR_HIERARCHY_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_CTR_HIERARCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COST_CTR_HIERARCHY_REGION_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_CTR_HIERARCHY_REGION_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COST_ELEMENT_HIERARCHY_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_ELEMENT_HIERARCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COST_ELEMENT_COA_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_ELEMENT_COA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COST_ELEMENT_CONTROLLING_AREA_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_ELEMENT_CONTROLLING_AREA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
            "dataType": "int64",
            "sourceColumn": "CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CONTROLLING_VALUE_TYPE_KEY",
            "dataType": "int64",
            "sourceColumn": "CONTROLLING_VALUE_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CRNCY_TYPE_KEY",
            "dataType": "int64",
            "sourceColumn": "CRNCY_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CRNCY_KEY",
            "dataType": "int64",
            "sourceColumn": "CRNCY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CUST_KEY",
            "dataType": "int64",
            "sourceColumn": "CUST_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MEASURE_TYPE_KEY",
            "dataType": "int64",
            "sourceColumn": "MEASURE_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "UOM_KEY",
            "dataType": "int64",
            "sourceColumn": "UOM_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "DETAIL_VALUE_TYPE_KEY",
            "dataType": "int64",
            "sourceColumn": "DETAIL_VALUE_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "STATISTICS_KEY",
            "dataType": "int64",
            "sourceColumn": "STATISTICS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CONTROLLING_VERSION_KEY",
            "dataType": "int64",
            "sourceColumn": "CONTROLLING_VERSION_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "VALUATION_VIEW_KEY",
            "dataType": "int64",
            "sourceColumn": "VALUATION_VIEW_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SENDER_RECEIVER_KEY",
            "dataType": "int64",
            "sourceColumn": "SENDER_RECEIVER_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "FUNCL_AREA_KEY",
            "dataType": "int64",
            "sourceColumn": "FUNCL_AREA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRTNR_FUNCL_AREA_KEY",
            "dataType": "int64",
            "sourceColumn": "PRTNR_FUNCL_AREA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COMPANY_KEY",
            "dataType": "int64",
            "sourceColumn": "COMPANY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRTNR_COMPANY_KEY",
            "dataType": "int64",
            "sourceColumn": "PRTNR_COMPANY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "BUSINESS_AREA_KEY",
            "dataType": "int64",
            "sourceColumn": "BUSINESS_AREA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PLANT_KEY",
            "dataType": "int64",
            "sourceColumn": "PLANT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_KEY",
            "dataType": "int64",
            "sourceColumn": "MATL_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "VENDOR_KEY",
            "dataType": "int64",
            "sourceColumn": "VENDOR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "DOCUMENT_DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "DOCUMENT_DATE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "POSTING_DATE_KEY",
            "dataType": "int64",
            "sourceColumn": "POSTING_DATE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "GL_ACCOUNT_MASTER_COA_KEY",
            "dataType": "int64",
            "sourceColumn": "GL_ACCOUNT_MASTER_COA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COST_CTR_ELIM_IBV_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_CTR_ELIM_IBV_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COST_ACCNTNG_DOCMNT_KEY",
            "dataType": "int64",
            "sourceColumn": "COST_ACCNTNG_DOCMNT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRTNR_OBJ_KEY",
            "dataType": "int64",
            "sourceColumn": "PRTNR_OBJ_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ACTUAL_AMT",
            "dataType": "double",
            "sourceColumn": "ACTUAL_AMT",
            "encodingHint": "value"
          },
          {
            "name": "ACTUAL_FIXED_AMT",
            "dataType": "double",
            "sourceColumn": "ACTUAL_FIXED_AMT",
            "encodingHint": "value"
          },
          {
            "name": "ACTUAL_VARIABLE_AMT",
            "dataType": "double",
            "sourceColumn": "ACTUAL_VARIABLE_AMT",
            "encodingHint": "value"
          },
          {
            "name": "ACTUAL_CONSUMPTION_QTY",
            "dataType": "double",
            "sourceColumn": "ACTUAL_CONSUMPTION_QTY",
            "encodingHint": "value"
          },
          {
            "name": "ACTUAL_FIX_CONSUMPTION_QTY",
            "dataType": "double",
            "sourceColumn": "ACTUAL_FIX_CONSUMPTION_QTY",
            "encodingHint": "value"
          },
          {
            "name": "ACTUAL_VARIABLE_CONSUMPTION_QTY",
            "dataType": "double",
            "sourceColumn": "ACTUAL_VARIABLE_CONSUMPTION_QTY",
            "encodingHint": "value"
          },
          {
            "name": "DATE_DTE_KEY",
            "dataType": "dateTime",
            "sourceColumn": "DATE_DTE_KEY"
          }
        ],
        "partitions": [
          {
            "name": "FACT_CCA_ACTUALS",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_CCA_V_FACT_CCA_ACTUALS_AAS = Source{[Schema=\"FIN_CCA\",Item=\"V_FACT_CCA_ACTUALS_AAS\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_CCA_V_FACT_CCA_ACTUALS_AAS,{\"PERIOD_KEY\", \"CONTROLLING_AREA_KEY\", \"COST_CTR_KEY\", \"PRFT_CTR_KEY\", \"PRFT_CTR_HRCHY_KEY\", \"PRFT_CTR_HRCHY_TAX_KEY\", \"PRFT_CTR_HRCHY_REGION_KEY\", \"COST_CTR_HIERARCHY_KEY\", \"COST_CTR_HIERARCHY_REGION_KEY\", \"COST_ELEMENT_HIERARCHY_KEY\", \"COST_ELEMENT_COA_KEY\", \"COST_ELEMENT_CONTROLLING_AREA_KEY\", \"CONTROLLING_AREA_ACTIVITY_TYPE_KEY\", \"CONTROLLING_VALUE_TYPE_KEY\", \"CRNCY_TYPE_KEY\", \"CRNCY_KEY\", \"CUST_KEY\", \"MEASURE_TYPE_KEY\", \"UOM_KEY\", \"DETAIL_VALUE_TYPE_KEY\", \"STATISTICS_KEY\", \"CONTROLLING_VERSION_KEY\", \"VALUATION_VIEW_KEY\", \"SENDER_RECEIVER_KEY\", \"FUNCL_AREA_KEY\", \"PRTNR_FUNCL_AREA_KEY\", \"COMPANY_KEY\", \"PRTNR_COMPANY_KEY\", \"BUSINESS_AREA_KEY\", \"PLANT_KEY\", \"MATL_KEY\", \"VENDOR_KEY\", \"DOCUMENT_DATE_KEY\", \"POSTING_DATE_KEY\", \"GL_ACCOUNT_MASTER_COA_KEY\", \"COST_CTR_ELIM_IBV_KEY\", \"COST_ACCNTNG_DOCMNT_KEY\", \"PRTNR_OBJ_KEY\", \"ACTUAL_AMT\", \"ACTUAL_FIXED_AMT\", \"ACTUAL_VARIABLE_AMT\", \"ACTUAL_CONSUMPTION_QTY\", \"ACTUAL_FIX_CONSUMPTION_QTY\", \"ACTUAL_VARIABLE_CONSUMPTION_QTY\", \"DATE_DTE_KEY\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    FIN_CCA_V_FACT_CCA_ACTUALS_AAS = Source{[Schema=\"FIN_CCA\",Item=\"V_FACT_CCA_ACTUALS_AAS\"]}[Data],",
                  "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_CCA_V_FACT_CCA_ACTUALS_AAS,{\"PERIOD_KEY\", \"CONTROLLING_AREA_KEY\", \"COST_CTR_KEY\", \"PRFT_CTR_KEY\", \"PRFT_CTR_HRCHY_KEY\", \"PRFT_CTR_HRCHY_TAX_KEY\", \"PRFT_CTR_HRCHY_REGION_KEY\", \"COST_CTR_HIERARCHY_KEY\", \"COST_CTR_HIERARCHY_REGION_KEY\", \"COST_ELEMENT_HIERARCHY_KEY\", \"COST_ELEMENT_COA_KEY\", \"COST_ELEMENT_CONTROLLING_AREA_KEY\", \"CONTROLLING_AREA_ACTIVITY_TYPE_KEY\", \"CONTROLLING_VALUE_TYPE_KEY\", \"CRNCY_TYPE_KEY\", \"CRNCY_KEY\", \"CUST_KEY\", \"MEASURE_TYPE_KEY\", \"UOM_KEY\", \"DETAIL_VALUE_TYPE_KEY\", \"STATISTICS_KEY\", \"CONTROLLING_VERSION_KEY\", \"VALUATION_VIEW_KEY\", \"SENDER_RECEIVER_KEY\", \"FUNCL_AREA_KEY\", \"PRTNR_FUNCL_AREA_KEY\", \"COMPANY_KEY\", \"PRTNR_COMPANY_KEY\", \"BUSINESS_AREA_KEY\", \"PLANT_KEY\", \"MATL_KEY\", \"VENDOR_KEY\", \"DOCUMENT_DATE_KEY\", \"POSTING_DATE_KEY\", \"GL_ACCOUNT_MASTER_COA_KEY\", \"COST_CTR_ELIM_IBV_KEY\", \"COST_ACCNTNG_DOCMNT_KEY\", \"PRTNR_OBJ_KEY\", \"ACTUAL_AMT\", \"ACTUAL_FIXED_AMT\", \"ACTUAL_VARIABLE_AMT\", \"ACTUAL_CONSUMPTION_QTY\", \"ACTUAL_FIX_CONSUMPTION_QTY\", \"ACTUAL_VARIABLE_CONSUMPTION_QTY\", \"DATE_DTE_KEY\"})",
                  "in",
                  "    #\"Removed Other Columns\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Current Fiscal Period",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\tPERIOD_KEY, CONTROLLING_AREA_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, CRNCY_KEY, CUST_KEY",
                "\t\t\t, MEASURE_TYPE_KEY, UOM_KEY, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY",
                "\t\t\t, CONTROLLING_VERSION_KEY, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY",
                "\t\t\t, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY, COMPANY_KEY, PRTNR_COMPANY_KEY",
                "\t\t\t, BUSINESS_AREA_KEY, PLANT_KEY, MATL_KEY, VENDOR_KEY, DOCUMENT_DATE_KEY",
                "\t\t\t, POSTING_DATE_KEY, GL_ACCOUNT_MASTER_COA_KEY, COST_CTR_ELIM_IBV_KEY",
                "\t\t\t, COST_ACCNTNG_DOCMNT_KEY, PRTNR_OBJ_KEY",
                "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT",
                "\t\t\t, ACTUAL_CONSUMPTION_QTY, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VARIABLE_CONSUMPTION_QTY",
                "\t\t\t, DATE_DTE_KEY",
                "\t\tFROM [FIN_CCA].[V_FACT_CCA_ACTUALS_AAS] ",
                "\t\tWHERE Part = 'Current Fiscal Period'",
                "\t\t\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\tPERIOD_KEY, CONTROLLING_AREA_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                  "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                  "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                  "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                  "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, CRNCY_KEY, CUST_KEY",
                  "\t\t\t, MEASURE_TYPE_KEY, UOM_KEY, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY",
                  "\t\t\t, CONTROLLING_VERSION_KEY, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY",
                  "\t\t\t, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY, COMPANY_KEY, PRTNR_COMPANY_KEY",
                  "\t\t\t, BUSINESS_AREA_KEY, PLANT_KEY, MATL_KEY, VENDOR_KEY, DOCUMENT_DATE_KEY",
                  "\t\t\t, POSTING_DATE_KEY, GL_ACCOUNT_MASTER_COA_KEY, COST_CTR_ELIM_IBV_KEY",
                  "\t\t\t, COST_ACCNTNG_DOCMNT_KEY, PRTNR_OBJ_KEY",
                  "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT",
                  "\t\t\t, ACTUAL_CONSUMPTION_QTY, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VARIABLE_CONSUMPTION_QTY",
                  "\t\t\t, DATE_DTE_KEY",
                  "\t\tFROM [FIN_CCA].[V_FACT_CCA_ACTUALS_AAS] ",
                  "\t\tWHERE Part = 'Current Fiscal Period'",
                  "\t\t\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Current Fiscal Year",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\tPERIOD_KEY, CONTROLLING_AREA_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, CRNCY_KEY, CUST_KEY",
                "\t\t\t, MEASURE_TYPE_KEY, UOM_KEY, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY",
                "\t\t\t, CONTROLLING_VERSION_KEY, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY",
                "\t\t\t, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY, COMPANY_KEY, PRTNR_COMPANY_KEY",
                "\t\t\t, BUSINESS_AREA_KEY, PLANT_KEY, MATL_KEY, VENDOR_KEY, DOCUMENT_DATE_KEY",
                "\t\t\t, POSTING_DATE_KEY, GL_ACCOUNT_MASTER_COA_KEY, COST_CTR_ELIM_IBV_KEY",
                "\t\t\t, COST_ACCNTNG_DOCMNT_KEY, PRTNR_OBJ_KEY",
                "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT",
                "\t\t\t, ACTUAL_CONSUMPTION_QTY, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VARIABLE_CONSUMPTION_QTY",
                "\t\t\t, DATE_DTE_KEY",
                "\t\tFROM [FIN_CCA].[V_FACT_CCA_ACTUALS_AAS] ",
                "\t\tWHERE Part = 'Current Fiscal Year'",
                "\t\t\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\tPERIOD_KEY, CONTROLLING_AREA_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                  "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                  "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                  "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                  "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, CRNCY_KEY, CUST_KEY",
                  "\t\t\t, MEASURE_TYPE_KEY, UOM_KEY, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY",
                  "\t\t\t, CONTROLLING_VERSION_KEY, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY",
                  "\t\t\t, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY, COMPANY_KEY, PRTNR_COMPANY_KEY",
                  "\t\t\t, BUSINESS_AREA_KEY, PLANT_KEY, MATL_KEY, VENDOR_KEY, DOCUMENT_DATE_KEY",
                  "\t\t\t, POSTING_DATE_KEY, GL_ACCOUNT_MASTER_COA_KEY, COST_CTR_ELIM_IBV_KEY",
                  "\t\t\t, COST_ACCNTNG_DOCMNT_KEY, PRTNR_OBJ_KEY",
                  "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT",
                  "\t\t\t, ACTUAL_CONSUMPTION_QTY, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VARIABLE_CONSUMPTION_QTY",
                  "\t\t\t, DATE_DTE_KEY",
                  "\t\tFROM [FIN_CCA].[V_FACT_CCA_ACTUALS_AAS] ",
                  "\t\tWHERE Part = 'Current Fiscal Year'",
                  "\t\t\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\tPERIOD_KEY, CONTROLLING_AREA_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, CRNCY_KEY, CUST_KEY",
                "\t\t\t, MEASURE_TYPE_KEY, UOM_KEY, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY",
                "\t\t\t, CONTROLLING_VERSION_KEY, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY",
                "\t\t\t, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY, COMPANY_KEY, PRTNR_COMPANY_KEY",
                "\t\t\t, BUSINESS_AREA_KEY, PLANT_KEY, MATL_KEY, VENDOR_KEY, DOCUMENT_DATE_KEY",
                "\t\t\t, POSTING_DATE_KEY, GL_ACCOUNT_MASTER_COA_KEY, COST_CTR_ELIM_IBV_KEY",
                "\t\t\t, COST_ACCNTNG_DOCMNT_KEY, PRTNR_OBJ_KEY",
                "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT",
                "\t\t\t, ACTUAL_CONSUMPTION_QTY, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VARIABLE_CONSUMPTION_QTY",
                "\t\t\t, DATE_DTE_KEY",
                "\t\tFROM [FIN_CCA].[V_FACT_CCA_ACTUALS_AAS] ",
                "\t\tWHERE Part = 'PrevFiscalYear'",
                "\t\t\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\tPERIOD_KEY, CONTROLLING_AREA_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                  "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                  "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                  "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                  "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, CRNCY_KEY, CUST_KEY",
                  "\t\t\t, MEASURE_TYPE_KEY, UOM_KEY, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY",
                  "\t\t\t, CONTROLLING_VERSION_KEY, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY",
                  "\t\t\t, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY, COMPANY_KEY, PRTNR_COMPANY_KEY",
                  "\t\t\t, BUSINESS_AREA_KEY, PLANT_KEY, MATL_KEY, VENDOR_KEY, DOCUMENT_DATE_KEY",
                  "\t\t\t, POSTING_DATE_KEY, GL_ACCOUNT_MASTER_COA_KEY, COST_CTR_ELIM_IBV_KEY",
                  "\t\t\t, COST_ACCNTNG_DOCMNT_KEY, PRTNR_OBJ_KEY",
                  "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT",
                  "\t\t\t, ACTUAL_CONSUMPTION_QTY, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VARIABLE_CONSUMPTION_QTY",
                  "\t\t\t, DATE_DTE_KEY",
                  "\t\tFROM [FIN_CCA].[V_FACT_CCA_ACTUALS_AAS] ",
                  "\t\tWHERE Part = 'PrevFiscalYear'",
                  "\t\t\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear-1",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\tPERIOD_KEY, CONTROLLING_AREA_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, CRNCY_KEY, CUST_KEY",
                "\t\t\t, MEASURE_TYPE_KEY, UOM_KEY, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY",
                "\t\t\t, CONTROLLING_VERSION_KEY, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY",
                "\t\t\t, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY, COMPANY_KEY, PRTNR_COMPANY_KEY",
                "\t\t\t, BUSINESS_AREA_KEY, PLANT_KEY, MATL_KEY, VENDOR_KEY, DOCUMENT_DATE_KEY",
                "\t\t\t, POSTING_DATE_KEY, GL_ACCOUNT_MASTER_COA_KEY, COST_CTR_ELIM_IBV_KEY",
                "\t\t\t, COST_ACCNTNG_DOCMNT_KEY, PRTNR_OBJ_KEY",
                "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT",
                "\t\t\t, ACTUAL_CONSUMPTION_QTY, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VARIABLE_CONSUMPTION_QTY",
                "\t\t\t, DATE_DTE_KEY",
                "\t\tFROM [FIN_CCA].[V_FACT_CCA_ACTUALS_AAS] ",
                "\t\tWHERE Part = 'PrevFiscalYear-1'",
                "\t\t\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\tPERIOD_KEY, CONTROLLING_AREA_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                  "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                  "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                  "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                  "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, CRNCY_KEY, CUST_KEY",
                  "\t\t\t, MEASURE_TYPE_KEY, UOM_KEY, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY",
                  "\t\t\t, CONTROLLING_VERSION_KEY, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY",
                  "\t\t\t, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY, COMPANY_KEY, PRTNR_COMPANY_KEY",
                  "\t\t\t, BUSINESS_AREA_KEY, PLANT_KEY, MATL_KEY, VENDOR_KEY, DOCUMENT_DATE_KEY",
                  "\t\t\t, POSTING_DATE_KEY, GL_ACCOUNT_MASTER_COA_KEY, COST_CTR_ELIM_IBV_KEY",
                  "\t\t\t, COST_ACCNTNG_DOCMNT_KEY, PRTNR_OBJ_KEY",
                  "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT",
                  "\t\t\t, ACTUAL_CONSUMPTION_QTY, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VARIABLE_CONSUMPTION_QTY",
                  "\t\t\t, DATE_DTE_KEY",
                  "\t\tFROM [FIN_CCA].[V_FACT_CCA_ACTUALS_AAS] ",
                  "\t\tWHERE Part = 'PrevFiscalYear-1'",
                  "\t\t\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear-2",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\tPERIOD_KEY, CONTROLLING_AREA_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, CRNCY_KEY, CUST_KEY",
                "\t\t\t, MEASURE_TYPE_KEY, UOM_KEY, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY",
                "\t\t\t, CONTROLLING_VERSION_KEY, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY",
                "\t\t\t, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY, COMPANY_KEY, PRTNR_COMPANY_KEY",
                "\t\t\t, BUSINESS_AREA_KEY, PLANT_KEY, MATL_KEY, VENDOR_KEY, DOCUMENT_DATE_KEY",
                "\t\t\t, POSTING_DATE_KEY, GL_ACCOUNT_MASTER_COA_KEY, COST_CTR_ELIM_IBV_KEY",
                "\t\t\t, COST_ACCNTNG_DOCMNT_KEY, PRTNR_OBJ_KEY",
                "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT",
                "\t\t\t, ACTUAL_CONSUMPTION_QTY, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VARIABLE_CONSUMPTION_QTY",
                "\t\t\t, DATE_DTE_KEY",
                "\t\tFROM [FIN_CCA].[V_FACT_CCA_ACTUALS_AAS] ",
                "\t\tWHERE Part = 'PrevFiscalYear-2'",
                "\t\t\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\tPERIOD_KEY, CONTROLLING_AREA_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                  "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                  "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                  "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                  "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, CRNCY_KEY, CUST_KEY",
                  "\t\t\t, MEASURE_TYPE_KEY, UOM_KEY, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY",
                  "\t\t\t, CONTROLLING_VERSION_KEY, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY",
                  "\t\t\t, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY, COMPANY_KEY, PRTNR_COMPANY_KEY",
                  "\t\t\t, BUSINESS_AREA_KEY, PLANT_KEY, MATL_KEY, VENDOR_KEY, DOCUMENT_DATE_KEY",
                  "\t\t\t, POSTING_DATE_KEY, GL_ACCOUNT_MASTER_COA_KEY, COST_CTR_ELIM_IBV_KEY",
                  "\t\t\t, COST_ACCNTNG_DOCMNT_KEY, PRTNR_OBJ_KEY",
                  "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT",
                  "\t\t\t, ACTUAL_CONSUMPTION_QTY, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VARIABLE_CONSUMPTION_QTY",
                  "\t\t\t, DATE_DTE_KEY",
                  "\t\tFROM [FIN_CCA].[V_FACT_CCA_ACTUALS_AAS] ",
                  "\t\tWHERE Part = 'PrevFiscalYear-2'",
                  "\t\t\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear-3",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\tPERIOD_KEY, CONTROLLING_AREA_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, CRNCY_KEY, CUST_KEY",
                "\t\t\t, MEASURE_TYPE_KEY, UOM_KEY, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY",
                "\t\t\t, CONTROLLING_VERSION_KEY, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY",
                "\t\t\t, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY, COMPANY_KEY, PRTNR_COMPANY_KEY",
                "\t\t\t, BUSINESS_AREA_KEY, PLANT_KEY, MATL_KEY, VENDOR_KEY, DOCUMENT_DATE_KEY",
                "\t\t\t, POSTING_DATE_KEY, GL_ACCOUNT_MASTER_COA_KEY, COST_CTR_ELIM_IBV_KEY",
                "\t\t\t, COST_ACCNTNG_DOCMNT_KEY, PRTNR_OBJ_KEY",
                "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT",
                "\t\t\t, ACTUAL_CONSUMPTION_QTY, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VARIABLE_CONSUMPTION_QTY",
                "\t\t\t, DATE_DTE_KEY",
                "\t\tFROM [FIN_CCA].[V_FACT_CCA_ACTUALS_AAS] ",
                "\t\tWHERE Part = 'PrevFiscalYear-3'",
                "\t\t\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\tPERIOD_KEY, CONTROLLING_AREA_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                  "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                  "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                  "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                  "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, CRNCY_KEY, CUST_KEY",
                  "\t\t\t, MEASURE_TYPE_KEY, UOM_KEY, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY",
                  "\t\t\t, CONTROLLING_VERSION_KEY, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY",
                  "\t\t\t, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY, COMPANY_KEY, PRTNR_COMPANY_KEY",
                  "\t\t\t, BUSINESS_AREA_KEY, PLANT_KEY, MATL_KEY, VENDOR_KEY, DOCUMENT_DATE_KEY",
                  "\t\t\t, POSTING_DATE_KEY, GL_ACCOUNT_MASTER_COA_KEY, COST_CTR_ELIM_IBV_KEY",
                  "\t\t\t, COST_ACCNTNG_DOCMNT_KEY, PRTNR_OBJ_KEY",
                  "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT",
                  "\t\t\t, ACTUAL_CONSUMPTION_QTY, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VARIABLE_CONSUMPTION_QTY",
                  "\t\t\t, DATE_DTE_KEY",
                  "\t\tFROM [FIN_CCA].[V_FACT_CCA_ACTUALS_AAS] ",
                  "\t\tWHERE Part = 'PrevFiscalYear-3'",
                  "\t\t\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Prev Fiscal Period",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT ",
                "\t\t\tPERIOD_KEY, CONTROLLING_AREA_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, CRNCY_KEY, CUST_KEY",
                "\t\t\t, MEASURE_TYPE_KEY, UOM_KEY, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY",
                "\t\t\t, CONTROLLING_VERSION_KEY, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY",
                "\t\t\t, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY, COMPANY_KEY, PRTNR_COMPANY_KEY",
                "\t\t\t, BUSINESS_AREA_KEY, PLANT_KEY, MATL_KEY, VENDOR_KEY, DOCUMENT_DATE_KEY",
                "\t\t\t, POSTING_DATE_KEY, GL_ACCOUNT_MASTER_COA_KEY, COST_CTR_ELIM_IBV_KEY",
                "\t\t\t, COST_ACCNTNG_DOCMNT_KEY, PRTNR_OBJ_KEY",
                "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT",
                "\t\t\t, ACTUAL_CONSUMPTION_QTY, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VARIABLE_CONSUMPTION_QTY",
                "\t\t\t, DATE_DTE_KEY",
                "\t\tFROM [FIN_CCA].[V_FACT_CCA_ACTUALS_AAS] ",
                "\t\tWHERE Part = 'Prev Fiscal Period'",
                "\t\t\"",
                "    )",
                "in",
                "    MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT ",
                  "\t\t\tPERIOD_KEY, CONTROLLING_AREA_KEY, COST_CTR_KEY, PRFT_CTR_KEY",
                  "\t\t\t, PRFT_CTR_HRCHY_KEY, PRFT_CTR_HRCHY_TAX_KEY, PRFT_CTR_HRCHY_REGION_KEY",
                  "\t\t\t, COST_CTR_HIERARCHY_KEY, COST_CTR_HIERARCHY_REGION_KEY, COST_ELEMENT_HIERARCHY_KEY",
                  "\t\t\t, COST_ELEMENT_COA_KEY, COST_ELEMENT_CONTROLLING_AREA_KEY, CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
                  "\t\t\t, CONTROLLING_VALUE_TYPE_KEY, CRNCY_TYPE_KEY, CRNCY_KEY, CUST_KEY",
                  "\t\t\t, MEASURE_TYPE_KEY, UOM_KEY, DETAIL_VALUE_TYPE_KEY, STATISTICS_KEY",
                  "\t\t\t, CONTROLLING_VERSION_KEY, VALUATION_VIEW_KEY, SENDER_RECEIVER_KEY",
                  "\t\t\t, FUNCL_AREA_KEY, PRTNR_FUNCL_AREA_KEY, COMPANY_KEY, PRTNR_COMPANY_KEY",
                  "\t\t\t, BUSINESS_AREA_KEY, PLANT_KEY, MATL_KEY, VENDOR_KEY, DOCUMENT_DATE_KEY",
                  "\t\t\t, POSTING_DATE_KEY, GL_ACCOUNT_MASTER_COA_KEY, COST_CTR_ELIM_IBV_KEY",
                  "\t\t\t, COST_ACCNTNG_DOCMNT_KEY, PRTNR_OBJ_KEY",
                  "\t\t\t, ACTUAL_AMT, ACTUAL_FIXED_AMT, ACTUAL_VARIABLE_AMT",
                  "\t\t\t, ACTUAL_CONSUMPTION_QTY, ACTUAL_FIX_CONSUMPTION_QTY, ACTUAL_VARIABLE_CONSUMPTION_QTY",
                  "\t\t\t, DATE_DTE_KEY",
                  "\t\tFROM [FIN_CCA].[V_FACT_CCA_ACTUALS_AAS] ",
                  "\t\tWHERE Part = 'Prev Fiscal Period'",
                  "\t\t\"",
                  "    )",
                  "in",
                  "    MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Partner Company",
        "description": "DIM_COMPANY_PARTNER",
        "columns": [
          {
            "name": "COMPANY_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated by the enterprise data warehouse in increments of 1, such as 100,101,102...) for the primary key in the company table within the data warehouse, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "COMPANY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "Company Code",
            "dataType": "string",
            "description": "code in SAP used to organize accounting information related to business transactions, representing the smallest organizational unit for which a complete self-contained set of accounts can be drawn up for purposes of external reporting, financial statements, and profit and loss statements, stored as a VARCHAR",
            "sourceColumn": "Company Code",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Company Country Code",
            "dataType": "string",
            "sourceColumn": "Company Country Code",
            "encodingHint": "hash"
          },
          {
            "name": "List Price Currency Code",
            "dataType": "string",
            "sourceColumn": "List Price Currency Code",
            "encodingHint": "hash"
          },
          {
            "name": "Chart Of Accounts Code",
            "dataType": "string",
            "sourceColumn": "Chart Of Accounts Code",
            "encodingHint": "hash"
          },
          {
            "name": "Credit Control Area Code",
            "dataType": "string",
            "sourceColumn": "Credit Control Area Code",
            "encodingHint": "hash"
          },
          {
            "name": "Fiscal Year Variant",
            "dataType": "string",
            "sourceColumn": "Fiscal Year Variant",
            "encodingHint": "hash"
          },
          {
            "name": "Company Code Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP (such as US for Company Code 1000, Canada for 2000, Germany for 4016, France for 4013, Netherlands for 4100) used to organize accounting information related to business transactions, representing the smallest organizational unit for which a complete self-contained set of accounts can be drawn up for purposes of external reporting, financial statements, and profit and loss statements, stored as a nvarchar",
              "",
              "The Company Code is also the third level in the Rockwell Automation internal organization hierarchy in SAP, which ensures consistent standard financial reporting and has the structure:",
              "1) Operating Concern",
              "2) Controlling Area",
              "3) Company Code",
              "4) Business Area",
              "5) Cost Center\""
            ],
            "sourceColumn": "Company Code Description",
            "displayFolder": "Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Company Code And Description",
            "dataType": "string",
            "description": [
              "\"concatenation of the Company Code in SAP and the associated Company Code Description (such as 1000 - Rockwell Automation, 2000 - Rockwell Canada, or 3014 - R.A. Columbia S.A.) used to organize accounting information related to business transactions, representing the smallest organizational unit for which a complete self-contained set of accounts can be drawn up for purposes of external reporting, financial statements, and profit and loss statements, stored as a nvarchar",
              "",
              "The Company Code is also the third level in the Rockwell Automation internal organization hierarchy in SAP, which ensures consistent standard financial reporting and has the structure:",
              "1) Operating Concern",
              "2) Controlling Area",
              "3) Company Code",
              "4) Business Area",
              "5) Cost Center\""
            ],
            "sourceColumn": "Company Code And Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_COMPANY_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_COMPANY_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_COMPANY_BusNm,{\"COMPANY_KEY\", \"Company Code\", \"Company Country Code\", \"List Price Currency Code\", \"Chart Of Accounts Code\", \"Credit Control Area Code\", \"Fiscal Year Variant\", \"Company Code Description\", \"Company Code And Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Fact Selection",
        "calculationGroup": {
          "precedence": 31,
          "calculationItems": [
            {
              "name": "M Rate COPA",
              "expression": [
                "VAR Fact_H =",
                "    SUMMARIZE (",
                "    ",
                "       FILTER( FACT_COPA,RELATED(DIM_SOURCE_CRNCY[Currency Code])=\"ARS\"),",
                "        FACT_COPA[CRNCY_KEY],",
                "        DIM_DATE[Calendar Month Begin Date],",
                "        \"X\", SELECTEDMEASURE ()",
                "    )",
                "VAR Fact_M =",
                "    SUMMARIZE (",
                "        FILTER(FACT_COPA,RELATED(DIM_SOURCE_CRNCY[Currency Code]) <> \"ARS\"),",
                "        FACT_COPA[CRNCY_KEY],",
                "        FACT_COPA[POSTNG_DATE_INT_KEY],",
                "        \"X\", SELECTEDMEASURE ()",
                "    ) ",
                "      ",
                "    ",
                "    VAR H=",
                "     CALCULATE(",
                "        SUMX(",
                "            Fact_H,",
                "            [X]",
                "            * MINX(",
                "                FILTER(",
                "                    DIM_CRNCY_CVRSN,",
                "                    DIM_CRNCY_CVRSN[Rate Effective To Date] >= DIM_DATE[Calendar Month Begin Date]",
                "                    && DIM_CRNCY_CVRSN[Rate Effective From Date] <= DIM_DATE[Calendar Month Begin Date]",
                "                    && FACT_COPA[CRNCY_KEY]= DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                    && DIM_CRNCY_CVRSN[Rate Type] = \"MovAvg\"",
                "                 ",
                "                ),",
                "                DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "            )",
                "        ),",
                "        ALL(DIM_CRNCY_CVRSN[Rate Effective To Date])",
                "    )",
                "            ",
                "            ",
                "            ",
                " VAR M=",
                "  CALCULATE (",
                "            SUMX (",
                "                Fact_M,",
                "                [X]",
                "                    * MINX (",
                "                        FILTER (",
                "                            DIM_CRNCY_CVRSN,",
                "                            DIM_CRNCY_CVRSN[RATE_EFF_FROM_DTE_INT_KEY] <= FACT_COPA[POSTNG_DATE_INT_KEY]",
                "                                && DIM_CRNCY_CVRSN[RATE_EFF_TO_DTE_INT_KEY] >= FACT_COPA[POSTNG_DATE_INT_KEY]",
                "                                && FACT_COPA[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                                && DIM_CRNCY_CVRSN[Rate Type] = \"M\"",
                "                        ),",
                "                        DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                    )",
                "            ),",
                "            ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "            ",
                "            )",
                "    ",
                "    VAR R = H + M",
                "    ",
                "    ",
                "RETURN",
                "  ",
                "   R"
              ]
            },
            {
              "name": "P Rate COPA",
              "expression": [
                "VAR Fact_H =",
                "    SUMMARIZE (",
                "    ",
                "       FILTER( FACT_COPA,RELATED(DIM_SOURCE_CRNCY[Currency Code])=\"ARS\"),",
                "        FACT_COPA[CRNCY_KEY],",
                "        DIM_DATE[Calendar Month Begin Date],",
                "        \"X\", SELECTEDMEASURE ()",
                "    )",
                "VAR Fact_P =",
                "    SUMMARIZE (",
                "        FILTER(FACT_COPA,RELATED(DIM_SOURCE_CRNCY[Currency Code]) <> \"ARS\"),",
                "        FACT_COPA[CRNCY_KEY],",
                "        FACT_COPA[POSTNG_DATE_INT_KEY],",
                "        \"X\", SELECTEDMEASURE ()",
                "    ) ",
                "    ",
                "",
                "",
                "VAR myDate =",
                "    MAX ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    ",
                "VAR H =",
                "    CALCULATE (",
                "        SUMX (",
                "            Fact_H,",
                "            [X]",
                "                * MINX (",
                "                    FILTER (",
                "                        DIM_CRNCY_CVRSN,",
                "                        DIM_CRNCY_CVRSN[Rate Effective To Date] >= DIM_DATE[Calendar Month Begin Date]",
                "                            && DIM_CRNCY_CVRSN[Rate Effective From Date] <= DIM_DATE[Calendar Month Begin Date]",
                "                            && FACT_COPA[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                            && DIM_CRNCY_CVRSN[Rate Type] = \"MovAvg\"",
                "                         ",
                "                    ),",
                "                    DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                )",
                "        ),",
                "        ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    )",
                "VAR P =",
                "    CALCULATE (",
                "        SUMX (",
                "            Fact_P,",
                "            [X]",
                "                * MINX (",
                "                    TOPN (",
                "                        1,",
                "                        FILTER (",
                "                            DIM_CRNCY_CVRSN,",
                "                            DIM_CRNCY_CVRSN[Rate Effective From Date] <= myDate",
                "                                && FACT_COPA[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                                && DIM_CRNCY_CVRSN[Rate Type] = \"P\"",
                "                             ",
                "                        ),",
                "                        DIM_CRNCY_CVRSN[Rate Effective From Date]",
                "                    ),",
                "                    DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                )",
                "        ),",
                "        ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    )",
                "VAR R = P + H",
                "RETURN",
                "   R"
              ]
            },
            {
              "name": "M Rate CCA",
              "expression": [
                "VAR Fact_H =",
                "    SUMMARIZE (",
                "    ",
                "       FILTER( FACT_CCA_PLAN_ACTUALS,RELATED(DIM_SOURCE_CRNCY[Currency Code])=\"ARS\"),",
                "        FACT_CCA_PLAN_ACTUALS[CRNCY_KEY],",
                "        DIM_DATE[Calendar Month Begin Date],",
                "        \"X\", SELECTEDMEASURE ()",
                "    )",
                "VAR Fact_M =",
                "    SUMMARIZE (",
                "        FILTER(FACT_CCA_PLAN_ACTUALS,RELATED(DIM_SOURCE_CRNCY[Currency Code]) <> \"ARS\"),",
                "        FACT_CCA_PLAN_ACTUALS[CRNCY_KEY],",
                "        FACT_CCA_PLAN_ACTUALS[PERIOD_KEY],",
                "        \"X\", SELECTEDMEASURE ()",
                "    ) ",
                "      ",
                "    ",
                "    VAR H=",
                "     CALCULATE(",
                "        SUMX(",
                "            Fact_H,",
                "            [X]",
                "            * MINX(",
                "                FILTER(",
                "                    DIM_CRNCY_CVRSN,",
                "                    DIM_CRNCY_CVRSN[Rate Effective To Date] >= DIM_DATE[Calendar Month Begin Date]",
                "                    && DIM_CRNCY_CVRSN[Rate Effective From Date] <= DIM_DATE[Calendar Month Begin Date]",
                "                    && FACT_CCA_PLAN_ACTUALS[CRNCY_KEY]= DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                    && DIM_CRNCY_CVRSN[Rate Type] = \"MovAvg\"",
                "                 ",
                "                ),",
                "                DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "            )",
                "        ),",
                "        ALL(DIM_CRNCY_CVRSN[Rate Effective To Date])",
                "    )",
                "            ",
                "            ",
                "            ",
                " VAR M=",
                "  CALCULATE (",
                "            SUMX (",
                "                Fact_M,",
                "                [X]",
                "                    * MINX (",
                "                        FILTER (",
                "                            DIM_CRNCY_CVRSN,",
                "                            DIM_CRNCY_CVRSN[RATE_EFF_FROM_DTE_INT_KEY] <= FACT_CCA_PLAN_ACTUALS[PERIOD_KEY]",
                "                                && DIM_CRNCY_CVRSN[RATE_EFF_TO_DTE_INT_KEY] >= FACT_CCA_PLAN_ACTUALS[PERIOD_KEY]",
                "                                && FACT_CCA_PLAN_ACTUALS[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                                && DIM_CRNCY_CVRSN[Rate Type] = \"M\"",
                "                        ),",
                "                        DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                    )",
                "            ),",
                "            ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "            ",
                "            )",
                "    ",
                "    VAR R = H + M",
                "    ",
                "    ",
                "RETURN",
                "  ",
                "   R"
              ]
            },
            {
              "name": "P Rate CCA",
              "expression": [
                "VAR Fact_H =",
                "    SUMMARIZE (",
                "    ",
                "       FILTER( FACT_CCA_PLAN_ACTUALS,RELATED(DIM_SOURCE_CRNCY[Currency Code])=\"ARS\"),",
                "        FACT_CCA_PLAN_ACTUALS[CRNCY_KEY],",
                "        DIM_DATE[Calendar Month Begin Date],",
                "        \"X\", SELECTEDMEASURE ()",
                "    )",
                "VAR Fact_P =",
                "    SUMMARIZE (",
                "        FILTER(FACT_CCA_PLAN_ACTUALS,RELATED(DIM_SOURCE_CRNCY[Currency Code]) <> \"ARS\"),",
                "        FACT_CCA_PLAN_ACTUALS[CRNCY_KEY],",
                "        FACT_CCA_PLAN_ACTUALS[PERIOD_KEY],",
                "        \"X\", SELECTEDMEASURE ()",
                "    ) ",
                "    ",
                "",
                "",
                "VAR myDate =",
                "    MAX ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    ",
                "VAR H =",
                "    CALCULATE (",
                "        SUMX (",
                "            Fact_H,",
                "            [X]",
                "                * MINX (",
                "                    FILTER (",
                "                        DIM_CRNCY_CVRSN,",
                "                        DIM_CRNCY_CVRSN[Rate Effective To Date] >= DIM_DATE[Calendar Month Begin Date]",
                "                            && DIM_CRNCY_CVRSN[Rate Effective From Date] <= DIM_DATE[Calendar Month Begin Date]",
                "                            && FACT_CCA_PLAN_ACTUALS[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                            && DIM_CRNCY_CVRSN[Rate Type] = \"MovAvg\"",
                "                         ",
                "                    ),",
                "                    DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                )",
                "        ),",
                "        ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    )",
                "VAR P =",
                "    CALCULATE (",
                "        SUMX (",
                "            Fact_P,",
                "            [X]",
                "                * MINX (",
                "                    TOPN (",
                "                        1,",
                "                        FILTER (",
                "                            DIM_CRNCY_CVRSN,",
                "                            DIM_CRNCY_CVRSN[Rate Effective From Date] <= myDate",
                "                                && FACT_CCA_PLAN_ACTUALS[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                                && DIM_CRNCY_CVRSN[Rate Type] = \"P\"",
                "                             ",
                "                        ),",
                "                        DIM_CRNCY_CVRSN[Rate Effective From Date]",
                "                    ),",
                "                    DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                )",
                "        ),",
                "        ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    )",
                "VAR R = P + H",
                "RETURN",
                "   R"
              ]
            },
            {
              "name": "P Rate CCA Detail",
              "expression": [
                "VAR Fact_H =",
                "    SUMMARIZE (",
                "    ",
                "       FILTER( FACT_CCA_ACTUALS,RELATED(DIM_SOURCE_CRNCY[Currency Code])=\"ARS\"),",
                "        FACT_CCA_ACTUALS[CRNCY_KEY],",
                "        DIM_DATE[Calendar Month Begin Date],",
                "        \"X\", SELECTEDMEASURE ()",
                "    )",
                "VAR Fact_P =",
                "    SUMMARIZE (",
                "        FILTER(FACT_CCA_ACTUALS,RELATED(DIM_SOURCE_CRNCY[Currency Code]) <> \"ARS\"),",
                "        FACT_CCA_ACTUALS[CRNCY_KEY],",
                "        FACT_CCA_ACTUALS[PERIOD_KEY],",
                "        \"X\", SELECTEDMEASURE ()",
                "    ) ",
                "    ",
                "",
                "",
                "VAR myDate =",
                "    MAX ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    ",
                "VAR H =",
                "    CALCULATE (",
                "        SUMX (",
                "            Fact_H,",
                "            [X]",
                "                * MINX (",
                "                    FILTER (",
                "                        DIM_CRNCY_CVRSN,",
                "                        DIM_CRNCY_CVRSN[Rate Effective To Date] >= DIM_DATE[Calendar Month Begin Date]",
                "                            && DIM_CRNCY_CVRSN[Rate Effective From Date] <= DIM_DATE[Calendar Month Begin Date]",
                "                            && FACT_CCA_ACTUALS[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                            && DIM_CRNCY_CVRSN[Rate Type] = \"MovAvg\"",
                "                         ",
                "                    ),",
                "                    DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                )",
                "        ),",
                "        ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    )",
                "VAR P =",
                "    CALCULATE (",
                "        SUMX (",
                "            Fact_P,",
                "            [X]",
                "                * MINX (",
                "                    TOPN (",
                "                        1,",
                "                        FILTER (",
                "                            DIM_CRNCY_CVRSN,",
                "                            DIM_CRNCY_CVRSN[Rate Effective From Date] <= myDate",
                "                                && FACT_CCA_ACTUALS[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                                && DIM_CRNCY_CVRSN[Rate Type] = \"P\"",
                "                             ",
                "                        ),",
                "                        DIM_CRNCY_CVRSN[Rate Effective From Date]",
                "                    ),",
                "                    DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                )",
                "        ),",
                "        ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    )",
                "VAR R = P + H",
                "RETURN",
                "   R"
              ]
            },
            {
              "name": "M Rate CCA Detail",
              "expression": [
                "VAR Fact_H =",
                "    SUMMARIZE (",
                "    ",
                "       FILTER( FACT_CCA_ACTUALS,RELATED(DIM_SOURCE_CRNCY[Currency Code])=\"ARS\"),",
                "        FACT_CCA_ACTUALS[CRNCY_KEY],",
                "        DIM_DATE[Calendar Month Begin Date],",
                "        \"X\", SELECTEDMEASURE ()",
                "    )",
                "VAR Fact_M =",
                "    SUMMARIZE (",
                "        FILTER(FACT_CCA_ACTUALS,RELATED(DIM_SOURCE_CRNCY[Currency Code]) <> \"ARS\"),",
                "        FACT_CCA_ACTUALS[CRNCY_KEY],",
                "        FACT_CCA_ACTUALS[PERIOD_KEY],",
                "        \"X\", SELECTEDMEASURE ()",
                "    ) ",
                "      ",
                "    ",
                "    VAR H=",
                "     CALCULATE(",
                "        SUMX(",
                "            Fact_H,",
                "            [X]",
                "            * MINX(",
                "                FILTER(",
                "                    DIM_CRNCY_CVRSN,",
                "                    DIM_CRNCY_CVRSN[Rate Effective To Date] >= DIM_DATE[Calendar Month Begin Date]",
                "                    && DIM_CRNCY_CVRSN[Rate Effective From Date] <= DIM_DATE[Calendar Month Begin Date]",
                "                    && FACT_CCA_ACTUALS[CRNCY_KEY]= DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                    && DIM_CRNCY_CVRSN[Rate Type] = \"MovAvg\"",
                "                 ",
                "                ),",
                "                DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "            )",
                "        ),",
                "        ALL(DIM_CRNCY_CVRSN[Rate Effective To Date])",
                "    )",
                "            ",
                "            ",
                "            ",
                " VAR M=",
                "  CALCULATE (",
                "            SUMX (",
                "                Fact_M,",
                "                [X]",
                "                    * MINX (",
                "                        FILTER (",
                "                            DIM_CRNCY_CVRSN,",
                "                            DIM_CRNCY_CVRSN[RATE_EFF_FROM_DTE_INT_KEY] <= FACT_CCA_ACTUALS[PERIOD_KEY]",
                "                                && DIM_CRNCY_CVRSN[RATE_EFF_TO_DTE_INT_KEY] >= FACT_CCA_ACTUALS[PERIOD_KEY]",
                "                                && FACT_CCA_ACTUALS[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                                && DIM_CRNCY_CVRSN[Rate Type] = \"M\"",
                "                        ),",
                "                        DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                    )",
                "            ),",
                "            ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "            ",
                "            )",
                "    ",
                "    VAR R = H + M",
                "    ",
                "    ",
                "RETURN",
                "  ",
                "   R"
              ]
            },
            {
              "name": "M Rate Orders",
              "expression": [
                "VAR Fact_H =",
                "    SUMMARIZE (",
                "    ",
                "       FILTER('Sales Orders Facts',RELATED(DIM_SOURCE_CRNCY[Currency Code]) = \"ARS\"),",
                "        'Sales Orders Facts'[CRNCY_KEY],",
                "        DIM_DATE[Calendar Month Begin Date],",
                "        \"X\", SELECTEDMEASURE ()",
                "    )",
                "VAR Fact_M =",
                "    SUMMARIZE (",
                "        FILTER('Sales Orders Facts',RELATED(DIM_SOURCE_CRNCY[Currency Code]) <> \"ARS\"),",
                "        'Sales Orders Facts'[CRNCY_KEY],",
                "        'Sales Orders Facts'[ORD_ITM_CREATD_DTE_KEY],",
                "        \"X\", SELECTEDMEASURE ()",
                "    ) ",
                "      ",
                "    ",
                "    VAR H=",
                "     CALCULATE(",
                "        SUMX(",
                "            Fact_H,",
                "            [X]",
                "            * MINX(",
                "                FILTER(",
                "                    DIM_CRNCY_CVRSN,",
                "                    DIM_CRNCY_CVRSN[Rate Effective To Date] >= DIM_DATE[Calendar Month Begin Date]",
                "                    && DIM_CRNCY_CVRSN[Rate Effective From Date] <= DIM_DATE[Calendar Month Begin Date]",
                "                    && 'Sales Orders Facts'[CRNCY_KEY]= DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                    && DIM_CRNCY_CVRSN[Rate Type] = \"MovAvg\"",
                "                 ",
                "                ),",
                "                DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "            )",
                "        ),",
                "        ALL(DIM_CRNCY_CVRSN[Rate Effective To Date])",
                "    )",
                "            ",
                "            ",
                "            ",
                " VAR M=",
                "  CALCULATE (",
                "            SUMX (",
                "                Fact_M,",
                "                [X]",
                "                    * MINX (",
                "                        FILTER (",
                "                            DIM_CRNCY_CVRSN,",
                "                            DIM_CRNCY_CVRSN[RATE_EFF_FROM_DTE_INT_KEY] <= 'Sales Orders Facts'[ORD_ITM_CREATD_DTE_KEY]",
                "                                && DIM_CRNCY_CVRSN[RATE_EFF_TO_DTE_INT_KEY] >= 'Sales Orders Facts'[ORD_ITM_CREATD_DTE_KEY]",
                "                                && 'Sales Orders Facts'[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                                && DIM_CRNCY_CVRSN[Rate Type] = \"M\"",
                "                        ),",
                "                        DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                    )",
                "            ),",
                "            ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "            ",
                "            )",
                "    ",
                "    VAR R = H + M",
                "    ",
                "    ",
                "RETURN",
                "  ",
                "   R"
              ]
            },
            {
              "name": "P Rate Orders",
              "expression": [
                "VAR Fact_H =",
                "    SUMMARIZE (",
                "    ",
                "       FILTER( 'Sales Orders Facts',RELATED(DIM_SOURCE_CRNCY[Currency Code]) = \"ARS\"),",
                "        'Sales Orders Facts'[CRNCY_KEY],",
                "        DIM_DATE[Calendar Month Begin Date],",
                "        \"X\", SELECTEDMEASURE ()",
                "    )",
                "VAR Fact_P =",
                "    SUMMARIZE (",
                "        FILTER('Sales Orders Facts',RELATED(DIM_SOURCE_CRNCY[Currency Code]) <> \"ARS\"),",
                "        'Sales Orders Facts'[CRNCY_KEY],",
                "        'Sales Orders Facts'[ORD_ITM_CREATD_DTE_KEY],",
                "        \"X\", SELECTEDMEASURE ()",
                "    ) ",
                "    ",
                "",
                "",
                "VAR myDate =",
                "    MAX ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    ",
                "VAR H =",
                "    CALCULATE (",
                "        SUMX (",
                "            Fact_H,",
                "            [X]",
                "                * MINX (",
                "                    FILTER (",
                "                        DIM_CRNCY_CVRSN,",
                "                        DIM_CRNCY_CVRSN[Rate Effective To Date] >= DIM_DATE[Calendar Month Begin Date]",
                "                            && DIM_CRNCY_CVRSN[Rate Effective From Date] <= DIM_DATE[Calendar Month Begin Date]",
                "                            && 'Sales Orders Facts'[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                            && DIM_CRNCY_CVRSN[Rate Type] = \"MovAvg\"",
                "                         ",
                "                    ),",
                "                    DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                )",
                "        ),",
                "        ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    )",
                "VAR P =",
                "    CALCULATE (",
                "        SUMX (",
                "            Fact_P,",
                "            [X]",
                "                * MINX (",
                "                    TOPN (",
                "                        1,",
                "                        FILTER (",
                "                            DIM_CRNCY_CVRSN,",
                "                            DIM_CRNCY_CVRSN[Rate Effective From Date] <= myDate",
                "                                && 'Sales Orders Facts'[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                                && DIM_CRNCY_CVRSN[Rate Type] = \"P\"",
                "                             ",
                "                        ),",
                "                        DIM_CRNCY_CVRSN[Rate Effective From Date]",
                "                    ),",
                "                    DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                )",
                "        ),",
                "        ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    )",
                "VAR R = P + H",
                "RETURN",
                "   R"
              ]
            },
            {
              "name": "M Rate Backlogs",
              "expression": [
                "VAR Fact_H =",
                "    SUMMARIZE (",
                "    ",
                "       FILTER('Monthly Backlog Facts',RELATED(DIM_SOURCE_CRNCY[Currency Code]) = \"ARS\"),",
                "        'Monthly Backlog Facts'[CRNCY_KEY],",
                "        DIM_DATE[Calendar Month Begin Date],",
                "        \"X\", SELECTEDMEASURE ()",
                "    )",
                "VAR Fact_M =",
                "    SUMMARIZE (",
                "        FILTER('Monthly Backlog Facts',RELATED(DIM_SOURCE_CRNCY[Currency Code]) <> \"ARS\"),",
                "        'Monthly Backlog Facts'[CRNCY_KEY],",
                "        'Monthly Backlog Facts'[ORD_ITM_CREATD_DTE_KEY],",
                "        \"X\", SELECTEDMEASURE ()",
                "    ) ",
                "      ",
                "    ",
                "    VAR H=",
                "     CALCULATE(",
                "        SUMX(",
                "            Fact_H,",
                "            [X]",
                "            * MINX(",
                "                FILTER(",
                "                    DIM_CRNCY_CVRSN,",
                "                    DIM_CRNCY_CVRSN[Rate Effective To Date] >= DIM_DATE[Calendar Month Begin Date]",
                "                    && DIM_CRNCY_CVRSN[Rate Effective From Date] <= DIM_DATE[Calendar Month Begin Date]",
                "                    && 'Monthly Backlog Facts'[CRNCY_KEY]= DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                    && DIM_CRNCY_CVRSN[Rate Type] = \"MovAvg\"",
                "                 ",
                "                ),",
                "                DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "            )",
                "        ),",
                "        ALL(DIM_CRNCY_CVRSN[Rate Effective To Date])",
                "    )",
                "            ",
                "            ",
                "            ",
                " VAR M=",
                "  CALCULATE (",
                "            SUMX (",
                "                Fact_M,",
                "                [X]",
                "                    * MINX (",
                "                        FILTER (",
                "                            DIM_CRNCY_CVRSN,",
                "                            DIM_CRNCY_CVRSN[RATE_EFF_FROM_DTE_INT_KEY] <= 'Monthly Backlog Facts'[ORD_ITM_CREATD_DTE_KEY]",
                "                                && DIM_CRNCY_CVRSN[RATE_EFF_TO_DTE_INT_KEY] >= 'Monthly Backlog Facts'[ORD_ITM_CREATD_DTE_KEY]",
                "                                && 'Monthly Backlog Facts'[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                                && DIM_CRNCY_CVRSN[Rate Type] = \"M\"",
                "                        ),",
                "                        DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                    )",
                "            ),",
                "            ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "            ",
                "            )",
                "    ",
                "    VAR R = H + M",
                "    ",
                "    ",
                "RETURN",
                "  ",
                "   R"
              ]
            },
            {
              "name": "P Rate Backlogs",
              "expression": [
                "VAR Fact_H =",
                "    SUMMARIZE (",
                "    ",
                "       FILTER( 'Monthly Backlog Facts',RELATED(DIM_SOURCE_CRNCY[Currency Code]) = \"ARS\"),",
                "        'Monthly Backlog Facts'[CRNCY_KEY],",
                "        DIM_DATE[Calendar Month Begin Date],",
                "        \"X\", SELECTEDMEASURE ()",
                "    )",
                "VAR Fact_P =",
                "    SUMMARIZE (",
                "        FILTER('Monthly Backlog Facts',RELATED(DIM_SOURCE_CRNCY[Currency Code]) <> \"ARS\"),",
                "        'Monthly Backlog Facts'[CRNCY_KEY],",
                "        'Monthly Backlog Facts'[ORD_ITM_CREATD_DTE_KEY],",
                "        \"X\", SELECTEDMEASURE ()",
                "    ) ",
                "    ",
                "",
                "",
                "VAR myDate =",
                "    MAX ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    ",
                "VAR H =",
                "    CALCULATE (",
                "        SUMX (",
                "            Fact_H,",
                "            [X]",
                "                * MINX (",
                "                    FILTER (",
                "                        DIM_CRNCY_CVRSN,",
                "                        DIM_CRNCY_CVRSN[Rate Effective To Date] >= DIM_DATE[Calendar Month Begin Date]",
                "                            && DIM_CRNCY_CVRSN[Rate Effective From Date] <= DIM_DATE[Calendar Month Begin Date]",
                "                            && 'Monthly Backlog Facts'[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                            && DIM_CRNCY_CVRSN[Rate Type] = \"MovAvg\"",
                "                         ",
                "                    ),",
                "                    DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                )",
                "        ),",
                "        ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    )",
                "VAR P =",
                "    CALCULATE (",
                "        SUMX (",
                "            Fact_P,",
                "            [X]",
                "                * MINX (",
                "                    TOPN (",
                "                        1,",
                "                        FILTER (",
                "                            DIM_CRNCY_CVRSN,",
                "                            DIM_CRNCY_CVRSN[Rate Effective From Date] <= myDate",
                "                                && 'Monthly Backlog Facts'[CRNCY_KEY] = DIM_CRNCY_CVRSN[FROM_CRNCY_KEY]",
                "                                && DIM_CRNCY_CVRSN[Rate Type] = \"P\"",
                "                             ",
                "                        ),",
                "                        DIM_CRNCY_CVRSN[Rate Effective From Date]",
                "                    ),",
                "                    DIM_CRNCY_CVRSN[EXCHG_RATE]",
                "                )",
                "        ),",
                "        ALL ( DIM_CRNCY_CVRSN[Rate Effective To Date] )",
                "    )",
                "VAR R = P + H",
                "RETURN",
                "   R"
              ]
            }
          ]
        },
        "columns": [
          {
            "name": "Fact Selection",
            "dataType": "string",
            "sourceColumn": "Name"
          }
        ],
        "partitions": [
          {
            "name": "CalculationGroup 1",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "Sales Orders Facts",
        "columns": [
          {
            "name": "FACT_SALES_ORDERS_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "FACT_SALES_ORDERS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "BOOKING_DOC_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the booking document foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "BOOKING_DOC_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CRNCY_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the currency foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "CRNCY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRFT_CTR_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the profit center foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "PRFT_CTR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the material foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "MATL_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PROD_HRCHY_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the product hierarchy foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "PROD_HRCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PLANT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the plant foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "PLANT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_ITM_DLVRY_PRTY_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the order item delivery priority foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "ORD_ITM_DLVRY_PRTY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_STOCK_STATUS_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the material stock status foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "MATL_STOCK_STATUS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MFGNG_REQRMT_TYPE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the manufacturing requirement type foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "MFGNG_REQRMT_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_ITM_REJECTION_REASON_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the order item rejection reason foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "ORD_ITM_REJECTION_REASON_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_DOC_ITM_CAT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales document item category foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_DOC_ITM_CAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SHIPPING_POINT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the shipping point foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SHIPPING_POINT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SHIPPING_ROUTE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the shipping route foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SHIPPING_ROUTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PLANT_STORAGE_LOCATION_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the plant material storage location foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "PLANT_STORAGE_LOCATION_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORG_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales organization foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_ORG_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COMPANY_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the company foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "COMPANY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_DOC_TYPE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales document type foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_DOC_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_OFFICE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales office foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_OFFICE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SHIPPING_CONDITION_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the shipping condition foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SHIPPING_CONDITION_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_DELIVERY_BLOCK_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales order delivery block foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_DELIVERY_BLOCK_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_DOC_CAT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales document category foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_DOC_CAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_DIST_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales district foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_DIST_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CONTROLLING_AREA_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the  controlling area foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "CONTROLLING_AREA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CREDIT_HOLD_STATUS_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the credit hold status foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "CREDIT_HOLD_STATUS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CUST_COLLECTIVE_NO_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the customer collective number foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "CUST_COLLECTIVE_NO_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CUST_PURCHASE_ORD_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the customer purchase order foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "CUST_PURCHASE_ORD_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "BLLNG_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the billing processing status foreign key in the sales order fact table, which links to the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "BLLNG_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CUST_ACCT_ASGNMT_GRP_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the customer account assignment group foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "CUST_ACCT_ASGNMT_GRP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_ITM_DLVRY_BLOCK_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales order item delivery blocked foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_ITM_DLVRY_BLOCK_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_DLVRY_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales order delivery processing status foreign key in the sales order fact table, which links to the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_DLVRY_PRCSNG_STAT_KEY"
          },
          {
            "name": "SLS_ORD_OVRLL_DLVRY_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales order overall delivery processing status foreign key in the sales order fact table, which links to the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_OVRLL_DLVRY_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "DLVRY_RELTD_BLLNG_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the delivery related billing processing status foreign key in the sales order fact table, which links to the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "DLVRY_RELTD_BLLNG_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_RELTD_BLLNG_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the order related billing processing status foreign key in the sales order fact table, which links to the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "ORD_RELTD_BLLNG_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_ITM_DLVRY_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales order item delivery processing status foreign key in the sales order fact table, which links to the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_ITM_DLVRY_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_ITM_OVRLL_DLVRY_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales order item overall delivery processing status foreign key in the sales order fact table, which links to the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_ITM_OVRLL_DLVRY_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SOLD_TO_BP_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sold to business partner foreign key in the sales order fact table, which links to the business partner dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SOLD_TO_BP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SOLD_TO_BP_BUSI_ADDR_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sold to business partner address foreign key in the sales order fact table, which links to the business address dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SOLD_TO_BP_BUSI_ADDR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SHIP_TO_BP_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the ship to business partner foreign key in the sales order fact table, which links to the business partner dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SHIP_TO_BP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SHIP_TO_BP_BUSI_ADDR_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the ship to business partner address foreign key in the sales order fact table, which links to the business address dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SHIP_TO_BP_BUSI_ADDR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_GRP_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the material group foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "MATL_GRP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "INTERNAL_ORD_NO_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the internal order number foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "INTERNAL_ORD_NO_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_REASON_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the order reason foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "ORD_REASON_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_INFO_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales order information foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_INFO_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PAYR_BP_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the payer business partner foreign key in the sales order fact table, which links to the business partner dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "PAYR_BP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PARTL_DLVRY_GRP_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the partial delivery group foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "PARTL_DLVRY_GRP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_SFTWR_SHPMNT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales order software shipment indicator foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_SFTWR_SHPMNT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_ITM_PHYSCL_DLVRY_IND_VAL_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the order item physical delivery indicator value foreign key in the sales order fact table, which links to the indicator values dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "ORD_ITM_PHYSCL_DLVRY_IND_VAL_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ITM_RJCTN_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the item rejection processing status foreign key in the sales order fact table, which links to the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "ITM_RJCTN_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SCHED_LINE_CAT_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the schedule line category foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SCHED_LINE_CAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SHPMNT_COMPLT_IND_VAL_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the shipment complete indicator value foreign key in the sales order fact table, which links to the indicator values dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SHPMNT_COMPLT_IND_VAL_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_QTY_UOM_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales quantity unit of measure foreign key in the sales order fact table, which links to the uom dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_QTY_UOM_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_BASE_UOM_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the material base unit of measure foreign key in the sales order fact table, which links to the uom dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "MATL_BASE_UOM_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "BKD_QTY_UOM_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the booked quantity unit of measure foreign key in the sales order fact table, which links to the uom dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "BKD_QTY_UOM_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_COMPLT_DLVRY_IND_VAL_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the order complete delivery indicator value foreign key in the sales order fact table, which links to the indicator values dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "ORD_COMPLT_DLVRY_IND_VAL_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "INCOTERMS_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the incoterms foreign key in the sales order fact table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "INCOTERMS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_ITM_CREATD_DTE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the order item created date foreign key in the sales order fact table, which links to the date dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "ORD_ITM_CREATD_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "BLLNG_DTE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the billing date foreign key in the sales order fact table, which links to the date dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "BLLNG_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_ITM_PLND_GOODS_ISS_DTE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the order line item planned goods issue date foreign key in the sales order fact table, which links to the date dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "ORD_ITM_PLND_GOODS_ISS_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_ITM_MATL_AVAIL_DTE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the sales order item material available date foreign key in the sales order fact table, which links to the date dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_ITM_MATL_AVAIL_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CMTD_DLVRY_DTE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the committed delivery date foreign key in the sales order fact table, which links to the date dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "CMTD_DLVRY_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CNFRMD_DLVRY_DTE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the confirmed delivery date foreign key in the sales order fact table, which links to the date dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "CNFRMD_DLVRY_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "REQSTD_DLVRY_DTE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the requested delivery date foreign key in the sales order fact table, which links to the date dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "REQSTD_DLVRY_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_ITM_LST_GOODS_ISS_DTE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the order line item last goods issue date foreign key in the sales order fact table, which links to the date dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "ORD_ITM_LST_GOODS_ISS_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "BKNG_DOC_DTE_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the booking document date foreign key in the sales order fact table, which links to the date dimension table, stored as a bigint",
            "isHidden": true,
            "sourceColumn": "BKNG_DOC_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "UOM_MLTPLR_NMRTR",
            "dataType": "double",
            "description": [
              "\"numerator of the ratio used to convert a quantity related to the given sales order line item from the Sales Unit Of Measure to the Material Base Unit Of Measure, stored as a decimal",
              "",
              "Quantity In Material Base Unit Of Measure = Quantity In Sales Unit Of Measure * (Unit Of Measure Multiplier Numerator / Unit Of Measure Multiplier Denominator)\""
            ],
            "isHidden": true,
            "sourceColumn": "UOM_MLTPLR_NMRTR",
            "encodingHint": "value"
          },
          {
            "name": "UOM_MLTPLR_DNMNTR",
            "dataType": "double",
            "description": [
              "\"denominator of the ratio used to convert a quantity related to the given sales order line item from the Sales Unit Of Measure to the Material Base Unit Of Measure, stored as a decimal",
              "",
              "Quantity In Material Base Unit Of Measure = Quantity In Sales Unit Of Measure * (Unit Of Measure Multiplier Numerator / Unit Of Measure Multiplier Denominator)\""
            ],
            "isHidden": true,
            "sourceColumn": "UOM_MLTPLR_DNMNTR",
            "encodingHint": "value"
          },
          {
            "name": "TRANS_NET_VAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "TRANS_NET_VAL",
            "encodingHint": "value"
          },
          {
            "name": "ITM_CUM_BKD_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ITM_CUM_BKD_QTY",
            "encodingHint": "value"
          },
          {
            "name": "GOODS_ISS_COST",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "GOODS_ISS_COST",
            "encodingHint": "value"
          },
          {
            "name": "CUM_CNFRMD_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CUM_CNFRMD_QTY",
            "encodingHint": "value"
          },
          {
            "name": "CUM_REQRD_DLVRY_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CUM_REQRD_DLVRY_QTY",
            "encodingHint": "value"
          },
          {
            "name": "ITM_BKD_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ITM_BKD_QTY",
            "encodingHint": "value"
          },
          {
            "name": "UNIT_NET_VALUE_PER_UOM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "UNIT_NET_VALUE_PER_UOM",
            "encodingHint": "value"
          },
          {
            "name": "OPEN_QTY_NET_VAL_IN_TRANS_CRNCY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "OPEN_QTY_NET_VAL_IN_TRANS_CRNCY",
            "encodingHint": "value"
          },
          {
            "name": "OPEN_QTY_GLBL_M_NET_VAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "OPEN_QTY_GLBL_M_NET_VAL",
            "encodingHint": "value"
          },
          {
            "name": "ITM_SLS_UOM_OPEN_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ITM_SLS_UOM_OPEN_QTY",
            "encodingHint": "value"
          },
          {
            "name": "ITM_BASE_UOM_OPEN_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ITM_BASE_UOM_OPEN_QTY",
            "encodingHint": "value"
          },
          {
            "name": "CUM_DLVRD_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CUM_DLVRD_QTY",
            "encodingHint": "value"
          },
          {
            "name": "GLBL_M_NET_VAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "GLBL_M_NET_VAL",
            "encodingHint": "value"
          },
          {
            "name": "GLBL_P_NET_VAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "GLBL_P_NET_VAL",
            "encodingHint": "value"
          },
          {
            "name": "DATE_DTE_KEY",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "DATE_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "FISCAL_YR_NUM",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FISCAL_YR_NUM",
            "encodingHint": "hash"
          },
          {
            "name": "Partition_Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Partition_Name",
            "encodingHint": "hash"
          },
          {
            "name": "PRFT_CTR_HRCHY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PRFT_CTR_HRCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_TYPE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MATL_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_SLS_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MATL_SLS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CUST_SLS_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CUST_SLS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "BKNG_EXTD_STD_DISC_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "BKNG_EXTD_STD_DISC_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "EXTD_LST_PRC_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "EXTD_LST_PRC_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "NET_VAL_BFR_TAX_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "NET_VAL_BFR_TAX_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "BILLBL_OUTBND_FRT_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "BILLBL_OUTBND_FRT_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "CUST_DISC_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CUST_DISC_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "HNDLG_CHRG_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HNDLG_CHRG_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "BKNG_EXTD_STD_DISC_GLBL_M_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "BKNG_EXTD_STD_DISC_GLBL_M_AMT",
            "encodingHint": "value"
          },
          {
            "name": "BKNG_EXTD_LST_PRC_GLBL_M_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "BKNG_EXTD_LST_PRC_GLBL_M_AMT",
            "encodingHint": "value"
          },
          {
            "name": "NET_VAL_BFR_TAX_GLBL_M_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "NET_VAL_BFR_TAX_GLBL_M_AMT",
            "encodingHint": "value"
          },
          {
            "name": "BILLB_OUTBND_FRT_GLBL_M_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "BILLB_OUTBND_FRT_GLBL_M_AMT",
            "encodingHint": "value"
          },
          {
            "name": "CUST_DISC_GLBL_M_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CUST_DISC_GLBL_M_AMT",
            "encodingHint": "value"
          },
          {
            "name": "HNDLG_CHRG_GLBL_M_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HNDLG_CHRG_GLBL_M_AMT",
            "encodingHint": "value"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_V_FACT_SALES_ORDERS_FIN_AAS = Source{[Schema=\"FIN\",Item=\"V_FACT_SALES_ORDERS_FIN_AAS\"]}[Data]",
                "in",
                "    FIN_V_FACT_SALES_ORDERS_FIN_AAS"
              ]
            }
          },
          {
            "name": "Current Fiscal Period",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT * FROM FIN.V_FACT_SALES_ORDERS_FIN_AAS ",
                "where Partition_Name ='Current Fiscal Period'\"",
                "    )",
                "in",
                "MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT * FROM FIN.V_FACT_SALES_ORDERS_FIN_AAS ",
                  "where Partition_Name ='Current Fiscal Period'\"",
                  "    )",
                  "in",
                  "MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Prev Fiscal Period",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT * FROM FIN.V_FACT_SALES_ORDERS_FIN_AAS ",
                "where Partition_Name ='Prev Fiscal Period'\"",
                "    )",
                "in",
                "MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT * FROM FIN.V_FACT_SALES_ORDERS_FIN_AAS ",
                  "where Partition_Name ='Prev Fiscal Period'\"",
                  "    )",
                  "in",
                  "MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "Current Fiscal Year",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT * FROM FIN.V_FACT_SALES_ORDERS_FIN_AAS ",
                "where Partition_Name ='Current Fiscal Year'\"",
                "    )",
                "in",
                "MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT * FROM FIN.V_FACT_SALES_ORDERS_FIN_AAS ",
                  "where Partition_Name ='Current Fiscal Year'\"",
                  "    )",
                  "in",
                  "MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear-1",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT * FROM FIN.V_FACT_SALES_ORDERS_FIN_AAS ",
                "where Partition_Name ='PrevFiscalYear-1'\"",
                "    )",
                "in",
                "MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT * FROM FIN.V_FACT_SALES_ORDERS_FIN_AAS ",
                  "where Partition_Name ='PrevFiscalYear-1'\"",
                  "    )",
                  "in",
                  "MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear-2",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT * FROM FIN.V_FACT_SALES_ORDERS_FIN_AAS ",
                "where Partition_Name ='PrevFiscalYear-2'\"",
                "    )",
                "in",
                "MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT * FROM FIN.V_FACT_SALES_ORDERS_FIN_AAS ",
                  "where Partition_Name ='PrevFiscalYear-2'\"",
                  "    )",
                  "in",
                  "MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear-3",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT * FROM FIN.V_FACT_SALES_ORDERS_FIN_AAS ",
                "where Partition_Name ='PrevFiscalYear-3'\"",
                "    )",
                "in",
                "MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT * FROM FIN.V_FACT_SALES_ORDERS_FIN_AAS ",
                  "where Partition_Name ='PrevFiscalYear-3'\"",
                  "    )",
                  "in",
                  "MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "PrevFiscalYear",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    MyQuery = ",
                "    Value.NativeQuery(",
                "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "       \"SELECT * FROM FIN.V_FACT_SALES_ORDERS_FIN_AAS ",
                "where Partition_Name ='PrevFiscalYear'",
                "\"",
                "    )",
                "in",
                "MyQuery"
              ]
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                  "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "    MyQuery = ",
                  "    Value.NativeQuery(",
                  "        #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                  "       \"SELECT * FROM FIN.V_FACT_SALES_ORDERS_FIN_AAS ",
                  "where Partition_Name ='PrevFiscalYear'",
                  "\"",
                  "    )",
                  "in",
                  "MyQuery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Booked Quantity",
            "description": [
              "\"number of units reserved to be sold, or hours of services planned, for the entire line item in the given sales document, based on the sales unit of measure for the material, stored as a decimal",
              "",
              "The Booked Quantity, also known as the Target Quantity in SAP, may be split across multiple sales documents, each created for a partial quantity.\""
            ],
            "expression": "Sum('Sales Orders Facts'[ITM_BKD_QTY])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures"
          },
          {
            "name": "Cumulative Booked Quantity",
            "description": [
              "\"number of units reserved to be sold, or hours of service planned, for the entire line item in the given sales document, based on the sales unit of measure for the material, stored as a decimal",
              "",
              "If the total quantity of a product on a sales order line item must be shipped in multiple partial deliveries, multiple schedule lines exist (one for each delivery) with the appropriate quantity and delivery date for each schedule line.  The Cumulative Booked Quantity is the rounded total quantity from all of schedule lines for the line item.\""
            ],
            "expression": " SUM('Sales Orders Facts'[ITM_CUM_BKD_QTY])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures"
          },
          {
            "name": "Net Value In Transaction Currency",
            "description": "the extended price to be invoiced to the customer for the quantity of products purchased including any applicable surcharges such as freight, stored as a decimal in the currency used for the transaction",
            "expression": "SUM('Sales Orders Facts'[TRANS_NET_VAL])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales Orders Bookings Measures",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Net Value In USD At M Rate",
            "description": [
              "\"the amount of the transaction in the given booking document line item, stored as a decimal in United States dollars (Currency Code = USD) using the monthly exchange rate in effect at the time of the transaction",
              "",
              "The Net Value In USD is calculated using the Net Value In Transaction Currency and the current monthly rate (\"\"M rate\"\"), which is the exchange rate between the local currency (as specified by the Local Currency Code) and USD as set by Rockwell Automation Finance each month.\""
            ],
            "expression": "SUM('Sales Orders Facts'[GLBL_M_NET_VAL])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales Orders Bookings Measures",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Booked Quantity by Billing Date",
            "expression": " CALCULATE(sum('Sales Orders Facts'[ITM_BKD_QTY]),USERELATIONSHIP('Sales Orders Facts'[BLLNG_DTE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures by Billing Date"
          },
          {
            "name": "Cumulative Booked Quantity by Billing Date",
            "expression": " CALCULATE(sum('Sales Orders Facts'[ITM_CUM_BKD_QTY]),USERELATIONSHIP('Sales Orders Facts'[BLLNG_DTE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures by Billing Date"
          },
          {
            "name": "Net Value by Billing Date",
            "expression": " CALCULATE(sum('Sales Orders Facts'[TRANS_NET_VAL]),USERELATIONSHIP('Sales Orders Facts'[BLLNG_DTE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales Orders Bookings Measures by Billing Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Booked Quantity by Confirmed Delivery Date",
            "expression": " CALCULATE(sum('Sales Orders Facts'[ITM_BKD_QTY]),USERELATIONSHIP('Sales Orders Facts'[CNFRMD_DLVRY_DTE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures by Conf Delivery Date"
          },
          {
            "name": "Cumulative Booked Quantity by Confirmed Delivery Date",
            "expression": " CALCULATE(sum('Sales Orders Facts'[ITM_CUM_BKD_QTY]),USERELATIONSHIP('Sales Orders Facts'[CNFRMD_DLVRY_DTE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures by Conf Delivery Date"
          },
          {
            "name": "Net Value by Confirmed Delivery Date",
            "expression": " CALCULATE(sum('Sales Orders Facts'[TRANS_NET_VAL]),USERELATIONSHIP('Sales Orders Facts'[CNFRMD_DLVRY_DTE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures by Conf Delivery Date"
          },
          {
            "name": "Booked Quantity by Requested Delivery Date",
            "expression": " CALCULATE(sum('Sales Orders Facts'[ITM_BKD_QTY]),USERELATIONSHIP('Sales Orders Facts'[REQSTD_DLVRY_DTE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures by Requested Delivery Date"
          },
          {
            "name": "Cumulative Booked Quantity by Requested Delivery Date",
            "expression": " CALCULATE(sum('Sales Orders Facts'[ITM_CUM_BKD_QTY]),USERELATIONSHIP('Sales Orders Facts'[REQSTD_DLVRY_DTE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures by Requested Delivery Date"
          },
          {
            "name": "Net Trans Value by Requested Delivery Date",
            "expression": " CALCULATE(sum('Sales Orders Facts'[TRANS_NET_VAL]),USERELATIONSHIP('Sales Orders Facts'[REQSTD_DLVRY_DTE_KEY],DIM_DATE[DATE_INT_KEY]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Sales Orders Bookings Measures by Requested Delivery Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Booking Extended Standard Discount Value In Document Currency Without Decimal Shift",
            "description": [
              "\"amount of the standard book (catalog) discount subtracted from the list price for the given product, stored as a decimal in the currency used for the transaction",
              "",
              "Extended Standard Book Discount Value In Document Currency = List Price In Transaction Currency * Standard Book Discount Multiplier * Booked Quantity",
              "",
              "For currencies such as the Korean won or the Chilean peso that do not use denominations in decimals for everyday transactions (that is, the smallest denomination of the currency is a single unit, such as one won or one peso), this field stores the value before any adjustments have been made to shift the decimal point to prepare the data for analysis.  (Other currencies do use denominations in decimals for everyday transactions, such as the United States dollar, which uses a cent, or 1/100th of a dollar.)\""
            ],
            "expression": "SUM('Sales Orders Facts'[BKNG_EXTD_STD_DISC_WTHOT_DCML_ADJMT_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures"
          },
          {
            "name": "Extended List Price Value In Document Currency Without Decimal Shift",
            "description": [
              "\"the undiscounted amount that would have been invoiced to the customer for the quantity of products or services purchased on the given booking document line item based on the list price, plus any applicable charges such as freight or handling, before taxes, stored as a decimal in the currency used for the transaction",
              "",
              "Extended List Price Value In Document Currency = List Price In Sales Organization Currency * Booked Quantity",
              "",
              "The Extended List Price Value In Document Currency is also known as the \"\"subtotal 2 amount\"\".",
              "",
              "For currencies such as the Korean won or the Chilean peso that do not use denominations in decimals for everyday transactions (that is, the smallest denomination of the currency is a single unit, such as one won or one peso), this field stores the value before any adjustments have been made to shift the decimal point to prepare the data for analysis.  (Other currencies do use denominations in decimals for everyday transactions, such as the United States dollar, which uses a cent, or 1/100th of a dollar.)\""
            ],
            "expression": " SUM('Sales Orders Facts'[EXTD_LST_PRC_WTHOT_DCML_ADJMT_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures"
          },
          {
            "name": "Net Before Tax Value In Document Currency Without Decimal Shift",
            "description": [
              "\"the extended price invoiced to the customer for the quantity of products or services purchased on the given booking document line item based on the negotiated (actual discounted) price, reduced by any deductions for standard book or negotiated price discounts, plus any applicable charges such as freight or handling, before taxes, stored as a decimal in the currency used for the transaction",
              "",
              "For currencies such as the Korean won or the Chilean peso that do not use denominations in decimals for everyday transactions (that is, the smallest denomination of the currency is a single unit, such as one won or one peso), this field stores the value before any adjustments have been made to shift the decimal point to prepare the data for analysis.  (Other currencies do use denominations in decimals for everyday transactions, such as the United States dollar, which uses a cent, or 1/100th of a dollar.)\""
            ],
            "expression": "SUM('Sales Orders Facts'[NET_VAL_BFR_TAX_WTHOT_DCML_ADJMT_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures"
          },
          {
            "name": "Billable Outbound Freight Costs In Document Currency Without Decimal Shift",
            "description": [
              "\"the total billable amount of the costs related to the transport of finished goods from the Rockwell Automation plant or distribution center to the delivery location specified by the customer (which may include costs or charges for packing, palletizing, documentation, loading, unloading, carriage, and insurance) for the given line item on the booking document, stored as a decimal in the currency used for the transaction",
              "",
              "In some cases, outbound freight costs are not billable (such as when shipping replacement parts under warranty or promotional/demo products).",
              "",
              "For currencies such as the Korean won or the Chilean peso that do not use denominations in decimals for everyday transactions (that is, the smallest denomination of the currency is a single unit, such as one won or one peso), this field stores the value before any adjustments have been made to shift the decimal point to prepare the data for analysis.  (Other currencies do use denominations in decimals for everyday transactions, such as the United States dollar, which uses a cent, or 1/100th of a dollar.)\""
            ],
            "expression": " SUM('Sales Orders Facts'[BILLBL_OUTBND_FRT_WTHOT_DCML_ADJMT_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures"
          },
          {
            "name": "Customer Discounts In Document Currency Without Decimal Shift",
            "description": [
              "\"amount of discounts applied to the given booking document line item (which may include discounts from special pricing agreements, sales discounts, settlement discounts, and quantity discounts, but not cash discounts, or the cost of any items given to the customer for free), stored as a decimal in the currency used for the transaction",
              "",
              "For currencies such as the Korean won or the Chilean peso that do not use denominations in decimals for everyday transactions (that is, the smallest denomination of the currency is a single unit, such as one won or one peso), this field stores the value before any adjustments have been made to shift the decimal point to prepare the data for analysis.  (Other currencies do use denominations in decimals for everyday transactions, such as the United States dollar, which uses a cent, or 1/100th of a dollar.)\""
            ],
            "expression": " SUM('Sales Orders Facts'[CUST_DISC_WTHOT_DCML_ADJMT_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures"
          },
          {
            "name": "Handling Charges In Document Currency Without Decimal Shift",
            "description": [
              "\"amount of any applicable charges (such as freight or delivery charges for engineered-to-order products) that will be charged to the customer if the product on the given sales document line item is returned for non-warranty reasons, stored as a decimal in the currency used for the transaction",
              "",
              "For currencies such as the Korean won or the Chilean peso that do not use denominations in decimals for everyday transactions (that is, the smallest denomination of the currency is a single unit, such as one won or one peso), this field stores the value before any adjustments have been made to shift the decimal point to prepare the data for analysis.  (Other currencies do use denominations in decimals for everyday transactions, such as the United States dollar, which uses a cent, or 1/100th of a dollar.)\""
            ],
            "expression": "SUM('Sales Orders Facts'[HNDLG_CHRG_WTHOT_DCML_ADJMT_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures"
          },
          {
            "name": "Booking Extended Standard Discount Value In USD At M Rate",
            "description": [
              "\"the amount that would have been invoiced to the customer for the quantity of products or services purchased on the given booking document line item and shipped, based on the standard discount, before taxes, stored as a decimal in United States dollars (Currency Code = USD) using the monthly exchange rate in effect at the time of the transaction",
              "",
              "Extended Standard Book Discount Value In USD At M Rate = List Price In USD Global Currency * Standard Book Discount Multiplier * Booked Quantity\""
            ],
            "expression": " SUM('Sales Orders Facts'[BKNG_EXTD_STD_DISC_GLBL_M_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures"
          },
          {
            "name": "Booking Extended List Price Value In USD At M Rate",
            "description": [
              "\"the undiscounted amount that would have been invoiced to the customer for the quantity of products or services purchased on the given booking document line item based on the list price, before taxes, stored as a decimal in United States dollars (Currency Code = USD) using the monthly exchange rate in effect at the time of the transaction",
              "",
              "Extended List Price Value In USD At M Rate = List Price In USD At M Rate * Booked Quantity",
              "",
              "The Extended List Price Value In Document Currency is also known as the \"\"subtotal 2 amount\"\".\""
            ],
            "expression": " SUM('Sales Orders Facts'[BKNG_EXTD_LST_PRC_GLBL_M_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures"
          },
          {
            "name": "Net Before Tax Value In USD At M Rate",
            "description": "the extended price invoiced to the customer for the quantity of products or services purchased on the given booking document line item based on the negotiated (actual discounted) price, reduced by any deductions for standard book or negotiated price discounts, plus any applicable charges such as freight or handling, before taxes, stored as a decimal in United States dollars (Currency Code = USD) using the monthly exchange rate in effect at the time of the transaction",
            "expression": " SUM('Sales Orders Facts'[NET_VAL_BFR_TAX_GLBL_M_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures"
          },
          {
            "name": "Billable Outbound Freight Costs In USD At M Rate",
            "description": [
              "\"the total billable amount of the costs related to the transport of finshed goods from the Rockwell Automation plant or distribution center to the delivery location specified by the customer (which may include costs or charges for packing, palletizing, documentation, loading, unloading, carriage, and insurance) for the given line item on the booking document, stored as a decimal in United States dollars (Currency Code = USD) using the monthly exchange rate in effect at the time of the transaction",
              "",
              "In some cases, outbound freight costs are not billable (such as when shipping replacement parts under warranty or promotional/demo products).\""
            ],
            "expression": "SUM('Sales Orders Facts'[BILLB_OUTBND_FRT_GLBL_M_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures"
          },
          {
            "name": "Customer Discounts In USD At M Rate",
            "description": "amount of discounts applied to the given booking document line item (which may include discounts from special pricing agreements, sales discounts, settlement discounts, and quantity discounts, but not cash discounts, or the cost of any items given to the customer for free), stored as a decimal in United States dollars (Currency Code = USD) using the monthly exchange rate in effect at the time of the transaction",
            "expression": "sum('Sales Orders Facts'[CUST_DISC_GLBL_M_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures"
          },
          {
            "name": "Handling Charges In USD At M Rate",
            "description": "amount of any applicable charges (such as freight or delivery charges for engineered-to-order products) that will be charged to the customer if the product on the given sales document line item is returned for non-warranty reasons, stored as a decimal in United States dollars (Currency Code = USD) using the monthly exchange rate in effect at the time of the transaction",
            "expression": "sum('Sales Orders Facts'[HNDLG_CHRG_GLBL_M_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Bookings Measures"
          }
        ]
      },
      {
        "name": "Billing Status",
        "columns": [
          {
            "name": "Processing Status Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Processing Status Key",
            "encodingHint": "hash"
          },
          {
            "name": "Processing Status Code",
            "dataType": "string",
            "sourceColumn": "Processing Status Code",
            "encodingHint": "hash"
          },
          {
            "name": "Processing Status Description",
            "dataType": "string",
            "sourceColumn": "Processing Status Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_PROCESSING_STATUS_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Order Item Physical Delivery Indicator Values",
        "columns": [
          {
            "name": "Indicator Values Key",
            "dataType": "string",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the indicator values dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Indicator Values Key",
            "encodingHint": "hash"
          },
          {
            "name": "Indicator Value",
            "dataType": "string",
            "description": "value (such as X for yes or null for no) used to indicate whether a given indicator is marked within a particular table, stored as a nvarchar",
            "sourceColumn": "Indicator Value",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Indicator Value Description",
            "dataType": "string",
            "description": "description associated with the value (such as X for yes or null for no) used to indicate whether a given indicator is marked within a particular table, stored as a nvarchar",
            "sourceColumn": "Indicator Value Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_IND_VALUES_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_IND_VALUES_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_IND_VALUES_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Delivery Group",
        "columns": [
          {
            "name": "Delivery Group Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the delivery group dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Delivery Group Key",
            "encodingHint": "hash"
          },
          {
            "name": "Delivery Group Code",
            "dataType": "string",
            "description": "code used to group the type of delivery allowed for a given order (such as C for Only Complete Delivery Allowed or blank for Partial Delivery Allowed), stored as a nvarchar",
            "sourceColumn": "Delivery Group Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Delivery Group Description",
            "dataType": "string",
            "description": "description associated with the code used to group the type of delivery allowed for a given order (such as C for Only Complete Delivery Allowed or blank for Partial Delivery Allowed), stored as a nvarchar",
            "sourceColumn": "Delivery Group Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_DELIVERY_GROUP_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_DELIVERY_GROUP_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_DELIVERY_GROUP_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Credit Hold Status",
        "columns": [
          {
            "name": "Credit Hold Status Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the credit hold status dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Credit Hold Status Key",
            "encodingHint": "hash"
          },
          {
            "name": "Credit Hold Status Code",
            "dataType": "string",
            "description": [
              "\"code in SAP  (see list below) for whether the central organizational unit that is responsible for granting and monitoring customer credit validated the credit status of the customer that placed the given sales order (and if so, whether credit has been extended), stored as a nvarchar",
              "",
              "blank = credit check was not executed/status was not set",
              "A = credit check was executed, document OK",
              "B = credit check was executed, document not OK",
              "C = credit check was executed, document not OK, partial release",
              "D = document released by credit representative\""
            ],
            "sourceColumn": "Credit Hold Status Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Credit Hold Status Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP  (see list below) for whether the central organizational unit that is responsible for granting and monitoring customer credit validated the credit status of the customer that placed the given sales order (and if so, whether credit has been extended), stored as a nvarchar",
              "",
              "blank = credit check was not executed/status was not set",
              "A = credit check was executed, document OK",
              "B = credit check was executed, document not OK",
              "C = credit check was executed, document not OK, partial release",
              "D = document released by credit representative\""
            ],
            "sourceColumn": "Credit Hold Status Description"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_CREDIT_HOLD_STATUS_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_CREDIT_HOLD_STATUS_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_CREDIT_HOLD_STATUS_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Sales Document Category",
        "columns": [
          {
            "name": "Sales Document Category Key",
            "dataType": "int64",
            "description": [
              "\"description associated with the category in SAP (see examples below) that is used to determine the correct billing for the customer, and (in conjunction with the Requirements Type Code) in the material requirements planning process in SAP, stored as a nvarchar",
              "",
              "Z5DI - RA Proxy for demo",
              "ZCT2 - RA Quote Config Matl",
              "ZENX = RA Returns - ETO",
              "ZEPN = RA Purch No BP",
              "ZET1 = RA ETO Material",
              "ZFXN = RA Ext Billing Item ",
              "ZPCF = 3P-LAB-Reg / OT Bill",
              "ZTAN - RA Standard Item",
              "",
              "Rockwell Automation Finance maintains a configuration table in SAP that links an Item Category and Service Type to an Activity Type.  The Item Category and Service Type are used to bill the customer​, and the Activity Type is used to charge labor to the service order.",
              "",
              "The Rockwell Automation Supply Chain organization maintains a configuration table in SAP that links an Item Category to a Requirement Type.  More than one Requirement Type may align to a single Sales Document Item Category.\""
            ],
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Sales Document Category Key",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Order Document Category Code",
            "dataType": "string",
            "description": [
              "\"code in SAP for the kind of transaction represented by the given sales document (see examples below), stored as a nvarchar",
              "",
              "A = Inquiry",
              "B = Quotation",
              "C = Order",
              "D = Item proposal",
              "E = Scheduling agreement",
              "F = Scheduling agreement with external s",
              "G = Contract",
              "H = Returns",
              "I = Order w/o charge",
              "J = Delivery",
              "K = Credit memo request",
              "L = Debit memo request",
              "M = Invoice",
              "N = Invoice cancellation",
              "O = Credit memo",
              "P = Debit memo",
              "Q = WMS transfer order",
              "R = Goods movement\""
            ],
            "sourceColumn": "Sales Order Document Category Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Order Document Category description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP for the kind of transaction represented by the given sales document (see examples below), stored as a nvarchar",
              "",
              "A = Inquiry",
              "B = Quotation",
              "C = Order",
              "D = Item proposal",
              "E = Scheduling agreement",
              "F = Scheduling agreement with external s",
              "G = Contract",
              "H = Returns",
              "I = Order w/o charge",
              "J = Delivery",
              "K = Credit memo request",
              "L = Debit memo request",
              "M = Invoice",
              "N = Invoice cancellation",
              "O = Credit memo",
              "P = Debit memo",
              "Q = WMS transfer order",
              "R = Goods movement\""
            ],
            "sourceColumn": "Sales Order Document Category description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_SLS_DOC_CAT_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_SLS_DOC_CAT_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_SLS_DOC_CAT_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Order Item Delivery Priority",
        "columns": [
          {
            "name": "Order Item Delivery Priority Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the order item delivery priority dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Order Item Delivery Priority Key",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Order Line Item Priority Code",
            "dataType": "string",
            "description": [
              "\"code in SAP (see examples below) for the priority of the given sales order line items, based on the customer's level of urgency as perceived by Sales or Customer Care at the time the sales order was created, stored as a nvarchar",
              "",
              "1 = Customer is in a down situation and needs the unit as soon as possible to resume production",
              "2 = Critical = Customer is not in a down situation, but needs the unit as soon as possible (for example, to prevent an impending down situation)",
              "3 = Appealed = Customer appealed the commit date that provided by Rockwell Automation",
              "5 = Delivery Improvement = Customer has requested an expedite and Rockwell Automation will attempt to do so",
              "9 = Normal = Customer will receive delivery by the current Rockwell Automation commit date\""
            ],
            "sourceColumn": "Sales Order Line Item Priority Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Order Item Delivery Priority Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP (see examples below) for the priority of the given sales order line items, based on the customer's level of urgency as perceived by Sales or Customer Care at the time the sales order was created, stored as a nvarchar",
              "",
              "1 = Customer is in a down situation and needs the unit as soon as possible to resume production",
              "2 = Critical = Customer is not in a down situation, but needs the unit as soon as possible (for example, to prevent an impending down situation)",
              "3 = Appealed = Customer appealed the commit date that provided by Rockwell Automation",
              "5 = Delivery Improvement = Customer has requested an expedite and Rockwell Automation will attempt to do so",
              "9 = Normal = Customer will receive delivery by the current Rockwell Automation commit date\""
            ],
            "sourceColumn": "Order Item Delivery Priority Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_ORD_ITM_DLVRY_PRTY_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_ORD_ITM_DLVRY_PRTY_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_ORD_ITM_DLVRY_PRTY_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Material Stock Status",
        "columns": [
          {
            "name": "Material Stock Status Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the material stock status dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Material Stock Status Key",
            "encodingHint": "hash"
          },
          {
            "name": "Material Stock Status Code",
            "dataType": "string",
            "description": [
              "\"code in SAP that identifies whether the material on the given sales order line item is stocked (01, for a Stock Part, meaning a part stored in inventory and used as needed) or not (02, for a Non Stock Part, meaning an assemble-to-order, configure-to-order, or engineer-to-order part that is made as needed to fulfill defined demand), stored as a string",
              "",
              "Known as Volume Rebate Group in SAP, this field is being used for a different purpose at Rockwell Automation.\""
            ],
            "sourceColumn": "Material Stock Status Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Material Stock Status Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP that identifies whether the material on the given sales order line item is stocked (01, for a Stock Part, meaning a part stored in inventory and used as needed) or not (02, for a Non Stock Part, meaning an assemble-to-order, configure-to-order, or engineer-to-order part that is made as needed to fulfill defined demand), stored as a string",
              "",
              "Known as Volume Rebate Group in SAP, this field is being used for a different purpose at Rockwell Automation.\""
            ],
            "sourceColumn": "Material Stock Status Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_MATL_STOCK_STATUS_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_MATL_STOCK_STATUS_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_MATL_STOCK_STATUS_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Manufacturing Requirement Type",
        "columns": [
          {
            "name": "Manufacturing Requirement Type Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the manufacturing requirement type dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Manufacturing Requirement Type Key",
            "encodingHint": "hash"
          },
          {
            "name": "Requirement Type Code",
            "dataType": "string",
            "description": [
              "\"code in SAP (see examples below) that identifies how the material will be manufactured, stored as a nvarchar",
              "",
              "ELVV = make-to-order variant with planning material consumption",
              "KEB = make-to-order for individual customer purchase order",
              "KEK = make-to-order configurable material",
              "KEL= make-to-order material variant",
              "KELV= make-to-order variant with planning material consumption",
              "KEV = make-to-order with consumption",
              "KEVV = make-to-order for individual customer with planning material consumption",
              "KL = manufactured by lot size for sales orders",
              "KMFA  = assemble-to-order with production order",
              "KMNP  = assemble-to-order with network order",
              "KMPA = assemble-to-order with process order",
              "KMPN = assemble-to-order with network/project",
              "KMSE = assemble-to-order planned order",
              "KP = make-to-order for project",
              "KPV = make-to-order with project planning\""
            ],
            "sourceColumn": "Requirement Type Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Requirement Type Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP (see examples below) that identifies how the material will be manufactured, stored as a nvarchar",
              "",
              "ELVV = make-to-order variant with planning material consumption",
              "KEB = make-to-order for individual customer purchase order",
              "KEK = make-to-order configurable material",
              "KEL= make-to-order material variant",
              "KELV= make-to-order variant with planning material consumption",
              "KEV = make-to-order with consumption",
              "KEVV = make-to-order for individual customer with planning material consumption",
              "KL = manufactured by lot size for sales orders",
              "KMFA  = assemble-to-order with production order",
              "KMNP  = assemble-to-order with network order",
              "KMPA = assemble-to-order with process order",
              "KMPN = assemble-to-order with network/project",
              "KMSE = assemble-to-order planned order",
              "KP = make-to-order for project",
              "KPV = make-to-order with project planning\""
            ],
            "sourceColumn": "Requirement Type Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_MFGNG_REQRMT_TYPE_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_MFGNG_REQRMT_TYPE_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_MFGNG_REQRMT_TYPE_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Order Item Rejection Reason",
        "columns": [
          {
            "name": "Order Item Rejection Reason Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the order item rejection reason dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Order Item Rejection Reason Key",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Order Line Item Rejection Reason Code",
            "dataType": "string",
            "description": [
              "\"code in SAP (see examples below) set by Customer Care to identify why the given sales order line item was rejected, stored as a nvarchar",
              "",
              "50 = transaction is being checked",
              "51 = cancelled in CRM Service",
              "Z1 = customer requested cancellation",
              "Z2 = return material not received by Rockwell Automation",
              "Z3 = return material not accepted by Rockwell Automation",
              "Z4 = breach of contract",
              "Z5 = commerical Reason",
              "Z6 = credit risk",
              "Z7 = replaced",
              "Z8 = cancelled automatically based on request",
              "Z9 = international ship-to not allowed",
              "ZD = material not accepted by DMI",
              "ZI = completed item PGI/invoice on other item",
              "ZR = material not allowed for this return",
              "ZS = standard pack size",
              "",
              "When a sales order line item is rejected, no further deliveries are allowed and therefore further planning for that sales order line item occurs.\""
            ],
            "sourceColumn": "Sales Order Line Item Rejection Reason Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Order Line Item Rejection Reason Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP (see examples below) set by Customer Care to identify why the given sales order line item was rejected, stored as a nvarchar",
              "",
              "50 = transaction is being checked",
              "51 = cancelled in CRM Service",
              "Z1 = customer requested cancellation",
              "Z2 = return material not received by Rockwell Automation",
              "Z3 = return material not accepted by Rockwell Automation",
              "Z4 = breach of contract",
              "Z5 = commerical Reason",
              "Z6 = credit risk",
              "Z7 = replaced",
              "Z8 = cancelled automatically based on request",
              "Z9 = international ship-to not allowed",
              "ZD = material not accepted by DMI",
              "ZI = completed item PGI/invoice on other item",
              "ZR = material not allowed for this return",
              "ZS = standard pack size",
              "",
              "When a sales order line item is rejected, no further deliveries are allowed and therefore further planning for that sales order line item occurs.\""
            ],
            "sourceColumn": "Sales Order Line Item Rejection Reason Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_ORD_ITM_REJECTION_REASON_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_ORD_ITM_REJECTION_REASON_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_ORD_ITM_REJECTION_REASON_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Sales Document Item Category",
        "columns": [
          {
            "name": "Sales Document Item Category Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the sales document item cateogry dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Sales Document Item Category Key",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Document Item Category",
            "dataType": "string",
            "description": [
              "\"category in SAP (see examples below) that is used to determine the correct billing for the customer, and (in conjunction with the Requirements Type Code) in the material requirements planning process in SAP, stored as a nvarchar",
              "",
              "Z5DI - RA Proxy for demo",
              "ZCT2 - RA Quote Config Matl",
              "ZENX = RA Returns - ETO",
              "ZEPN = RA Purch No BP",
              "ZET1 = RA ETO Material",
              "ZFXN = RA Ext Billing Item ",
              "ZPCF = 3P-LAB-Reg / OT Bill",
              "ZTAN - RA Standard Item",
              "",
              "Rockwell Automation Finance maintains a configuration table in SAP that links an Item Category and Service Type to an Activity Type.  The Item Category and Service Type are used to bill the customer​, and the Activity Type is used to charge labor to the service order.",
              "",
              "The Rockwell Automation Supply Chain organization maintains a configuration table in SAP that links an Item Category to a Requirement Type.  More than one Requirement Type may align to a single Sales Document Item Category.\""
            ],
            "sourceColumn": "Sales Document Item Category",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Document Item Category Description",
            "dataType": "string",
            "description": [
              "\"description associated with the category in SAP (see examples below) that is used to determine the correct billing for the customer, and (in conjunction with the Requirements Type Code) in the material requirements planning process in SAP, stored as a nvarchar",
              "",
              "Z5DI - RA Proxy for demo",
              "ZCT2 - RA Quote Config Matl",
              "ZENX = RA Returns - ETO",
              "ZEPN = RA Purch No BP",
              "ZET1 = RA ETO Material",
              "ZFXN = RA Ext Billing Item ",
              "ZPCF = 3P-LAB-Reg / OT Bill",
              "ZTAN - RA Standard Item",
              "",
              "Rockwell Automation Finance maintains a configuration table in SAP that links an Item Category and Service Type to an Activity Type.  The Item Category and Service Type are used to bill the customer​, and the Activity Type is used to charge labor to the service order.",
              "",
              "The Rockwell Automation Supply Chain organization maintains a configuration table in SAP that links an Item Category to a Requirement Type.  More than one Requirement Type may align to a single Sales Document Item Category.\""
            ],
            "sourceColumn": "Sales Document Item Category Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_SLS_DOC_ITM_CAT_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_SLS_DOC_ITM_CAT_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_SLS_DOC_ITM_CAT_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Shipping Condition",
        "columns": [
          {
            "name": "Shipping Condition Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the shipping condition dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Shipping Condition Key",
            "encodingHint": "hash"
          },
          {
            "name": "Shipping Condition Code",
            "dataType": "string",
            "description": "code in SAP for general shipping strategy and time frame to allow for delivering the product to the customer (such as Z1 for Standard, Z2 for Premium, Z3 for Urgent, or Z6 for Same Day), stored as a nvarchar",
            "sourceColumn": "Shipping Condition Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Shipping Condition Description",
            "dataType": "string",
            "description": "description associated with the code in SAP for general shipping strategy and time frame to allow for delivering the product to the customer (such as Z1 for Standard, Z2 for Premium, Z3 for Urgent, or Z6 for Same Day), stored as a nvarchar",
            "sourceColumn": "Shipping Condition Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_SHIPPING_CONDITION_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_SHIPPING_CONDITION_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_SHIPPING_CONDITION_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Shipping Route",
        "columns": [
          {
            "name": "Shipping Route Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the shipping route dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Shipping Route Key",
            "encodingHint": "hash"
          },
          {
            "name": "Shipping Route Code",
            "dataType": "string",
            "description": [
              "\"code in SAP (such as 102US1 - TWB to MKE for Multi Leg 1 day transit, or DGDOM1 for Dangerous Goods Domestic 1 Day) that indicates the selected means of delivering the product to the customer for the given sales order line item, and the maximum time planned for it to arrive at the customer ship to location, stored as a nvarchar",
              "",
              "Conditions such as the shipment source, shipment destination, and shipping conditions (time, type of goods, etc) factor into the selection of the Shipping Route Code.\""
            ],
            "sourceColumn": "Shipping Route Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Shipping Route Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP (such as  Multi Leg 1 Day Transit for code value 102US1 - TWB to MKE, or Dangerous Goods Domestic 1 Day for code value DGDOM1) that indicates the selected means of delivering the product to the customer for the given sales order line item, and the maximum time planned for it to arrive at the customer ship to location, stored as a nvarchar",
              "",
              "Conditions such as the shipment source, shipment destination, and shipping conditions (time, type of goods, etc) factor into the selection of the Shipping Route Code.\""
            ],
            "sourceColumn": "Shipping Route Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_SHIPPING_ROUTE_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_SHIPPING_ROUTE_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_SHIPPING_ROUTE_BusNm,{\"Shipping Route Key\", \"Shipping Route Code\", \"Shipping Route Description\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Shipping Point",
        "columns": [
          {
            "name": "Shipping Point Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the shipping point dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Shipping Point Key",
            "encodingHint": "hash"
          },
          {
            "name": "Shipping Point Code",
            "dataType": "string",
            "description": [
              "\"code in SAP for the physical location within the given plant (see examples below) from which the product for the given sales order line item shipped or will ship, stored as a nvarchar",
              "",
              "For physical location 101:",
              "101A = Standard collection of loading ramps",
              "101E = Returns",
              "101H = Internal",
              "",
              "For physical location 114:",
              "114A = Standard",
              "114B = Premium",
              "114C = Urgent",
              "114D = Receiving",
              "114E = Returns",
              "114F = CP (Consolidated Pack)",
              "114G = Same Day",
              "114H = Internal",
              "114I = Miscellanous Outbound",
              "114O = Ocean Shipping",
              "",
              "SAP automatically proposes the Shipping Point Code based on the plant, shipping condition, and loading group of parts treated similarly for shipping (such as loading group Z003 for products that are shipped more cost effectively via ocean freight).",
              "",
              "Products assigned to a loading group have a Shipping Point Code with an \"\"O\"\" suffix (such as 114O or 101O).  All other products (at least for now) default to loading group Z001, which is standard shipping.\""
            ],
            "sourceColumn": "Shipping Point Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Shipping Point Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP for the physical location within the given plant (see examples below) from which the product for the given sales order line item shipped or will ship, stored as a nvarchar",
              "For physical location 101:",
              "101A = Standard collection of loading ramps",
              "101E = Returns",
              "101H = Internal",
              "",
              "For physical location 114:",
              "114A = Standard",
              "114B = Premium",
              "114C = Urgent",
              "114D = Receiving",
              "114E = Returns",
              "114F = CP (Consolidated Pack)",
              "114G = Same Day",
              "114H = Internal",
              "114I = Miscellanous Outbound",
              "114O = Ocean Shipping",
              "",
              "SAP automatically proposes the Shipping Point Code based on the plant, shipping condition, and loading group of parts treated similarly for shipping (such as loading group Z003 for products that are shipped more cost effectively via ocean freight).",
              "",
              "Products assigned to a loading group have a Shipping Point Code with an \"\"O\"\" suffix (such as 114O or 101O).  All other products (at least for now) default to loading group Z001, which is standard shipping.\""
            ],
            "sourceColumn": "Shipping Point Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_SHIPPING_POINT_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_SHIPPING_POINT_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_SHIPPING_POINT_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Plant Storage Location",
        "columns": [
          {
            "name": "Plant Storage Location Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the plant storage location dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Plant Storage Location Key",
            "encodingHint": "hash"
          },
          {
            "name": "Plant Code",
            "dataType": "string",
            "description": "code in SAP for the physical location (4 digits stored as text, such as 1020 for Twinsburg, 1090 for the Champaign Distribution Center, 4000 for the Central European Distribution Center, and 4080 for the EMEA main service hub) at which the material for the given booking was received from the vendor or from another Rockwell Automation plant as part of an intercompany transfer, stored as a nvarchar",
            "sourceColumn": "Plant Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Material Storage Location Code",
            "dataType": "string",
            "description": "code in SAP for the physical place (4 digits stored as text, such as 0004 for General SpcMkt and 0500 for MAN Repairs within plant 1050 (Manchester)) at which the material to be shipped for the given sales order line item is stored in a plant, which may contain one or more storage locations, stored as a nvarchar",
            "sourceColumn": "Material Storage Location Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Material Storage Location Description",
            "dataType": "string",
            "description": "description associated with the code in SAP for the physical place (4 digits stored as text, such as 0004 for General SpcMkt and 0500 for MAN Repairs within plant 1050 (Manchester)) at which the material to be shipped for the given sales order line item is stored in a plant, which may contain one or more storage locations, stored as a nvarchar",
            "sourceColumn": "Material Storage Location Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PLANT_STORAGE_LOCATION_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_PLANT_STORAGE_LOCATION_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_PLANT_STORAGE_LOCATION_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Sales Order Delivery Block",
        "columns": [
          {
            "name": "Sales Order Delivery Block Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the sales order delivery block dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Sales Order Delivery Block Key",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Order Delivery Block Code",
            "dataType": "string",
            "description": [
              "\"code in SAP that identifies why shipments cannot occur for the given sales order or sales order line item (see examples below), stored as a nvarchar",
              "",
              "DF = Sales Area Del Flag",
              "Z1 = awaiting ETO customer return",
              "Z2 = indirect sale",
              "Z3 = non-returnable material",
              "Z4 = returnable material",
              "Z5 = MFG/ATP block",
              "Z6 = cancel request",
              "Z7 = material status block",
              "Z8 = large order hold",
              "Z9 = health check",
              "ZA = advance payment block",
              "ZG = block with inventory reserved",
              "ZM = material extension needed (usually for a new configured item)",
              "ZP = pricing issue block",
              "ZR = Product Manager restriction",
              "ZW = extended want date",
              "ZY = check assigned plan\""
            ],
            "sourceColumn": "Sales Order Delivery Block Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Order Delivery Block Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP that identifies why shipments cannot occur for the given sales order or sales order line item (see examples below), stored as a nvarchar",
              "",
              "DF = Sales Area Del Flag",
              "Z1 = awaiting ETO customer return",
              "Z2 = indirect sale",
              "Z3 = non-returnable material",
              "Z4 = returnable material",
              "Z5 = MFG/ATP block",
              "Z6 = cancel request",
              "Z7 = material status block",
              "Z8 = large order hold",
              "Z9 = health check",
              "ZA = advance payment block",
              "ZG = block with inventory reserved",
              "ZM = material extension needed (usually for a new configured item)",
              "ZP = pricing issue block",
              "ZR = Product Manager restriction",
              "ZW = extended want date",
              "ZY = check assigned plan\""
            ],
            "sourceColumn": "Sales Order Delivery Block Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_SLS_ORD_DELIVERY_BLOCK_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_SLS_ORD_DELIVERY_BLOCK_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_SLS_ORD_DELIVERY_BLOCK_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Order Reason",
        "columns": [
          {
            "name": "Order Reason Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the order reason dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Order Reason Key",
            "encodingHint": "hash"
          },
          {
            "name": "Order Reason Code",
            "dataType": "string",
            "description": [
              "\"code in SAP (see examples below) that identifies why the given order was placed, stored as a nvarchar",
              "",
              "ZA4 = Sales/Support Error",
              "ZA7 = NPSR",
              "ZB3 = Manufacturing Error",
              "ZBA = Billing Adjustment",
              "ZPE = Packaging Error",
              "ZS1 = Shipping Error",
              "ZSD = Shipping Damage",
              "ZSP = Special Return",
              "ZTU = Trade Up Program",
              "ZCW = Consumable Warranty\""
            ],
            "sourceColumn": "Order Reason Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Order Reason Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP (see examples below) that identifies why the given order was placed, stored as a nvarchar",
              "",
              "ZA4 = Sales/Support Error",
              "ZA7 = NPSR",
              "ZB3 = Manufacturing Error",
              "ZBA = Billing Adjustment",
              "ZPE = Packaging Error",
              "ZS1 = Shipping Error",
              "ZSD = Shipping Damage",
              "ZSP = Special Return",
              "ZTU = Trade Up Program",
              "ZCW = Consumable Warranty\""
            ],
            "sourceColumn": "Order Reason Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_ORD_REASON_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_ORD_REASON_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_ORD_REASON_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Schedule Line Category",
        "columns": [
          {
            "name": "Schedule Line Category Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the schedule line category dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Schedule Line Category Key",
            "encodingHint": "hash"
          },
          {
            "name": "Schedule Line Category",
            "dataType": "string",
            "description": [
              "\"code for the classification that identifies the given schedule line type (such as CB for Individual Purchase Order, CD for Without Delivery, CP for Material Resource Planning), stored as a nvarchar",
              "",
              "The Schedule Line Category determines, for example, whether GAINsystems passes on requirements to material resource planning (MRP). \""
            ],
            "sourceColumn": "Schedule Line Category",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Schedule Line Category Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code for the classification that identifies the given schedule line type (such as CB for Individual Purchase Order, CD for Without Delivery, CP for Material Resource Planning), stored as a nvarchar",
              "",
              "The Schedule Line Category determines, for example, whether GAINsystems passes on requirements to material resource planning (MRP). \""
            ],
            "sourceColumn": "Schedule Line Category Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_SCHED_LINE_CAT_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_SCHED_LINE_CAT_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_SCHED_LINE_CAT_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Business Address Ship To",
        "columns": [
          {
            "name": "Business Address Key",
            "dataType": "int64",
            "isUnique": true,
            "sourceColumn": "Business Address Key"
          },
          {
            "name": "Address Identifier",
            "dataType": "string",
            "sourceColumn": "Address Identifier"
          },
          {
            "name": "International Address Version Code",
            "dataType": "string",
            "sourceColumn": "International Address Version Code"
          },
          {
            "name": "Address Name 1",
            "dataType": "string",
            "sourceColumn": "Address Name 1"
          },
          {
            "name": "Address Name 2",
            "dataType": "string",
            "sourceColumn": "Address Name 2"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_BUSINESS_ADDRESS_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_BUSINESS_ADDRESS_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_BUSINESS_ADDRESS_BusNm,{\"Business Address Key\", \"Address Identifier\", \"International Address Version Code\", \"Address Name 1\", \"Address Name 2\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Booking Document",
        "columns": [
          {
            "name": "Booking Document Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the booking document dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Booking Document Key",
            "encodingHint": "hash"
          },
          {
            "name": "Booking Document Identifier",
            "dataType": "string",
            "description": "identifier for the document that represents a demand (\"reservation\") for products or services in SAP (such as a sales document or warranty return document), stored as a nvarchar",
            "sourceColumn": "Booking Document Identifier",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Booking Document Item Number",
            "dataType": "string",
            "description": "number of the line item in the given booking document in SAP, stored as an nvarchar",
            "sourceColumn": "Booking Document Item Number",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Reference Document Identifier",
            "dataType": "string",
            "sourceColumn": "Reference Document Identifier",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    SLS_ORD_V_DIM_BOOKING_DOC_BusNm = Source{[Schema=\"SLS_ORD\",Item=\"V_DIM_BOOKING_DOC_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(SLS_ORD_V_DIM_BOOKING_DOC_BusNm,{\"Booking Document Key\", \"Booking Document Identifier\", \"Booking Document Item Number\", \"Reference Document Identifier\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Customer Purchase Order",
        "columns": [
          {
            "name": "Customer Purchase Order Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the customer purchase order dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Customer Purchase Order Key",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Purchase Order Number",
            "dataType": "string",
            "description": [
              "\"number of the purchase order (PO) from the company (such as a distributor or an end customer) that purchased the product, stored as a nvarchar in the format dictated by the given customer",
              "",
              "The Rockwell Automation sales document includes the Customer PO Number, which is used as a reference to facilitate sales of products and services to the customer.\""
            ],
            "sourceColumn": "Customer Purchase Order Number",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    SLS_ORD_V_DIM_CUST_PURCHASE_ORD_BusNm = Source{[Schema=\"SLS_ORD\",Item=\"V_DIM_CUST_PURCHASE_ORD_BusNm\"]}[Data]",
                "in",
                "    SLS_ORD_V_DIM_CUST_PURCHASE_ORD_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Customer Collective Number",
        "columns": [
          {
            "name": "Customer Collective Number Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the customer collective number dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Customer Collective Number Key",
            "encodingHint": "hash"
          },
          {
            "name": "Customer Collective Number",
            "dataType": "string",
            "description": "category in SAP (a number such as 6838939, or a brief decription) defined by Customer Care or included in an EDI transaction to group related documents (such as customer inquiries, customer purchase orders, and sales documents) for the given customer to document that they are related and make them easier to retrieve, stored as a nvarchar",
            "sourceColumn": "Customer Collective Number",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    SLS_ORD_V_DIM_CUST_COLLECTIVE_NO_BusNm = Source{[Schema=\"SLS_ORD\",Item=\"V_DIM_CUST_COLLECTIVE_NO_BusNm\"]}[Data]",
                "in",
                "    SLS_ORD_V_DIM_CUST_COLLECTIVE_NO_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Sales Order Information",
        "columns": [
          {
            "name": "Sales Order Info Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the sales order information dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Sales Order Info Key",
            "encodingHint": "hash"
          },
          {
            "name": "Distribution Channel Code",
            "dataType": "string",
            "description": "code to identify the type of sale within a sales organization in SAP (such as 01 for Rockwell D/Channel, meaning direct sales), stored as a nvarchar",
            "sourceColumn": "Distribution Channel Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Delivery Group",
            "dataType": "string",
            "description": "free-form text that identifies a group of sales order line items that must be shipped together, based on what the customer is willing to accept in terms of partial deliveries, stored as a nvarchar",
            "sourceColumn": "Delivery Group",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Incoterms Details",
            "dataType": "string",
            "sourceColumn": "Incoterms Details",
            "encodingHint": "hash"
          },
          {
            "name": "Special Processing Code",
            "dataType": "string",
            "sourceColumn": "Special Processing Code",
            "encodingHint": "hash"
          },
          {
            "name": "SIC Code and Description ",
            "dataType": "string",
            "sourceColumn": "SIC Code and Description ",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    SLS_ORD_V_DIM_SLS_ORD_INFO_BusNm = Source{[Schema=\"SLS_ORD\",Item=\"V_DIM_SLS_ORD_INFO_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(SLS_ORD_V_DIM_SLS_ORD_INFO_BusNm,{\"Sales Order Info Key\", \"Distribution Channel Code\", \"Delivery Group\", \"Incoterms Details\", \"Special Processing Code\", \"SIC Code and Description \"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Internal Order Number",
        "columns": [
          {
            "name": "Internal Order Number Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the internal order number dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Internal Order Number Key",
            "encodingHint": "hash"
          },
          {
            "name": "Internal Order Number",
            "dataType": "string",
            "description": "code for the internal order generated in SAP ECC (such as 1205 for \"Milwaukee Inventory Transfer-062\", or 5000001 for \"CRM Service order related internal order\") to transfer financial data from SAP CRM to SAP ECC for the given service order, stored as a string",
            "sourceColumn": "Internal Order Number",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    SLS_ORD_V_DIM_INTERNAL_ORD_NO_BusNm = Source{[Schema=\"SLS_ORD\",Item=\"V_DIM_INTERNAL_ORD_NO_BusNm\"]}[Data]",
                "in",
                "    SLS_ORD_V_DIM_INTERNAL_ORD_NO_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Sales Order Software Shipment",
        "columns": [
          {
            "name": "Sales Order Software Shipment Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the sales order software shipment dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Sales Order Software Shipment Key",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Order Line Item Software Shipment Indicator",
            "dataType": "string",
            "description": [
              "\"indicator in SAP for whether the given sales order line item is for physical media with software that requires shipment, stored as a nvarchar",
              "",
              "RSHPD = Rockwell software that will be shipped or authorized for download by Rockwell Automation",
              "",
              "CSHPD = non-Rockwell software that will be shipped or authorized for download by Rockwell Automation",
              "",
              "blank = not software, or is software that will be shipped from a third-party vendor (such as HP)\""
            ],
            "sourceColumn": "Sales Order Line Item Software Shipment Indicator",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    SLS_ORD_V_DIM_SLS_ORD_SFTWR_SHPMNT_BusNm = Source{[Schema=\"SLS_ORD\",Item=\"V_DIM_SLS_ORD_SFTWR_SHPMNT_BusNm\"]}[Data]",
                "in",
                "    SLS_ORD_V_DIM_SLS_ORD_SFTWR_SHPMNT_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Booked Quantity Unit of Measure",
        "columns": [
          {
            "name": "UOM_KEY",
            "dataType": "int64",
            "isUnique": true,
            "sourceColumn": "UOM_KEY"
          },
          {
            "name": "UOM_CD",
            "dataType": "string",
            "sourceColumn": "UOM_CD"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_UNIT_OF_MEASURE_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_UNIT_OF_MEASURE_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_UNIT_OF_MEASURE_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Business Address Sold To",
        "columns": [
          {
            "name": "Business Address Key",
            "dataType": "int64",
            "isUnique": true,
            "sourceColumn": "Business Address Key"
          },
          {
            "name": "Address Identifier",
            "dataType": "string",
            "sourceColumn": "Address Identifier"
          },
          {
            "name": "International Address Version Code",
            "dataType": "string",
            "sourceColumn": "International Address Version Code"
          },
          {
            "name": "Address Name 1",
            "dataType": "string",
            "sourceColumn": "Address Name 1"
          },
          {
            "name": "Address Name 2",
            "dataType": "string",
            "sourceColumn": "Address Name 2"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_BUSINESS_ADDRESS_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_BUSINESS_ADDRESS_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_BUSINESS_ADDRESS_BusNm,{\"Business Address Key\", \"Address Identifier\", \"International Address Version Code\", \"Address Name 1\", \"Address Name 2\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Delivery Related Billing Status",
        "columns": [
          {
            "name": "Processing Status Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Processing Status Key",
            "encodingHint": "hash"
          },
          {
            "name": "Processing Status Code",
            "dataType": "string",
            "sourceColumn": "Processing Status Code",
            "encodingHint": "hash"
          },
          {
            "name": "Processing Status Description",
            "dataType": "string",
            "sourceColumn": "Processing Status Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_PROCESSING_STATUS_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Material Base Unit of Measure",
        "columns": [
          {
            "name": "UOM_KEY",
            "dataType": "int64",
            "isUnique": true,
            "sourceColumn": "UOM_KEY"
          },
          {
            "name": "UOM_CD",
            "dataType": "string",
            "sourceColumn": "UOM_CD"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_UNIT_OF_MEASURE_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_UNIT_OF_MEASURE_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_UNIT_OF_MEASURE_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Item Rejection Status",
        "columns": [
          {
            "name": "Processing Status Key",
            "dataType": "int64",
            "isUnique": true,
            "sourceColumn": "Processing Status Key"
          },
          {
            "name": "Processing Status Code",
            "dataType": "string",
            "sourceColumn": "Processing Status Code"
          },
          {
            "name": "Data Warehouse Effective From Date Time",
            "dataType": "dateTime",
            "sourceColumn": "Data Warehouse Effective From Date Time"
          },
          {
            "name": "Data Warehouse Effective To Date Time",
            "dataType": "dateTime",
            "sourceColumn": "Data Warehouse Effective To Date Time"
          },
          {
            "name": "Data Warehouse Created Date Time",
            "dataType": "dateTime",
            "sourceColumn": "Data Warehouse Created Date Time"
          },
          {
            "name": "Data Warehouse Created Process Name",
            "dataType": "string",
            "sourceColumn": "Data Warehouse Created Process Name"
          },
          {
            "name": "Data Warehouse Updated Date Time",
            "dataType": "dateTime",
            "sourceColumn": "Data Warehouse Updated Date Time"
          },
          {
            "name": "Data Warehouse Updated Process Name",
            "dataType": "string",
            "sourceColumn": "Data Warehouse Updated Process Name"
          },
          {
            "name": "Data Warehouse Batch Identifier",
            "dataType": "string",
            "sourceColumn": "Data Warehouse Batch Identifier"
          },
          {
            "name": "Processing Status Description",
            "dataType": "string",
            "sourceColumn": "Processing Status Description"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_PROCESSING_STATUS_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Order Complete Delivery Indicator Values",
        "columns": [
          {
            "name": "Indicator Values Key",
            "dataType": "string",
            "description": "description associated with the value (such as X for yes or null for no) used to indicate whether a given indicator is marked within a particular table, stored as a nvarchar",
            "isUnique": true,
            "sourceColumn": "Indicator Values Key",
            "encodingHint": "hash"
          },
          {
            "name": "Indicator Value",
            "dataType": "string",
            "description": "value (such as X for yes or null for no) used to indicate whether a given indicator is marked within a particular table, stored as a nvarchar",
            "sourceColumn": "Indicator Value",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Indicator Value Description",
            "dataType": "string",
            "description": "description associated with the value (such as X for yes or null for no) used to indicate whether a given indicator is marked within a particular table, stored as a nvarchar",
            "sourceColumn": "Indicator Value Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_IND_VALUES_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_IND_VALUES_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_IND_VALUES_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Sales Order Item Delivery Block",
        "columns": [
          {
            "name": "Sales Order Delivery Block Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the sales order delivery block dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Sales Order Delivery Block Key",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Order Delivery Block Code",
            "dataType": "string",
            "description": [
              "\"code in SAP that identifies why shipments cannot occur for the given sales order or sales order line item (see examples below), stored as a nvarchar",
              "",
              "DF = Sales Area Del Flag",
              "Z1 = awaiting ETO customer return",
              "Z2 = indirect sale",
              "Z3 = non-returnable material",
              "Z4 = returnable material",
              "Z5 = MFG/ATP block",
              "Z6 = cancel request",
              "Z7 = material status block",
              "Z8 = large order hold",
              "Z9 = health check",
              "ZA = advance payment block",
              "ZG = block with inventory reserved",
              "ZM = material extension needed (usually for a new configured item)",
              "ZP = pricing issue block",
              "ZR = Product Manager restriction",
              "ZW = extended want date",
              "ZY = check assigned plan\""
            ],
            "sourceColumn": "Sales Order Delivery Block Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Sales Order Delivery Block Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP that identifies why shipments cannot occur for the given sales order or sales order line item (see examples below), stored as a nvarchar",
              "",
              "DF = Sales Area Del Flag",
              "Z1 = awaiting ETO customer return",
              "Z2 = indirect sale",
              "Z3 = non-returnable material",
              "Z4 = returnable material",
              "Z5 = MFG/ATP block",
              "Z6 = cancel request",
              "Z7 = material status block",
              "Z8 = large order hold",
              "Z9 = health check",
              "ZA = advance payment block",
              "ZG = block with inventory reserved",
              "ZM = material extension needed (usually for a new configured item)",
              "ZP = pricing issue block",
              "ZR = Product Manager restriction",
              "ZW = extended want date",
              "ZY = check assigned plan\""
            ],
            "sourceColumn": "Sales Order Delivery Block Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_SLS_ORD_DELIVERY_BLOCK_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_SLS_ORD_DELIVERY_BLOCK_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_SLS_ORD_DELIVERY_BLOCK_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Order Related Billing Status",
        "columns": [
          {
            "name": "Processing Status Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Processing Status Key",
            "encodingHint": "hash"
          },
          {
            "name": "Processing Status Code",
            "dataType": "string",
            "description": [
              "\"code in SAP for the current processing status of the given order (see list below), stored as a nvarchar",
              "",
              "blank = not relevant",
              "A = not yet processed = zero quantity shipped",
              "B = partially processed = partial quantity shipped",
              "C = completely processed = entire quantity shipped\""
            ],
            "sourceColumn": "Processing Status Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Processing Status Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP for the current processing status of the given sales order (see list below), stored as a nvarchar",
              "",
              "blank = not relevant",
              "A = not yet processed = zero quantity shipped",
              "B = partially processed = partial quantity shipped",
              "C = completely processed = entire quantity shipped\""
            ],
            "sourceColumn": "Processing Status Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_PROCESSING_STATUS_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Payer Business Partner",
        "columns": [
          {
            "name": "BUSI_PRTNR_KEY",
            "dataType": "int64",
            "isUnique": true,
            "sourceColumn": "BUSI_PRTNR_KEY"
          },
          {
            "name": "Business Partner",
            "dataType": "string",
            "sourceColumn": "Business Partner"
          },
          {
            "name": "Account Code",
            "dataType": "string",
            "sourceColumn": "Account Code"
          },
          {
            "name": "Account Group Code",
            "dataType": "string",
            "sourceColumn": "Account Group Code"
          },
          {
            "name": "Address ",
            "dataType": "string",
            "sourceColumn": "Address "
          },
          {
            "name": "APR",
            "dataType": "string",
            "sourceColumn": "APR"
          },
          {
            "name": "Arch Flag",
            "dataType": "string",
            "sourceColumn": "Arch Flag"
          },
          {
            "name": "Strategic Account Level",
            "dataType": "string",
            "sourceColumn": "Strategic Account Level"
          },
          {
            "name": "BAS City Code",
            "dataType": "string",
            "sourceColumn": "BAS City Code"
          },
          {
            "name": "BAS City1",
            "dataType": "string",
            "sourceColumn": "BAS City1"
          },
          {
            "name": "BAS City2",
            "dataType": "string",
            "sourceColumn": "BAS City2"
          },
          {
            "name": "BAS Floor10",
            "dataType": "string",
            "sourceColumn": "BAS Floor10"
          },
          {
            "name": "BAS House Num1",
            "dataType": "string",
            "sourceColumn": "BAS House Num1"
          },
          {
            "name": "BAS House Num2",
            "dataType": "string",
            "sourceColumn": "BAS House Num2"
          },
          {
            "name": "BAS Location",
            "dataType": "string",
            "sourceColumn": "BAS Location"
          },
          {
            "name": "BAS PO Box City",
            "dataType": "string",
            "sourceColumn": "BAS PO Box City"
          },
          {
            "name": "BAS PO Box Location",
            "dataType": "string",
            "sourceColumn": "BAS PO Box Location"
          },
          {
            "name": "BAS PO Box Postal Code",
            "dataType": "string",
            "sourceColumn": "BAS PO Box Postal Code"
          },
          {
            "name": "BAS PO Box Registration",
            "dataType": "string",
            "sourceColumn": "BAS PO Box Registration"
          },
          {
            "name": "BAS Postal Code GIS",
            "dataType": "string",
            "sourceColumn": "BAS Postal Code GIS"
          },
          {
            "name": "BAS Postal Code",
            "dataType": "string",
            "sourceColumn": "BAS Postal Code"
          },
          {
            "name": "BAS Region Group",
            "dataType": "string",
            "sourceColumn": "BAS Region Group"
          },
          {
            "name": "BAS Str Suppl1",
            "dataType": "string",
            "sourceColumn": "BAS Str Suppl1"
          },
          {
            "name": "BAS Str Suppl2",
            "dataType": "string",
            "sourceColumn": "BAS Str Suppl2"
          },
          {
            "name": "BAS Str Suppl3",
            "dataType": "string",
            "sourceColumn": "BAS Str Suppl3"
          },
          {
            "name": "BAS Street",
            "dataType": "string",
            "sourceColumn": "BAS Street"
          },
          {
            "name": "BAS Street Code",
            "dataType": "string",
            "sourceColumn": "BAS Street Code"
          },
          {
            "name": "BAS Tax Jurisdiction Code",
            "dataType": "string",
            "sourceColumn": "BAS Tax Jurisdiction Code"
          },
          {
            "name": "BAS Telephone Number",
            "dataType": "string",
            "sourceColumn": "BAS Telephone Number"
          },
          {
            "name": "BAS Time Zone",
            "dataType": "string",
            "sourceColumn": "BAS Time Zone"
          },
          {
            "name": "Bill Blk",
            "dataType": "string",
            "sourceColumn": "Bill Blk"
          },
          {
            "name": "Birth Name",
            "dataType": "string",
            "sourceColumn": "Birth Name"
          },
          {
            "name": "BP Address Line0",
            "dataType": "string",
            "sourceColumn": "BP Address Line0"
          },
          {
            "name": "BP Address Line1",
            "dataType": "string",
            "sourceColumn": "BP Address Line1"
          },
          {
            "name": "BP Address Line2",
            "dataType": "string",
            "sourceColumn": "BP Address Line2"
          },
          {
            "name": "BP Address Line3",
            "dataType": "string",
            "sourceColumn": "BP Address Line3"
          },
          {
            "name": "BP Address Line4",
            "dataType": "string",
            "sourceColumn": "BP Address Line4"
          },
          {
            "name": "BP Address Line5",
            "dataType": "string",
            "sourceColumn": "BP Address Line5"
          },
          {
            "name": "BP Address Line6",
            "dataType": "string",
            "sourceColumn": "BP Address Line6"
          },
          {
            "name": "BP Address Line7",
            "dataType": "string",
            "sourceColumn": "BP Address Line7"
          },
          {
            "name": "BP Address Line8",
            "dataType": "string",
            "sourceColumn": "BP Address Line8"
          },
          {
            "name": "BP Address Line9",
            "dataType": "string",
            "sourceColumn": "BP Address Line9"
          },
          {
            "name": "Business Address Short",
            "dataType": "string",
            "sourceColumn": "Business Address Short"
          },
          {
            "name": "Business Address Short S",
            "dataType": "string",
            "sourceColumn": "Business Address Short S"
          },
          {
            "name": "BP BAS Care Of PO Code",
            "dataType": "string",
            "sourceColumn": "BP BAS Care Of PO Code"
          },
          {
            "name": "BP BAS Fax Display",
            "dataType": "string",
            "sourceColumn": "BP BAS Fax Display"
          },
          {
            "name": "BP BAS Room Number",
            "dataType": "string",
            "sourceColumn": "BP BAS Room Number"
          },
          {
            "name": "BP BAS Teliphone Display",
            "dataType": "string",
            "sourceColumn": "BP BAS Teliphone Display"
          },
          {
            "name": "BP BAS Trans Zone",
            "dataType": "string",
            "sourceColumn": "BP BAS Trans Zone"
          },
          {
            "name": "BP Business Unit Group",
            "dataType": "string",
            "sourceColumn": "BP Business Unit Group"
          },
          {
            "name": "BP Category",
            "dataType": "string",
            "sourceColumn": "BP Category"
          },
          {
            "name": "BP Comp",
            "dataType": "string",
            "sourceColumn": "BP Comp"
          },
          {
            "name": "BP Contract",
            "dataType": "string",
            "sourceColumn": "BP Contract"
          },
          {
            "name": "BP Customer",
            "dataType": "string",
            "sourceColumn": "BP Customer"
          },
          {
            "name": "BP Date From",
            "dataType": "dateTime",
            "sourceColumn": "BP Date From"
          },
          {
            "name": "BP Date To",
            "dataType": "dateTime",
            "sourceColumn": "BP Date To"
          },
          {
            "name": "BP GEO SRCID",
            "dataType": "string",
            "sourceColumn": "BP GEO SRCID"
          },
          {
            "name": "BP GUID",
            "dataType": "string",
            "sourceColumn": "BP GUID"
          },
          {
            "name": "BP IND SYS",
            "dataType": "string",
            "sourceColumn": "BP IND SYS"
          },
          {
            "name": "BP Legal Entity",
            "dataType": "string",
            "sourceColumn": "BP Legal Entity"
          },
          {
            "name": "BP Lock Status",
            "dataType": "int64",
            "sourceColumn": "BP Lock Status"
          },
          {
            "name": "BP MAR STA",
            "dataType": "string",
            "sourceColumn": "BP MAR STA"
          },
          {
            "name": "BP Name First",
            "dataType": "string",
            "sourceColumn": "BP Name First"
          },
          {
            "name": "BP Name Last",
            "dataType": "string",
            "sourceColumn": "BP Name Last"
          },
          {
            "name": "BP Name Last2",
            "dataType": "string",
            "sourceColumn": "BP Name Last2"
          },
          {
            "name": "BP Name Middle",
            "dataType": "string",
            "sourceColumn": "BP Name Middle"
          },
          {
            "name": "BP Relationship Status",
            "dataType": "int64",
            "sourceColumn": "BP Relationship Status"
          },
          {
            "name": "BP STP TRANS Zone",
            "dataType": "string",
            "sourceColumn": "BP STP TRANS Zone"
          },
          {
            "name": "Bpartner Ltext",
            "dataType": "string",
            "sourceColumn": "Bpartner Ltext"
          },
          {
            "name": "Bpartner Mtext",
            "dataType": "string",
            "sourceColumn": "Bpartner Mtext"
          },
          {
            "name": "Bpartner Stext",
            "dataType": "string",
            "sourceColumn": "Bpartner Stext"
          },
          {
            "name": "Branch Teretory",
            "dataType": "string",
            "sourceColumn": "Branch Teretory"
          },
          {
            "name": "Branch Teretory Text",
            "dataType": "string",
            "sourceColumn": "Branch Teretory Text"
          },
          {
            "name": "Cam Build20",
            "dataType": "string",
            "sourceColumn": "Cam Build20"
          },
          {
            "name": "Time of Last Change to the Transaction",
            "dataType": "string",
            "sourceColumn": "Time of Last Change to the Transaction"
          },
          {
            "name": "Transaction Last Changed By",
            "dataType": "string",
            "sourceColumn": "Transaction Last Changed By"
          },
          {
            "name": "Changed On",
            "dataType": "string",
            "sourceColumn": "Changed On"
          },
          {
            "name": "Country Code",
            "dataType": "string",
            "sourceColumn": "Country Code"
          },
          {
            "name": "BP Country Name",
            "dataType": "string",
            "sourceColumn": "BP Country Name"
          },
          {
            "name": "Created By",
            "dataType": "string",
            "sourceColumn": "Created By"
          },
          {
            "name": "Created On",
            "dataType": "string",
            "sourceColumn": "Created On"
          },
          {
            "name": "Created Time",
            "dataType": "string",
            "sourceColumn": "Created Time"
          },
          {
            "name": "Country Name",
            "dataType": "string",
            "sourceColumn": "Country Name"
          },
          {
            "name": "Customer Class",
            "dataType": "string",
            "sourceColumn": "Customer Class"
          },
          {
            "name": "Customer Type",
            "dataType": "string",
            "sourceColumn": "Customer Type"
          },
          {
            "name": "Customer Type Description",
            "dataType": "string",
            "sourceColumn": "Customer Type Description"
          },
          {
            "name": "Data Source Code",
            "dataType": "string",
            "sourceColumn": "Data Source Code"
          },
          {
            "name": "Del Blk",
            "dataType": "string",
            "sourceColumn": "Del Blk"
          },
          {
            "name": "Displn Ctrl",
            "dataType": "string",
            "sourceColumn": "Displn Ctrl"
          },
          {
            "name": "Displn Info",
            "dataType": "string",
            "sourceColumn": "Displn Info"
          },
          {
            "name": "Displn Mops",
            "dataType": "string",
            "sourceColumn": "Displn Mops"
          },
          {
            "name": "Displn Process",
            "dataType": "string",
            "sourceColumn": "Displn Process"
          },
          {
            "name": "Displn Safety",
            "dataType": "string",
            "sourceColumn": "Displn Safety"
          },
          {
            "name": "Dist Ttry",
            "dataType": "string",
            "sourceColumn": "Dist Ttry"
          },
          {
            "name": "Dist Ttry Text",
            "dataType": "string",
            "sourceColumn": "Dist Ttry Text"
          },
          {
            "name": "Email Address",
            "dataType": "string",
            "sourceColumn": "Email Address"
          },
          {
            "name": "Emp Resp",
            "dataType": "string",
            "sourceColumn": "Emp Resp"
          },
          {
            "name": "Emp Resp Text",
            "dataType": "string",
            "sourceColumn": "Emp Resp Text"
          },
          {
            "name": "BP Fax Number",
            "dataType": "string",
            "sourceColumn": "BP Fax Number"
          },
          {
            "name": "Gender",
            "dataType": "string",
            "sourceColumn": "Gender"
          },
          {
            "name": "Geo Loc Precisid",
            "dataType": "string",
            "sourceColumn": "Geo Loc Precisid"
          },
          {
            "name": "Glbl Agmt Ind",
            "dataType": "string",
            "sourceColumn": "Glbl Agmt Ind"
          },
          {
            "name": "Glbl Agmt Ind Text",
            "dataType": "string",
            "sourceColumn": "Glbl Agmt Ind Text"
          },
          {
            "name": "Global Ultimate Duns",
            "dataType": "string",
            "sourceColumn": "Global Ultimate Duns"
          },
          {
            "name": "Global Ultimate Duns Text",
            "dataType": "string",
            "sourceColumn": "Global Ultimate Duns Text"
          },
          {
            "name": "Hq Parent Duns",
            "dataType": "string",
            "sourceColumn": "Hq Parent Duns"
          },
          {
            "name": "Hq Parent Duns Text",
            "dataType": "string",
            "sourceColumn": "Hq Parent Duns Text"
          },
          {
            "name": "Ind Sector",
            "dataType": "string",
            "sourceColumn": "Ind Sector"
          },
          {
            "name": "Ind Vertical",
            "dataType": "string",
            "sourceColumn": "Ind Vertical"
          },
          {
            "name": "Indus Vertcl Desc",
            "dataType": "string",
            "sourceColumn": "Indus Vertcl Desc"
          },
          {
            "name": "Multi-Industry 1 Description",
            "dataType": "string",
            "sourceColumn": "Multi-Industry 1 Description"
          },
          {
            "name": "Industry1 Text",
            "dataType": "string",
            "sourceColumn": "Industry1 Text"
          },
          {
            "name": "Multi-Industry 2 Description",
            "dataType": "string",
            "sourceColumn": "Multi-Industry 2 Description"
          },
          {
            "name": "Industry2 Text",
            "dataType": "string",
            "sourceColumn": "Industry2 Text"
          },
          {
            "name": "Multi-Industry 3 Description",
            "dataType": "string",
            "sourceColumn": "Multi-Industry 3 Description"
          },
          {
            "name": "Industry3 Text",
            "dataType": "string",
            "sourceColumn": "Industry3 Text"
          },
          {
            "name": "Is Contact",
            "dataType": "string",
            "sourceColumn": "Is Contact"
          },
          {
            "name": "Langu Key",
            "dataType": "string",
            "sourceColumn": "Langu Key"
          },
          {
            "name": "Latitude",
            "dataType": "double",
            "sourceColumn": "Latitude"
          },
          {
            "name": "Life Cycle",
            "dataType": "string",
            "sourceColumn": "Life Cycle"
          },
          {
            "name": "Local Duns",
            "dataType": "string",
            "sourceColumn": "Local Duns"
          },
          {
            "name": "Local Duns Text",
            "dataType": "string",
            "sourceColumn": "Local Duns Text"
          },
          {
            "name": "Longitude",
            "dataType": "double",
            "sourceColumn": "Longitude"
          },
          {
            "name": "Name Co",
            "dataType": "string",
            "sourceColumn": "Name Co"
          },
          {
            "name": "Name Org1",
            "dataType": "string",
            "sourceColumn": "Name Org1"
          },
          {
            "name": "Name Org2",
            "dataType": "string",
            "sourceColumn": "Name Org2"
          },
          {
            "name": "Name Org3",
            "dataType": "string",
            "sourceColumn": "Name Org3"
          },
          {
            "name": "Name Org4",
            "dataType": "string",
            "sourceColumn": "Name Org4"
          },
          {
            "name": "Nationality",
            "dataType": "string",
            "sourceColumn": "Nationality"
          },
          {
            "name": "Oem Mach Subseg",
            "dataType": "string",
            "sourceColumn": "Oem Mach Subseg"
          },
          {
            "name": "Oem Mach Subseg Text",
            "dataType": "string",
            "sourceColumn": "Oem Mach Subseg Text"
          },
          {
            "name": "Oem Machine Cat",
            "dataType": "string",
            "sourceColumn": "Oem Machine Cat"
          },
          {
            "name": "Oem Machine Cat Text",
            "dataType": "string",
            "sourceColumn": "Oem Machine Cat Text"
          },
          {
            "name": "Oem Seg",
            "dataType": "string",
            "sourceColumn": "Oem Seg"
          },
          {
            "name": "Oem Seg Text",
            "dataType": "string",
            "sourceColumn": "Oem Seg Text"
          },
          {
            "name": "Oem Tier1",
            "dataType": "string",
            "sourceColumn": "Oem Tier1"
          },
          {
            "name": "Oem Tier1 Text",
            "dataType": "string",
            "sourceColumn": "Oem Tier1 Text"
          },
          {
            "name": "Ord Blk",
            "dataType": "string",
            "sourceColumn": "Ord Blk"
          },
          {
            "name": "Plant",
            "dataType": "string",
            "sourceColumn": "Plant"
          },
          {
            "name": "Business Partner PO Box",
            "dataType": "string",
            "sourceColumn": "Business Partner PO Box"
          },
          {
            "name": "Prdcat Gencat",
            "dataType": "string",
            "sourceColumn": "Prdcat Gencat"
          },
          {
            "name": "Prdcat Iapvcat",
            "dataType": "string",
            "sourceColumn": "Prdcat Iapvcat"
          },
          {
            "name": "Prdcat Prodplus Cat",
            "dataType": "string",
            "sourceColumn": "Prdcat Prodplus Cat"
          },
          {
            "name": "Prdcat Safetycat",
            "dataType": "string",
            "sourceColumn": "Prdcat Safetycat"
          },
          {
            "name": "Prdcat Safetycat E",
            "dataType": "string",
            "sourceColumn": "Prdcat Safetycat E"
          },
          {
            "name": "Prdcat Sscat",
            "dataType": "string",
            "sourceColumn": "Prdcat Sscat"
          },
          {
            "name": "Prim Accnt",
            "dataType": "string",
            "sourceColumn": "Prim Accnt"
          },
          {
            "name": "Prim Mkt",
            "dataType": "string",
            "sourceColumn": "Prim Mkt"
          },
          {
            "name": "Prim Mkt Text",
            "dataType": "string",
            "sourceColumn": "Prim Mkt Text"
          },
          {
            "name": "Business Partner RAAMP Code",
            "dataType": "string",
            "sourceColumn": "Business Partner RAAMP Code"
          },
          {
            "name": "Reg Ttry",
            "dataType": "string",
            "sourceColumn": "Reg Ttry"
          },
          {
            "name": "Reg Ttry Text",
            "dataType": "string",
            "sourceColumn": "Reg Ttry Text"
          },
          {
            "name": "Region",
            "dataType": "string",
            "sourceColumn": "Region"
          },
          {
            "name": "Sale Branch",
            "dataType": "string",
            "sourceColumn": "Sale Branch"
          },
          {
            "name": "Sales District Code",
            "dataType": "string",
            "sourceColumn": "Sales District Code"
          },
          {
            "name": "Sales Office Code",
            "dataType": "string",
            "sourceColumn": "Sales Office Code"
          },
          {
            "name": "Sales Purpose",
            "dataType": "string",
            "sourceColumn": "Sales Purpose"
          },
          {
            "name": "Sales Region",
            "dataType": "string",
            "sourceColumn": "Sales Region"
          },
          {
            "name": "Sales Sub-Region",
            "dataType": "string",
            "sourceColumn": "Sales Sub-Region"
          },
          {
            "name": "Sbureg Ttry",
            "dataType": "string",
            "sourceColumn": "Sbureg Ttry"
          },
          {
            "name": "Sbureg Ttry Text",
            "dataType": "string",
            "sourceColumn": "Sbureg Ttry Text"
          },
          {
            "name": "Search Term1",
            "dataType": "string",
            "sourceColumn": "Search Term1"
          },
          {
            "name": "Search Term2",
            "dataType": "string",
            "sourceColumn": "Search Term2"
          },
          {
            "name": "SIC Code",
            "dataType": "string",
            "sourceColumn": "SIC Code"
          },
          {
            "name": "SIC Code Text",
            "dataType": "string",
            "sourceColumn": "SIC Code Text"
          },
          {
            "name": "Source",
            "dataType": "string",
            "sourceColumn": "Source"
          },
          {
            "name": "SS Customer Type Code",
            "dataType": "string",
            "sourceColumn": "SS Customer Type Code"
          },
          {
            "name": "SS Customer Type Description",
            "dataType": "string",
            "sourceColumn": "SS Customer Type Description"
          },
          {
            "name": "Ss Indus Clfsn",
            "dataType": "string",
            "sourceColumn": "Ss Indus Clfsn"
          },
          {
            "name": "Ss Indus Desc",
            "dataType": "string",
            "sourceColumn": "Ss Indus Desc"
          },
          {
            "name": "SS SAP Sales Territory Code",
            "dataType": "string",
            "sourceColumn": "SS SAP Sales Territory Code"
          },
          {
            "name": "SS Sales APR Code",
            "dataType": "string",
            "sourceColumn": "SS Sales APR Code"
          },
          {
            "name": "SS Sales APR Description",
            "dataType": "string",
            "sourceColumn": "SS Sales APR Description"
          },
          {
            "name": "SS Sales Country Description",
            "dataType": "string",
            "sourceColumn": "SS Sales Country Description"
          },
          {
            "name": "SS Sales Country Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Country Code"
          },
          {
            "name": "SS Sales District Code",
            "dataType": "string",
            "sourceColumn": "SS Sales District Code"
          },
          {
            "name": "SS Sales District Description",
            "dataType": "string",
            "sourceColumn": "SS Sales District Description"
          },
          {
            "name": "SS Sales Office Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Office Code"
          },
          {
            "name": "SS Sales Organization Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Organization Code"
          },
          {
            "name": "Ss Sales Region",
            "dataType": "string",
            "sourceColumn": "Ss Sales Region"
          },
          {
            "name": "SS Sales Region Description",
            "dataType": "string",
            "sourceColumn": "SS Sales Region Description"
          },
          {
            "name": "SS Sales Territory Code",
            "dataType": "string",
            "sourceColumn": "SS Sales Territory Code"
          },
          {
            "name": "SS Sales Territory Description",
            "dataType": "string",
            "sourceColumn": "SS Sales Territory Description"
          },
          {
            "name": "Strategic Account",
            "dataType": "string",
            "sourceColumn": "Strategic Account"
          },
          {
            "name": "Strategic Account Description",
            "dataType": "string",
            "sourceColumn": "Strategic Account Description"
          },
          {
            "name": "Region Name",
            "dataType": "string",
            "sourceColumn": "Region Name"
          },
          {
            "name": "Tlkit Parentid",
            "dataType": "string",
            "sourceColumn": "Tlkit Parentid"
          },
          {
            "name": "Tlkit Prgnm",
            "dataType": "string",
            "sourceColumn": "Tlkit Prgnm"
          },
          {
            "name": "Tlkit Prgnm Text",
            "dataType": "string",
            "sourceColumn": "Tlkit Prgnm Text"
          },
          {
            "name": "Vas Code",
            "dataType": "string",
            "sourceColumn": "Vas Code"
          },
          {
            "name": "Attribute 4",
            "dataType": "string",
            "sourceColumn": "Attribute 4"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_BUSINESS_PARTNER_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_BUSINESS_PARTNER_BusNm\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(GLBL_V_DIM_BUSINESS_PARTNER_BusNm,{\"BUSI_PRTNR_KEY\", \"Business Partner\", \"Account Code\", \"Account Group Code\", \"Address \", \"APR\", \"Arch Flag\", \"Attribute 4\", \"Strategic Account Level\", \"BAS City Code\", \"BAS City1\", \"BAS City2\", \"BAS Floor10\", \"BAS House Num1\", \"BAS House Num2\", \"BAS Location\", \"BAS PO Box City\", \"BAS PO Box Location\", \"BAS PO Box Postal Code\", \"BAS PO Box Registration\", \"BAS Postal Code GIS\", \"BAS Postal Code\", \"BAS Region Group\", \"BAS Str Suppl1\", \"BAS Str Suppl2\", \"BAS Str Suppl3\", \"BAS Street\", \"BAS Street Code\", \"BAS Tax Jurisdiction Code\", \"BAS Telephone Number\", \"BAS Time Zone\", \"Bill Blk\", \"Birth Name\", \"BP Address Line0\", \"BP Address Line1\", \"BP Address Line2\", \"BP Address Line3\", \"BP Address Line4\", \"BP Address Line5\", \"BP Address Line6\", \"BP Address Line7\", \"BP Address Line8\", \"BP Address Line9\", \"Business Address Short\", \"Business Address Short S\", \"BP BAS Care Of PO Code\", \"BP BAS Fax Display\", \"BP BAS Room Number\", \"BP BAS Teliphone Display\", \"BP BAS Trans Zone\", \"BP Business Unit Group\", \"BP Category\", \"BP Comp\", \"BP Contract\", \"BP Customer\", \"BP Date From\", \"BP Date To\", \"BP GEO SRCID\", \"BP GUID\", \"BP IND SYS\", \"BP Legal Entity\", \"BP Lock Status\", \"BP MAR STA\", \"BP Name First\", \"BP Name Last\", \"BP Name Last2\", \"BP Name Middle\", \"BP Relationship Status\", \"BP STP TRANS Zone\", \"Bpartner Ltext\", \"Bpartner Mtext\", \"Bpartner Stext\", \"Branch Teretory\", \"Branch Teretory Text\", \"Cam Build20\", \"Time of Last Change to the Transaction\", \"Transaction Last Changed By\", \"Changed On\", \"Country Code\", \"BP Country Name\", \"Created By\", \"Created On\", \"Created Time\", \"Country Name\", \"Customer Class\", \"Customer Type\", \"Customer Type Description\", \"Data Source Code\", \"Del Blk\", \"Displn Ctrl\", \"Displn Info\", \"Displn Mops\", \"Displn Process\", \"Displn Safety\", \"Dist Ttry\", \"Dist Ttry Text\", \"Email Address\", \"Emp Resp\", \"Emp Resp Text\", \"BP Fax Number\", \"Gender\", \"Geo Loc Precisid\", \"Glbl Agmt Ind\", \"Glbl Agmt Ind Text\", \"Global Ultimate Duns\", \"Global Ultimate Duns Text\", \"Hq Parent Duns\", \"Hq Parent Duns Text\", \"Ind Sector\", \"Ind Vertical\", \"Indus Vertcl Desc\", \"Multi-Industry 1 Description\", \"Industry1 Text\", \"Multi-Industry 2 Description\", \"Industry2 Text\", \"Multi-Industry 3 Description\", \"Industry3 Text\", \"Is Contact\", \"Langu Key\", \"Latitude\", \"Life Cycle\", \"Local Duns\", \"Local Duns Text\", \"Longitude\", \"Name Co\", \"Name Org1\", \"Name Org2\", \"Name Org3\", \"Name Org4\", \"Nationality\", \"Oem Mach Subseg\", \"Oem Mach Subseg Text\", \"Oem Machine Cat\", \"Oem Machine Cat Text\", \"Oem Seg\", \"Oem Seg Text\", \"Oem Tier1\", \"Oem Tier1 Text\", \"Ord Blk\", \"Plant\", \"Business Partner PO Box\", \"Prdcat Gencat\", \"Prdcat Iapvcat\", \"Prdcat Prodplus Cat\", \"Prdcat Safetycat\", \"Prdcat Safetycat E\", \"Prdcat Sscat\", \"Prim Accnt\", \"Prim Mkt\", \"Prim Mkt Text\", \"Business Partner RAAMP Code\", \"Reg Ttry\", \"Reg Ttry Text\", \"Region\", \"Sale Branch\", \"Sales District Code\", \"Sales Office Code\", \"Sales Purpose\", \"Sales Region\", \"Sales Sub-Region\", \"Sbureg Ttry\", \"Sbureg Ttry Text\", \"Search Term1\", \"Search Term2\", \"SIC Code\", \"SIC Code Text\", \"Source\", \"SS Customer Type Code\", \"SS Customer Type Description\", \"Ss Indus Clfsn\", \"Ss Indus Desc\", \"SS SAP Sales Territory Code\", \"SS Sales APR Code\", \"SS Sales APR Description\", \"SS Sales Country Description\", \"SS Sales Country Code\", \"SS Sales District Code\", \"SS Sales District Description\", \"SS Sales Office Code\", \"SS Sales Organization Code\", \"Ss Sales Region\", \"SS Sales Region Description\", \"SS Sales Territory Code\", \"SS Sales Territory Description\", \"Strategic Account\", \"Strategic Account Description\", \"Region Name\", \"Tlkit Parentid\", \"Tlkit Prgnm\", \"Tlkit Prgnm Text\", \"Vas Code\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ]
      },
      {
        "name": "Shipment Complete Indicator values",
        "columns": [
          {
            "name": "Indicator Values Key",
            "dataType": "string",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the indicator values dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Indicator Values Key",
            "encodingHint": "hash"
          },
          {
            "name": "Indicator Value",
            "dataType": "string",
            "description": "value (such as X for yes or null for no) used to indicate whether a given indicator is marked within a particular table, stored as a nvarchar",
            "sourceColumn": "Indicator Value",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Indicator Value Description",
            "dataType": "string",
            "description": "description associated with the value (such as X for yes or null for no) used to indicate whether a given indicator is marked within a particular table, stored as a nvarchar",
            "sourceColumn": "Indicator Value Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_IND_VALUES_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_IND_VALUES_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_IND_VALUES_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Sales Order Delivery Status",
        "columns": [
          {
            "name": "Processing Status Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Processing Status Key",
            "encodingHint": "hash"
          },
          {
            "name": "Processing Status Code",
            "dataType": "string",
            "sourceColumn": "Processing Status Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Processing Status Description",
            "dataType": "string",
            "sourceColumn": "Processing Status Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_PROCESSING_STATUS_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Sales Order Item Delivery Status",
        "columns": [
          {
            "name": "Processing Status Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Processing Status Key",
            "encodingHint": "hash"
          },
          {
            "name": "Processing Status Code",
            "dataType": "string",
            "description": [
              "\"code in SAP for the current processing status of the given order (see list below), stored as a nvarchar",
              "",
              "blank = not relevant",
              "A = not yet processed = zero quantity shipped",
              "B = partially processed = partial quantity shipped",
              "C = completely processed = entire quantity shipped\""
            ],
            "sourceColumn": "Processing Status Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Processing Status Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP for the current processing status of the given sales order (see list below), stored as a nvarchar",
              "",
              "blank = not relevant",
              "A = not yet processed = zero quantity shipped",
              "B = partially processed = partial quantity shipped",
              "C = completely processed = entire quantity shipped\""
            ],
            "sourceColumn": "Processing Status Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_PROCESSING_STATUS_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Sales Order Item Overall Delivery Status",
        "columns": [
          {
            "name": "Processing Status Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Processing Status Key",
            "encodingHint": "hash"
          },
          {
            "name": "Processing Status Code",
            "dataType": "string",
            "sourceColumn": "Processing Status Code",
            "encodingHint": "hash"
          },
          {
            "name": "Processing Status Description",
            "dataType": "string",
            "sourceColumn": "Processing Status Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_PROCESSING_STATUS_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Sales Order Overall Delivery Status",
        "columns": [
          {
            "name": "Processing Status Key",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the processing status dimension table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "Processing Status Key",
            "encodingHint": "hash"
          },
          {
            "name": "Processing Status Code",
            "dataType": "string",
            "description": [
              "\"code in SAP for the current processing status of the given order (see list below), stored as a nvarchar",
              "",
              "blank = not relevant",
              "A = not yet processed = zero quantity shipped",
              "B = partially processed = partial quantity shipped",
              "C = completely processed = entire quantity shipped\""
            ],
            "sourceColumn": "Processing Status Code",
            "displayFolder": "Sales Orders Key Attributes",
            "encodingHint": "hash"
          },
          {
            "name": "Processing Status Description",
            "dataType": "string",
            "description": [
              "\"description associated with the code in SAP for the current processing status of the given sales order (see list below), stored as a nvarchar",
              "",
              "blank = not relevant",
              "A = not yet processed = zero quantity shipped",
              "B = partially processed = partial quantity shipped",
              "C = completely processed = entire quantity shipped\""
            ],
            "sourceColumn": "Processing Status Description",
            "encodingHint": "hash"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm = Source{[Schema=\"GLBL\",Item=\"V_DIM_PROCESSING_STATUS_BusNm\"]}[Data]",
                "in",
                "    GLBL_V_DIM_PROCESSING_STATUS_BusNm"
              ]
            }
          }
        ]
      },
      {
        "name": "Monthly Backlog Facts",
        "columns": [
          {
            "name": "FACT_BACKLOG_MTY_KEY",
            "dataType": "int64",
            "description": "identifier (a counter generated in increments of 1, such as 100, 101, 102…) for the primary key in the monthly backlog snapshot fact table, stored as a bigint",
            "isHidden": true,
            "isUnique": true,
            "sourceColumn": "FACT_BACKLOG_MTY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "BOOKING_DOC_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BOOKING_DOC_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CRNCY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CRNCY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRFT_CTR_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PRFT_CTR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PRFT_CTR_HRCHY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PRFT_CTR_HRCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MATL_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_TYPE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MATL_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_SLS_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MATL_SLS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PROD_HRCHY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PROD_HRCHY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PLANT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PLANT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_ITM_DLVRY_PRTY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ORD_ITM_DLVRY_PRTY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_STOCK_STATUS_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MATL_STOCK_STATUS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MFGNG_REQRMT_TYPE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MFGNG_REQRMT_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_ITM_REJECTION_REASON_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ORD_ITM_REJECTION_REASON_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_DOC_ITM_CAT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_DOC_ITM_CAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SHIPPING_POINT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SHIPPING_POINT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SHIPPING_ROUTE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SHIPPING_ROUTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PLANT_STORAGE_LOCATION_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PLANT_STORAGE_LOCATION_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORG_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_ORG_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "COMPANY_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "COMPANY_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_DOC_TYPE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_DOC_TYPE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_OFFICE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_OFFICE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SHIPPING_CONDITION_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SHIPPING_CONDITION_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_DELIVERY_BLOCK_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_DELIVERY_BLOCK_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_DOC_CAT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_DOC_CAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_DIST_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_DIST_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CONTROLLING_AREA_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CONTROLLING_AREA_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CREDIT_HOLD_STATUS_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CREDIT_HOLD_STATUS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CUST_COLLECTIVE_NO_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CUST_COLLECTIVE_NO_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CUST_PURCHASE_ORD_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CUST_PURCHASE_ORD_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CUST_SLS_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CUST_SLS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "BLLNG_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BLLNG_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CUST_ACCT_ASGNMT_GRP_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CUST_ACCT_ASGNMT_GRP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_ITM_DLVRY_BLOCK_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_ITM_DLVRY_BLOCK_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_DLVRY_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_DLVRY_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_OVRLL_DLVRY_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_OVRLL_DLVRY_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "DLVRY_RELTD_BLLNG_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DLVRY_RELTD_BLLNG_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_RELTD_BLLNG_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ORD_RELTD_BLLNG_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_ITM_DLVRY_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_ITM_DLVRY_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_ITM_OVRLL_DLVRY_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_ITM_OVRLL_DLVRY_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SOLD_TO_BP_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SOLD_TO_BP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SOLD_TO_BP_BUSI_ADDR_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SOLD_TO_BP_BUSI_ADDR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SHIP_TO_BP_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SHIP_TO_BP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SHIP_TO_BP_BUSI_ADDR_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SHIP_TO_BP_BUSI_ADDR_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_GRP_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MATL_GRP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "INTERNAL_ORD_NO_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "INTERNAL_ORD_NO_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_REASON_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ORD_REASON_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_INFO_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_INFO_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PAYR_BP_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PAYR_BP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "PARTL_DLVRY_GRP_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PARTL_DLVRY_GRP_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_SFTWR_SHPMNT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_SFTWR_SHPMNT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_ITM_PHYSCL_DLVRY_IND_VAL_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ORD_ITM_PHYSCL_DLVRY_IND_VAL_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ITM_RJCTN_PRCSNG_STAT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ITM_RJCTN_PRCSNG_STAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SCHED_LINE_CAT_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SCHED_LINE_CAT_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SHPMNT_COMPLT_IND_VAL_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SHPMNT_COMPLT_IND_VAL_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_QTY_UOM_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_QTY_UOM_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "MATL_BASE_UOM_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MATL_BASE_UOM_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "BKD_QTY_UOM_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BKD_QTY_UOM_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_COMPLT_DLVRY_IND_VAL_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ORD_COMPLT_DLVRY_IND_VAL_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "INCOTERMS_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "INCOTERMS_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_ITM_CREATD_DTE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ORD_ITM_CREATD_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "BLLNG_DTE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BLLNG_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_ITM_PLND_GOODS_ISS_DTE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ORD_ITM_PLND_GOODS_ISS_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "SLS_ORD_ITM_MATL_AVAIL_DTE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "SLS_ORD_ITM_MATL_AVAIL_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CMTD_DLVRY_DTE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CMTD_DLVRY_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "CNFRMD_DLVRY_DTE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CNFRMD_DLVRY_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "REQSTD_DLVRY_DTE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "REQSTD_DLVRY_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "ORD_ITM_LST_GOODS_ISS_DTE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ORD_ITM_LST_GOODS_ISS_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "BKNG_DOC_DTE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BKNG_DOC_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "UOM_MLTPLR_NMRTR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "UOM_MLTPLR_NMRTR",
            "encodingHint": "value"
          },
          {
            "name": "UOM_MLTPLR_DNMNTR",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "UOM_MLTPLR_DNMNTR",
            "encodingHint": "value"
          },
          {
            "name": "TRANS_NET_VAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "TRANS_NET_VAL",
            "encodingHint": "value"
          },
          {
            "name": "ITM_CUM_BKD_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ITM_CUM_BKD_QTY",
            "encodingHint": "value"
          },
          {
            "name": "GOODS_ISS_COST",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "GOODS_ISS_COST",
            "encodingHint": "value"
          },
          {
            "name": "CUM_CNFRMD_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CUM_CNFRMD_QTY",
            "encodingHint": "value"
          },
          {
            "name": "CUM_REQRD_DLVRY_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CUM_REQRD_DLVRY_QTY",
            "encodingHint": "value"
          },
          {
            "name": "ITM_BKD_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ITM_BKD_QTY",
            "encodingHint": "value"
          },
          {
            "name": "BKNG_EXTD_STD_DISC_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "BKNG_EXTD_STD_DISC_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "EXTD_LST_PRC_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "EXTD_LST_PRC_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "NET_VAL_BFR_TAX_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "NET_VAL_BFR_TAX_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "BILLBL_OUTBND_FRT_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "BILLBL_OUTBND_FRT_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "CUST_DISC_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CUST_DISC_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "HNDLG_CHRG_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HNDLG_CHRG_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "GLBL_BKNG_EXTD_STD_DISC_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "GLBL_BKNG_EXTD_STD_DISC_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "GLBL_EXTD_LST_PRC_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "GLBL_EXTD_LST_PRC_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "GLBL_NET_VAL_BFR_TAX_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "GLBL_NET_VAL_BFR_TAX_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "GLBL_BILLBL_OUTBND_FRT_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "GLBL_BILLBL_OUTBND_FRT_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "GLBL_CUST_DISC_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "GLBL_CUST_DISC_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "GLBL_HNDLG_CHRG_WTHOT_DCML_ADJMT_AMT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "GLBL_HNDLG_CHRG_WTHOT_DCML_ADJMT_AMT",
            "encodingHint": "value"
          },
          {
            "name": "UNIT_NET_VALUE_PER_UOM",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "UNIT_NET_VALUE_PER_UOM",
            "encodingHint": "value"
          },
          {
            "name": "OPEN_QTY_NET_VAL_IN_TRANS_CRNCY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "OPEN_QTY_NET_VAL_IN_TRANS_CRNCY",
            "encodingHint": "value"
          },
          {
            "name": "OPEN_QTY_GLBL_M_NET_VAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "OPEN_QTY_GLBL_M_NET_VAL",
            "encodingHint": "value"
          },
          {
            "name": "ITM_SLS_UOM_OPEN_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ITM_SLS_UOM_OPEN_QTY",
            "encodingHint": "value"
          },
          {
            "name": "ITM_BASE_UOM_OPEN_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ITM_BASE_UOM_OPEN_QTY",
            "encodingHint": "value"
          },
          {
            "name": "CUM_DLVRD_QTY",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "CUM_DLVRD_QTY",
            "encodingHint": "value"
          },
          {
            "name": "GLBL_M_NET_VAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "GLBL_M_NET_VAL",
            "encodingHint": "value"
          },
          {
            "name": "GLBL_P_NET_VAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "GLBL_P_NET_VAL",
            "encodingHint": "value"
          },
          {
            "name": "FACT_BACKLOG_MTY_DTE_KEY",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FACT_BACKLOG_MTY_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "DATE_DTE_KEY",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "DATE_DTE_KEY",
            "encodingHint": "hash"
          },
          {
            "name": "FISCAL_YR_NUM",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FISCAL_YR_NUM",
            "encodingHint": "hash"
          },
          {
            "name": "Partition_Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Partition_Name",
            "encodingHint": "value"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/azr-sql-dai-entdl-300 database windows net;azr-adw-dai-entdl-300\",",
                "    FIN_V_FACT_BACKLOG_MTY_FIN_AAS = Source{[Schema=\"FIN\",Item=\"V_FACT_BACKLOG_MTY_FIN_AAS\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(FIN_V_FACT_BACKLOG_MTY_FIN_AAS,{\"FACT_BACKLOG_MTY_KEY\", \"BOOKING_DOC_KEY\", \"CRNCY_KEY\", \"PRFT_CTR_KEY\", \"PRFT_CTR_HRCHY_KEY\", \"MATL_KEY\", \"MATL_TYPE_KEY\", \"MATL_SLS_KEY\", \"PROD_HRCHY_KEY\", \"PLANT_KEY\", \"ORD_ITM_DLVRY_PRTY_KEY\", \"MATL_STOCK_STATUS_KEY\", \"MFGNG_REQRMT_TYPE_KEY\", \"ORD_ITM_REJECTION_REASON_KEY\", \"SLS_DOC_ITM_CAT_KEY\", \"SHIPPING_POINT_KEY\", \"SHIPPING_ROUTE_KEY\", \"PLANT_STORAGE_LOCATION_KEY\", \"SLS_ORG_KEY\", \"COMPANY_KEY\", \"SLS_DOC_TYPE_KEY\", \"SLS_OFFICE_KEY\", \"SHIPPING_CONDITION_KEY\", \"SLS_ORD_DELIVERY_BLOCK_KEY\", \"SLS_DOC_CAT_KEY\", \"SLS_DIST_KEY\", \"CONTROLLING_AREA_KEY\", \"CREDIT_HOLD_STATUS_KEY\", \"CUST_COLLECTIVE_NO_KEY\", \"CUST_PURCHASE_ORD_KEY\", \"CUST_SLS_KEY\", \"BLLNG_PRCSNG_STAT_KEY\", \"CUST_ACCT_ASGNMT_GRP_KEY\", \"SLS_ORD_ITM_DLVRY_BLOCK_KEY\", \"SLS_ORD_DLVRY_PRCSNG_STAT_KEY\", \"SLS_ORD_OVRLL_DLVRY_PRCSNG_STAT_KEY\", \"DLVRY_RELTD_BLLNG_PRCSNG_STAT_KEY\", \"ORD_RELTD_BLLNG_PRCSNG_STAT_KEY\", \"SLS_ORD_ITM_DLVRY_PRCSNG_STAT_KEY\", \"SLS_ORD_ITM_OVRLL_DLVRY_PRCSNG_STAT_KEY\", \"SOLD_TO_BP_KEY\", \"SOLD_TO_BP_BUSI_ADDR_KEY\", \"SHIP_TO_BP_KEY\", \"SHIP_TO_BP_BUSI_ADDR_KEY\", \"MATL_GRP_KEY\", \"INTERNAL_ORD_NO_KEY\", \"ORD_REASON_KEY\", \"SLS_ORD_INFO_KEY\", \"PAYR_BP_KEY\", \"PARTL_DLVRY_GRP_KEY\", \"SLS_ORD_SFTWR_SHPMNT_KEY\", \"ORD_ITM_PHYSCL_DLVRY_IND_VAL_KEY\", \"ITM_RJCTN_PRCSNG_STAT_KEY\", \"SCHED_LINE_CAT_KEY\", \"SHPMNT_COMPLT_IND_VAL_KEY\", \"SLS_QTY_UOM_KEY\", \"MATL_BASE_UOM_KEY\", \"BKD_QTY_UOM_KEY\", \"ORD_COMPLT_DLVRY_IND_VAL_KEY\", \"INCOTERMS_KEY\", \"ORD_ITM_CREATD_DTE_KEY\", \"BLLNG_DTE_KEY\", \"ORD_ITM_PLND_GOODS_ISS_DTE_KEY\", \"SLS_ORD_ITM_MATL_AVAIL_DTE_KEY\", \"CMTD_DLVRY_DTE_KEY\", \"CNFRMD_DLVRY_DTE_KEY\", \"REQSTD_DLVRY_DTE_KEY\", \"ORD_ITM_LST_GOODS_ISS_DTE_KEY\", \"BKNG_DOC_DTE_KEY\", \"UOM_MLTPLR_NMRTR\", \"UOM_MLTPLR_DNMNTR\", \"TRANS_NET_VAL\", \"ITM_CUM_BKD_QTY\", \"GOODS_ISS_COST\", \"CUM_CNFRMD_QTY\", \"CUM_REQRD_DLVRY_QTY\", \"ITM_BKD_QTY\", \"BKNG_EXTD_STD_DISC_WTHOT_DCML_ADJMT_AMT\", \"EXTD_LST_PRC_WTHOT_DCML_ADJMT_AMT\", \"NET_VAL_BFR_TAX_WTHOT_DCML_ADJMT_AMT\", \"BILLBL_OUTBND_FRT_WTHOT_DCML_ADJMT_AMT\", \"CUST_DISC_WTHOT_DCML_ADJMT_AMT\", \"HNDLG_CHRG_WTHOT_DCML_ADJMT_AMT\", \"GLBL_BKNG_EXTD_STD_DISC_WTHOT_DCML_ADJMT_AMT\", \"GLBL_EXTD_LST_PRC_WTHOT_DCML_ADJMT_AMT\", \"GLBL_NET_VAL_BFR_TAX_WTHOT_DCML_ADJMT_AMT\", \"GLBL_BILLBL_OUTBND_FRT_WTHOT_DCML_ADJMT_AMT\", \"GLBL_CUST_DISC_WTHOT_DCML_ADJMT_AMT\", \"GLBL_HNDLG_CHRG_WTHOT_DCML_ADJMT_AMT\", \"UNIT_NET_VALUE_PER_UOM\", \"OPEN_QTY_NET_VAL_IN_TRANS_CRNCY\", \"OPEN_QTY_GLBL_M_NET_VAL\", \"ITM_SLS_UOM_OPEN_QTY\", \"ITM_BASE_UOM_OPEN_QTY\", \"CUM_DLVRD_QTY\", \"GLBL_M_NET_VAL\", \"GLBL_P_NET_VAL\", \"FACT_BACKLOG_MTY_DTE_KEY\", \"DATE_DTE_KEY\", \"FISCAL_YR_NUM\", \"Partition_Name\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Net Value In Transaction Currency (Backlog)",
            "description": "the extended price to be invoiced to the customer for the quantity of products purchased including any applicable surcharges such as freight, stored as a decimal in the currency used for the transaction",
            "expression": " SUM('Monthly Backlog Facts'[TRANS_NET_VAL])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Backlogs"
          },
          {
            "name": "Cumulative Booked Quantity (Backlog)",
            "description": [
              "\"number of units reserved to be sold, or hours of service planned, for the entire line item in the given sales document, based on the sales unit of measure for the material, stored as a decimal",
              "",
              "If the total quantity of a product on a sales order line item must be shipped in multiple partial deliveries, multiple schedule lines exist (one for each delivery) with the appropriate quantity and delivery date for each schedule line.  The Cumulative Booked Quantity is the rounded total quantity from all of schedule lines for the line item.\""
            ],
            "expression": "SUM('Monthly Backlog Facts'[ITM_CUM_BKD_QTY])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Backlogs"
          },
          {
            "name": "Booked Quantity (Backlog)",
            "description": [
              "\"number of units reserved to be sold, or hours of services planned, for the entire line item in the given sales document, based on the sales unit of measure for the material, stored as a decimal",
              "",
              "The Booked Quantity, also known as the Target Quantity in SAP, may be split across multiple sales documents, each created for a partial quantity.\""
            ],
            "expression": " sum('Monthly Backlog Facts'[ITM_BKD_QTY])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Backlogs"
          },
          {
            "name": "Booking Extended Standard Discount Value In Document Currency Without Decimal Shift (Backlog)",
            "description": [
              "\"amount of the standard book (catalog) discount subtracted from the list price for the given product, stored as a decimal in the currency used for the transaction",
              "",
              "Extended Standard Book Discount Value In Document Currency = List Price In Transaction Currency * Standard Book Discount Multiplier * Booked Quantity",
              "",
              "For currencies such as the Korean won or the Chilean peso that do not use denominations in decimals for everyday transactions (that is, the smallest denomination of the currency is a single unit, such as one won or one peso), this field stores the value before any adjustments have been made to shift the decimal point to prepare the data for analysis.  (Other currencies do use denominations in decimals for everyday transactions, such as the United States dollar, which uses a cent, or 1/100th of a dollar.)\""
            ],
            "expression": " sum('Monthly Backlog Facts'[BKNG_EXTD_STD_DISC_WTHOT_DCML_ADJMT_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Backlogs"
          },
          {
            "name": "Extended List Price Value In Document Currency Without Decimal Shift (Backlog)",
            "description": [
              "\"the undiscounted amount that would have been invoiced to the customer for the quantity of products or services purchased on the given booking document line item based on the list price, plus any applicable charges such as freight or handling, before taxes, stored as a decimal in the currency used for the transaction",
              "",
              "Extended List Price Value In Document Currency = List Price In Sales Organization Currency * Booked Quantity",
              "",
              "The Extended List Price Value In Document Currency is also known as the \"\"subtotal 2 amount\"\".",
              "",
              "For currencies such as the Korean won or the Chilean peso that do not use denominations in decimals for everyday transactions (that is, the smallest denomination of the currency is a single unit, such as one won or one peso), this field stores the value before any adjustments have been made to shift the decimal point to prepare the data for analysis.  (Other currencies do use denominations in decimals for everyday transactions, such as the United States dollar, which uses a cent, or 1/100th of a dollar.)\""
            ],
            "expression": "SUM('Monthly Backlog Facts'[EXTD_LST_PRC_WTHOT_DCML_ADJMT_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Backlogs"
          },
          {
            "name": "Net Before Tax Value In Document Currency Without Decimal Shift (Backlog)",
            "description": [
              "\"the extended price invoiced to the customer for the quantity of products or services purchased on the given booking document line item based on the negotiated (actual discounted) price, reduced by any deductions for standard book or negotiated price discounts, plus any applicable charges such as freight or handling, before taxes, stored as a decimal in the currency used for the transaction",
              "",
              "For currencies such as the Korean won or the Chilean peso that do not use denominations in decimals for everyday transactions (that is, the smallest denomination of the currency is a single unit, such as one won or one peso), this field stores the value before any adjustments have been made to shift the decimal point to prepare the data for analysis.  (Other currencies do use denominations in decimals for everyday transactions, such as the United States dollar, which uses a cent, or 1/100th of a dollar.)\""
            ],
            "expression": " SUM('Monthly Backlog Facts'[NET_VAL_BFR_TAX_WTHOT_DCML_ADJMT_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Backlogs"
          },
          {
            "name": "Billable Outbound Freight Costs In Document Currency Without Decimal Shift (Backlog)",
            "description": [
              "\"the total billable amount of the costs related to the transport of finished goods from the Rockwell Automation plant or distribution center to the delivery location specified by the customer (which may include costs or charges for packing, palletizing, documentation, loading, unloading, carriage, and insurance) for the given line item on the booking document, stored as a decimal in the currency used for the transaction",
              "",
              "In some cases, outbound freight costs are not billable (such as when shipping replacement parts under warranty or promotional/demo products).",
              "",
              "For currencies such as the Korean won or the Chilean peso that do not use denominations in decimals for everyday transactions (that is, the smallest denomination of the currency is a single unit, such as one won or one peso), this field stores the value before any adjustments have been made to shift the decimal point to prepare the data for analysis.  (Other currencies do use denominations in decimals for everyday transactions, such as the United States dollar, which uses a cent, or 1/100th of a dollar.)\""
            ],
            "expression": "SUM('Monthly Backlog Facts'[BILLBL_OUTBND_FRT_WTHOT_DCML_ADJMT_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Backlogs"
          },
          {
            "name": "Customer Discounts In Document Currency Without Decimal Shift (Backlog)",
            "description": [
              "\"amount of discounts applied to the given booking document line item (which may include discounts from special pricing agreements, sales discounts, settlement discounts, and quantity discounts, but not cash discounts, or the cost of any items given to the customer for free), stored as a decimal in the currency used for the transaction",
              "",
              "For currencies such as the Korean won or the Chilean peso that do not use denominations in decimals for everyday transactions (that is, the smallest denomination of the currency is a single unit, such as one won or one peso), this field stores the value before any adjustments have been made to shift the decimal point to prepare the data for analysis.  (Other currencies do use denominations in decimals for everyday transactions, such as the United States dollar, which uses a cent, or 1/100th of a dollar.)\""
            ],
            "expression": " SUM('Monthly Backlog Facts'[CUST_DISC_WTHOT_DCML_ADJMT_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Backlogs"
          },
          {
            "name": "Handling Charges In Document Currency Without Decimal Shift (Backlog)",
            "description": [
              "\"amount of any applicable charges (such as freight or delivery charges for engineered-to-order products) that will be charged to the customer if the product on the given sales document line item is returned for non-warranty reasons, stored as a decimal in the currency used for the transaction",
              "",
              "For currencies such as the Korean won or the Chilean peso that do not use denominations in decimals for everyday transactions (that is, the smallest denomination of the currency is a single unit, such as one won or one peso), this field stores the value before any adjustments have been made to shift the decimal point to prepare the data for analysis.  (Other currencies do use denominations in decimals for everyday transactions, such as the United States dollar, which uses a cent, or 1/100th of a dollar.)\""
            ],
            "expression": " SUM('Monthly Backlog Facts'[HNDLG_CHRG_WTHOT_DCML_ADJMT_AMT])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Backlogs"
          },
          {
            "name": "Open Quantity Net Value in Transaction Currency",
            "description": "the extended price to be invoiced to the customer for the open quantity of products purchased for the given sales order line item, including any applicable surcharges such as freight, stored as a decimal in the currency used for the transaction",
            "expression": " SUM('Monthly Backlog Facts'[OPEN_QTY_NET_VAL_IN_TRANS_CRNCY])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Backlogs"
          },
          {
            "name": "Open Quantity Net Value in USD at M Rate",
            "description": [
              "\"the amount of the transaction for the open quantity in the given sales order line item, stored as a decimal in United States dollars (Currency Code = USD) using the monthly exchange rate in effect at the time of the transaction",
              "",
              "The Net Value In USD is calculated using the Net Value In Transaction Currency and the current monthly rate (\"\"M rate\"\"), which is the exchange rate between the local currency (as specified by the Local Currency Code) and USD as set by Rockwell Automation Finance each month.\""
            ],
            "expression": "SUM('Monthly Backlog Facts'[OPEN_QTY_GLBL_M_NET_VAL])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Backlogs"
          },
          {
            "name": "Open Quantity In Sales Unit Of Measure",
            "description": [
              "\"number of items remaining to be shipped for the given booking document line item, based on the sales unit of measure, stored as a decimal",
              "",
              "Open Quantity = Booked Quantity - Cumulative Delivered Quantity\""
            ],
            "expression": " SUM('Monthly Backlog Facts'[ITM_SLS_UOM_OPEN_QTY])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Backlogs"
          },
          {
            "name": "Open Quantity In Material Base Unit Of Measure",
            "description": [
              "\"number of items remaining to be shipped for the given booking document line item, based on the material base unit of measure, stored as a decimal",
              "",
              "Open Quantity = Booked Quantity - Cumulative Delivered Quantity\""
            ],
            "expression": "SUM('Monthly Backlog Facts'[ITM_BASE_UOM_OPEN_QTY])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Backlogs"
          },
          {
            "name": "Net Value In USD At M Rate (Backlog)",
            "description": [
              "\"the amount of the transaction in the given booking document line item, stored as a decimal in United States dollars (Currency Code = USD) using the monthly exchange rate in effect at the time of the transaction",
              "",
              "The Net Value In USD is calculated using the Net Value In Transaction Currency and the current monthly rate (\"\"M rate\"\"), which is the exchange rate between the local currency (as specified by the Local Currency Code) and USD as set by Rockwell Automation Finance each month.\""
            ],
            "expression": " SUM('Monthly Backlog Facts'[GLBL_M_NET_VAL])",
            "formatString": "0.00",
            "displayFolder": "Sales Orders Backlogs"
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "739ad326-b53d-41ee-98b5-117291c0353d",
        "fromTable": "FACT_COPA",
        "fromColumn": "COMPANY_KEY",
        "toTable": "DIM_COMPANY",
        "toColumn": "COMPANY_KEY"
      },
      {
        "name": "e2d03d19-7466-42e5-8221-3086effbe223",
        "fromTable": "FACT_COPA",
        "fromColumn": "COPA_KEY",
        "toTable": "DIM_COPA",
        "toColumn": "COPA_KEY"
      },
      {
        "name": "fcb40dd6-f0ee-4cbf-a2f7-df1805177cc9",
        "fromTable": "FACT_COPA",
        "fromColumn": "CRNCY_TYPE_KEY",
        "toTable": "DIM_CRNCY_TYPE",
        "toColumn": "CRNCY_TYPE_KEY"
      },
      {
        "name": "671224f0-209d-4f9a-83ac-dd4c6ceb1936",
        "fromTable": "FACT_COPA",
        "fromColumn": "CUST_ACCT_ASGNMT_GRP_KEY",
        "toTable": "DIM_CUST_ACCT_ASGNMT_GRP",
        "toColumn": "CUST_ACCT_ASGNMT_GRP_KEY"
      },
      {
        "name": "0c331d5e-a694-4eec-9db3-60cb861d6759",
        "fromTable": "FACT_COPA",
        "fromColumn": "INCOTERMS_KEY",
        "toTable": "DIM_INCOTERMS",
        "toColumn": "INCOTERMS_KEY"
      },
      {
        "name": "3212bd88-fe2e-4b2f-bbd1-c18c0394bd6e",
        "fromTable": "FACT_COPA",
        "fromColumn": "FUNCL_AREA_KEY",
        "toTable": "DIM_FUNCL_AREA",
        "toColumn": "FUNCL_AREA_KEY"
      },
      {
        "name": "9da822f3-d78b-4a8d-94a2-056cb622bfa9",
        "fromTable": "FACT_COPA",
        "fromColumn": "MATL_TYPE_KEY",
        "toTable": "DIM_MATL_TYPE",
        "toColumn": "MATL_TYPE_KEY"
      },
      {
        "name": "9d3639ab-ddf1-4f4a-babe-f392ac3131fb",
        "fromTable": "FACT_COPA",
        "fromColumn": "MATL_GRP_KEY",
        "toTable": "DIM_MATL_GRP",
        "toColumn": "MATL_GRP_KEY"
      },
      {
        "name": "932235a3-9052-45d9-a80e-9a193beb8cb6",
        "fromTable": "FACT_COPA",
        "fromColumn": "PLANT_KEY",
        "toTable": "DIM_PLANT",
        "toColumn": "PLANT_KEY"
      },
      {
        "name": "8ff620e9-6078-44be-b84a-326d1deaea77",
        "fromTable": "FACT_COPA",
        "fromColumn": "PRFT_CTR_KEY",
        "toTable": "DIM_PRFT_CTR",
        "toColumn": "PRFT_CTR_KEY"
      },
      {
        "name": "33f1d0bf-3ffc-45b9-8538-ffb7f33eef49",
        "fromTable": "FACT_COPA",
        "fromColumn": "PROD_HRCHY_KEY",
        "toTable": "DIM_PROD_HRCHY",
        "toColumn": "PROD_HRCHY_KEY"
      },
      {
        "name": "a9f1fadc-525b-44e2-8d45-55dec1b23b7b",
        "fromTable": "FACT_COPA",
        "fromColumn": "SLS_DIST_KEY",
        "toTable": "DIM_SLS_DIST",
        "toColumn": "SLS_DIST_KEY"
      },
      {
        "name": "cb2caef8-ed5e-4a94-86eb-31c056b2c206",
        "fromTable": "FACT_COPA",
        "fromColumn": "SLS_DOC_TYPE_KEY",
        "toTable": "DIM_SLS_DOC_TYPE",
        "toColumn": "SLS_DOC_TYPE_KEY"
      },
      {
        "name": "d63c703b-41a4-4367-a09d-5abd836127b5",
        "fromTable": "FACT_COPA",
        "fromColumn": "SLS_ORG_KEY",
        "toTable": "DIM_SLS_ORG",
        "toColumn": "SLS_ORG_KEY"
      },
      {
        "name": "b66ac1e6-54e6-4eb6-8b44-daedea0afb81",
        "fromTable": "FACT_COPA",
        "fromColumn": "COPA_CODES_1_KEY",
        "toTable": "DIM_COPA_CODES_1",
        "toColumn": "COPA_CODES_1_KEY"
      },
      {
        "name": "5f719432-bd2b-446d-b2f5-32028937ee0d",
        "fromTable": "FACT_COPA",
        "fromColumn": "COPA_CODES_2_KEY",
        "toTable": "DIM_COPA_CODES_2",
        "toColumn": "COPA_CODES_2_KEY"
      },
      {
        "name": "2ac957e9-eb58-45d1-ab56-176e9f3ffbeb",
        "fromTable": "FACT_COPA",
        "fromColumn": "COPA_HEADER_KEY",
        "toTable": "DIM_COPA_HEADER",
        "toColumn": "COPA_HEADER_KEY"
      },
      {
        "name": "52f3c1f2-9d0d-403a-b77b-3121f6710364",
        "fromTable": "FACT_COPA",
        "fromColumn": "COPA_TEXT_KEY",
        "toTable": "DIM_COPA_TEXT",
        "toColumn": "COPA_TEXT_KEY"
      },
      {
        "name": "9880bc41-938e-4afd-9c39-ac78035e305b",
        "fromTable": "FACT_COPA",
        "fromColumn": "PRFT_CTR_HRCHY_KEY",
        "toTable": "DIM_PRFT_CTR_HRCHY",
        "toColumn": "PRFT_CTR_HRCHY_KEY"
      },
      {
        "name": "28fde564-33c0-4949-bb67-d7a41232a83a",
        "fromTable": "FACT_COPA",
        "fromColumn": "BUSI_ACT_TYPE_KEY",
        "toTable": "DIM_BUSI_ACCT_TYPE",
        "toColumn": "BUSI_ACT_TYPE_KEY"
      },
      {
        "name": "e656eae7-afe8-4ef4-9f24-c6499b19534a",
        "fromTable": "FACT_COPA",
        "fromColumn": "MTL_KEY",
        "toTable": "DIM_MATL",
        "toColumn": "MATL_KEY"
      },
      {
        "name": "96e2e980-e0de-4974-8482-46bb5a45a29a",
        "fromTable": "FACT_COPA",
        "fromColumn": "SOLD_TO_CUST_KEY",
        "toTable": "DIM_CUST_SLS",
        "toColumn": "CUST_SLS_KEY"
      },
      {
        "name": "060d453e-72b1-411a-a1b2-20a61bd66d7a",
        "fromTable": "FACT_COPA",
        "fromColumn": "SETLMNT_QTY_UOM_KEY",
        "toTable": "DIM_UNIT_OF_MEASURE",
        "toColumn": "UOM_KEY"
      },
      {
        "name": "0a714452-091c-4bc1-8d69-f25bc2f0e43f",
        "fromTable": "FACT_COPA",
        "fromColumn": "PRODN_ORD_DLVRD_QTY_UOM_KEY",
        "toTable": "DIM_UNIT_OF_MEASURE",
        "toColumn": "UOM_KEY",
        "isActive": false
      },
      {
        "name": "b5019189-9195-4058-ade9-7bfc44860ca7",
        "fromTable": "DIM_CRNCY_CVRSN",
        "fromColumn": "TO_CRNCY_KEY",
        "toTable": "DIM_CRNCY",
        "toColumn": "CRNCY_KEY"
      },
      {
        "name": "b34367d9-3056-4d77-be94-03ae4061841f",
        "fromTable": "FACT_COPA",
        "fromColumn": "SLS_OFFICE_KEY",
        "toTable": "DIM_SLS_OFFICE",
        "toColumn": "SLS_OFFICE_KEY"
      },
      {
        "name": "119c070c-b6f2-4e8e-af73-27f87e8dd1d0",
        "fromTable": "FACT_COPA",
        "fromColumn": "COUNTRY_KEY",
        "toTable": "DIM_COUNTRY",
        "toColumn": "COUNTRY_KEY"
      },
      {
        "name": "42fd0654-b8ad-4677-93ee-339d6a49806b",
        "fromTable": "FACT_COPA",
        "fromColumn": "CTRY_SUBDIV_KEY",
        "toTable": "DIM_CNTRY_SUBDIV",
        "toColumn": "CTRY_SUBDIV_KEY"
      },
      {
        "name": "e83d6d3b-a3b9-4ff1-a81a-6e4552a97418",
        "fromTable": "FACT_COPA",
        "fromColumn": "MIDRANGE_KEY",
        "toTable": "DIM_MIDRANGE",
        "toColumn": "MIDRANGE_KEY"
      },
      {
        "name": "cc9aeb10-f069-42ac-bb80-435074812490",
        "fromTable": "FACT_COPA",
        "fromColumn": "COPA_HEADER_3_KEY",
        "toTable": "DIM_COPA_HEADER_3",
        "toColumn": "COPA_HEADER_3_KEY"
      },
      {
        "name": "7cdeee62-6a77-47db-9a35-1ba5d2ed4103",
        "fromTable": "FACT_COPA",
        "fromColumn": "COPA_HEADER_2_KEY",
        "toTable": "DIM_COPA_HEADER_2",
        "toColumn": "COPA_HEADER_2_KEY"
      },
      {
        "name": "c71e971b-71f8-4608-a974-86e4741819ac",
        "fromTable": "FACT_COPA",
        "fromColumn": "COUNTRY_REGION_KEY",
        "toTable": "DIM_COUNTRY_REGION",
        "toColumn": "COUNTRY_REGION_KEY"
      },
      {
        "name": "bddc24c3-2c7c-4e45-9a02-c0988353b779",
        "fromTable": "FACT_COPA",
        "fromColumn": "POSTNG_DATE_INT_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY"
      },
      {
        "name": "2f2d55b4-fe86-474d-a3b0-b52cb7c94d25",
        "fromTable": "FACT_COPA",
        "fromColumn": "CRNCY_KEY",
        "toTable": "DIM_SOURCE_CRNCY",
        "toColumn": "CRNCY_KEY"
      },
      {
        "name": "d20d7c78-4755-4f55-a835-f76db6764740",
        "fromTable": "FACT_COPA",
        "fromColumn": "SHP_TO_BP_KEY",
        "toTable": "DIM_BUSINESS_PARTNER_SHIP_TO",
        "toColumn": "BUSI_PRTNR_KEY"
      },
      {
        "name": "94d8557c-68b5-42ab-bf5a-d12168c1022d",
        "fromTable": "FACT_COPA",
        "fromColumn": "HYPERION_PRFT_CTR_HRCHY_KEY",
        "toTable": "DIM_HYPERION_PRFT_CTR_HRCHY",
        "toColumn": "HYPERION_PRFT_CTR_HRCHY_KEY"
      },
      {
        "name": "b59b6022-477a-47ec-bb19-1bd2cd5b450c",
        "fromTable": "FACT_COPA",
        "fromColumn": "MATL_SLS_KEY",
        "toTable": "DIM_MATL_SLS",
        "toColumn": "MATL_SLS_KEY"
      },
      {
        "name": "4eae20c5-d324-4736-afe7-1245c8fbe028",
        "fromTable": "FACT_COPA",
        "fromColumn": "SHP_TO_CUST_KEY",
        "toTable": "DIM_CUSTOMER_SHIP_TO",
        "toColumn": "CUST_KEY"
      },
      {
        "name": "896f26d7-c17b-4688-8d9c-825b1d4557ae",
        "fromTable": "FACT_COPA",
        "fromColumn": "SOLD_TO_BP_KEY",
        "toTable": "DIM_BUSINESS_PARTNER_SOLD_TO",
        "toColumn": "BUSI_PRTNR_KEY"
      },
      {
        "name": "a01af8d8-c341-4c39-896d-98e8224af3bb",
        "fromTable": "FACT_COPA",
        "fromColumn": "END_CUST_BP_KEY",
        "toTable": "DIM_BUSINESS_PARTNER_END_CUSTOMER",
        "toColumn": "BUSI_PRTNR_KEY"
      },
      {
        "name": "bccd3c59-406a-471e-943d-530d202bbd90",
        "fromTable": "FACT_COPA",
        "fromColumn": "SOLD_TO_CUST_KEY",
        "toTable": "DIM_CUSTOMER_SOLD_TO",
        "toColumn": "CUST_KEY"
      },
      {
        "name": "5f8d9399-ac4d-461d-aa3b-0c1f61f49349",
        "fromTable": "FACT_COPA",
        "fromColumn": "END_CUST_KEY",
        "toTable": "DIM_CUSTOMER_END",
        "toColumn": "CUST_KEY"
      },
      {
        "name": "5f71856f-df74-4eb6-8924-33fa0248a794",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "CONTROLLING_AREA_KEY",
        "toTable": "Controlling Area",
        "toColumn": "Controlling Area Key"
      },
      {
        "name": "173cddba-8e54-4ce3-9145-3498ec586ee5",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "COST_CTR_KEY",
        "toTable": "Cost Center",
        "toColumn": "Cost Center Key"
      },
      {
        "name": "62233f85-5f88-443e-9ec1-c2635e5bfe75",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "COST_ELEMENT_COA_KEY",
        "toTable": "Cost Element By Chart Of Accounts",
        "toColumn": "Cost Element COA Key"
      },
      {
        "name": "f641ec4f-a663-495d-a91b-98873e65021d",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "COST_ELEMENT_CONTROLLING_AREA_KEY",
        "toTable": "Cost Element By Controlling Area",
        "toColumn": "Cost Element Controlling Area key"
      },
      {
        "name": "449606ea-9d6f-4bf9-89e0-24d3e426c0ef",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "UOM_KEY",
        "toTable": "DIM_UNIT_OF_MEASURE",
        "toColumn": "UOM_KEY"
      },
      {
        "name": "737fe43f-af8d-4ee0-b68e-bc16521bffaf",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "DETAIL_VALUE_TYPE_KEY",
        "toTable": "Controlling Value Type Details",
        "toColumn": "Controlling  Value Type Details Key"
      },
      {
        "name": "dcf13122-783c-411b-809b-cc183892690e",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "STATISTICS_KEY",
        "toTable": "Controlling Value Type Statistics",
        "toColumn": "Controlling Value Type Statistics Key"
      },
      {
        "name": "ff9067ed-51d0-4887-823b-886f58b12ee8",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "CONTROLLING_VERSION_KEY",
        "toTable": "Controlling Version",
        "toColumn": "Controlling Version Key"
      },
      {
        "name": "e00a53b3-b890-4041-951e-0623ed1ad802",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "VALUATION_VIEW_KEY",
        "toTable": "Controlling Valuation View",
        "toColumn": "Controlling Valuation View Key"
      },
      {
        "name": "fed54345-f498-48ea-a2a2-b636f4796be9",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "PLANT_KEY",
        "toTable": "DIM_PLANT",
        "toColumn": "PLANT_KEY"
      },
      {
        "name": "c21323b9-5015-42b4-aa61-1264fa6cce8e",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "CRNCY_TYPE_KEY",
        "toTable": "DIM_CRNCY_TYPE",
        "toColumn": "CRNCY_TYPE_KEY"
      },
      {
        "name": "e7b30d43-9c82-4dfb-811c-d30c1d7f4094",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "MEASURE_TYPE_KEY",
        "toTable": "Contolling Key Figure Category Type",
        "toColumn": "Controlling Key Figure Category Type Key"
      },
      {
        "name": "230c1e64-09f8-4e7e-93c6-a77d36d552ad",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "SENDER_RECEIVER_KEY",
        "toTable": "Controlling Debit Credit Type",
        "toColumn": "Controlling Debit Credit Type Key"
      },
      {
        "name": "0e1732b3-2cef-4c61-a480-e80169baad8c",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "FUNCL_AREA_KEY",
        "toTable": "DIM_FUNCL_AREA",
        "toColumn": "FUNCL_AREA_KEY"
      },
      {
        "name": "a1eb9864-dcce-45a9-9ea0-59238b354ad1",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "PERIOD_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY"
      },
      {
        "name": "664e75ef-d898-40c7-87dc-4dbb0e875689",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "PRFT_CTR_HRCHY_KEY",
        "toTable": "DIM_PRFT_CTR_HRCHY",
        "toColumn": "PRFT_CTR_HRCHY_KEY"
      },
      {
        "name": "d417aa72-6e54-4030-8032-c780224f94f5",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "PRTNR_OBJ_KEY",
        "toTable": "Partner Object",
        "toColumn": "Partner Object Key"
      },
      {
        "name": "100af8dd-2bc4-4b04-8d7e-5b0f3552f8c1",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "COMPANY_KEY",
        "toTable": "DIM_COMPANY",
        "toColumn": "COMPANY_KEY"
      },
      {
        "name": "09401b72-9ff3-41a1-a5a8-f4c6a2120851",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "PRFT_CTR_KEY",
        "toTable": "DIM_PRFT_CTR",
        "toColumn": "PRFT_CTR_KEY"
      },
      {
        "name": "c61204b6-99f3-4f07-b3dd-07e84a5cf36f",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "PRTNR_FUNCL_AREA_KEY",
        "toTable": "Partner Functional Area",
        "toColumn": "FUNCL_AREA_KEY"
      },
      {
        "name": "bd3393b0-158d-42c2-82a4-f5d4b08c3a2d",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "COST_CTR_ELIM_IBV_KEY",
        "toTable": "Cost Center IBV",
        "toColumn": "Cost Center Key"
      },
      {
        "name": "dcf28778-1e95-4904-95ff-f7b2b099adfc",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "CONTROLLING_PLAN_VERSION_KEY",
        "toTable": "Controlling Version Plan",
        "toColumn": "Controlling Version Key"
      },
      {
        "name": "f5ee8909-5078-4f63-84c2-e9190fb1df69",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "CRNCY_KEY",
        "toTable": "DIM_SOURCE_CRNCY",
        "toColumn": "CRNCY_KEY"
      },
      {
        "name": "f3b550f9-ac52-4282-944a-1b475becfb80",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "CONTROLLING_VALUE_TYPE_KEY",
        "toTable": "Controlling Value Type",
        "toColumn": "Controlling Value Type Key"
      },
      {
        "name": "2d21b199-9542-464a-98e4-92b8f8c0d09e",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
        "toTable": "Controlling Area Activity Type",
        "toColumn": "Controlling Area Activity Type Key"
      },
      {
        "name": "b850debf-2c6b-4e33-8a4c-8bb6b11341ae",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "PRFT_CTR_HRCHY_TAX_KEY",
        "toTable": "Profit Center Hierarchy Tax",
        "toColumn": "PRFT_CTR_HRCHY_TAX_KEY"
      },
      {
        "name": "c99dfe2a-2ccb-4fce-8c23-eba89a581879",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "PRFT_CTR_HRCHY_REGION_KEY",
        "toTable": "Profit Center Hierarchy Region",
        "toColumn": "PRFT_CTR_HRCHY_REGION_KEY"
      },
      {
        "name": "9b142bbe-10a0-4af2-bb29-e77579249eb0",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "COST_CTR_HIERARCHY_KEY",
        "toTable": "Cost Center Hierarchy Standard",
        "toColumn": "COST_CTR_HRCHY_KEY"
      },
      {
        "name": "6c86b37b-b9be-41e4-913a-538981977c92",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "COST_CTR_HIERARCHY_REGION_KEY",
        "toTable": "Cost Center Hierarchy Region",
        "toColumn": "COST_CTR_HRCHY_KEY_REGION"
      },
      {
        "name": "2ee14dd5-060f-4853-801b-8f0a1d6b3a98",
        "fromTable": "FACT_CCA_PLAN_ACTUALS",
        "fromColumn": "COST_ELEMENT_HIERARCHY_KEY",
        "toTable": "Cost Element Hierarchy Standard",
        "toColumn": "COST_ELEMNT_HRCHY_KEY"
      },
      {
        "name": "e9a554b1-8d6d-4227-9b40-33f947925940",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "PERIOD_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY"
      },
      {
        "name": "06bb0718-4065-40fd-8a55-230552ec110e",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "CONTROLLING_AREA_KEY",
        "toTable": "Controlling Area",
        "toColumn": "Controlling Area Key"
      },
      {
        "name": "ebcdaf40-bb28-486c-9871-9c1e7469880d",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "COST_CTR_KEY",
        "toTable": "Cost Center",
        "toColumn": "Cost Center Key"
      },
      {
        "name": "48128811-fc53-4220-a91c-5f36981c98a5",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "PRFT_CTR_KEY",
        "toTable": "DIM_PRFT_CTR",
        "toColumn": "PRFT_CTR_KEY"
      },
      {
        "name": "0556fa42-2a51-47aa-8988-f50894726782",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "PRFT_CTR_HRCHY_KEY",
        "toTable": "DIM_PRFT_CTR_HRCHY",
        "toColumn": "PRFT_CTR_HRCHY_KEY"
      },
      {
        "name": "c3100265-0d5f-438c-9688-71617c7ca413",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "PRFT_CTR_HRCHY_TAX_KEY",
        "toTable": "Profit Center Hierarchy Tax",
        "toColumn": "PRFT_CTR_HRCHY_TAX_KEY"
      },
      {
        "name": "afe841b3-172d-41ad-84f4-d728d93f2c63",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "PRFT_CTR_HRCHY_REGION_KEY",
        "toTable": "Profit Center Hierarchy Region",
        "toColumn": "PRFT_CTR_HRCHY_REGION_KEY"
      },
      {
        "name": "f7a1f936-1bb3-4d32-b22f-189f61cf32e2",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "COST_CTR_HIERARCHY_KEY",
        "toTable": "Cost Center Hierarchy Standard",
        "toColumn": "COST_CTR_HRCHY_KEY"
      },
      {
        "name": "1c208c19-e9d3-4d1f-a79c-3b160a846634",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "COST_CTR_HIERARCHY_REGION_KEY",
        "toTable": "Cost Center Hierarchy Region",
        "toColumn": "COST_CTR_HRCHY_KEY_REGION"
      },
      {
        "name": "695bf7a7-f500-4376-904d-30fd4f0a92ea",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "COST_ELEMENT_HIERARCHY_KEY",
        "toTable": "Cost Element Hierarchy Standard",
        "toColumn": "COST_ELEMNT_HRCHY_KEY"
      },
      {
        "name": "0f0787cf-5734-45db-a236-f71ec988a149",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "COST_ELEMENT_COA_KEY",
        "toTable": "Cost Element By Chart Of Accounts",
        "toColumn": "Cost Element COA Key"
      },
      {
        "name": "901c21ca-fcc2-4401-84f0-7ca2fa5c8249",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "COST_ELEMENT_CONTROLLING_AREA_KEY",
        "toTable": "Cost Element By Controlling Area",
        "toColumn": "Cost Element Controlling Area key"
      },
      {
        "name": "6506638e-32e9-442a-9e48-b4d85d526fa7",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "CONTROLLING_AREA_ACTIVITY_TYPE_KEY",
        "toTable": "Controlling Area Activity Type",
        "toColumn": "Controlling Area Activity Type Key"
      },
      {
        "name": "5b2ec66a-704d-42fd-9a5d-082248aeee82",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "CONTROLLING_VALUE_TYPE_KEY",
        "toTable": "Controlling Value Type",
        "toColumn": "Controlling Value Type Key"
      },
      {
        "name": "437fc52b-36ff-42a9-b9d2-221b4c4e7529",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "CRNCY_TYPE_KEY",
        "toTable": "DIM_CRNCY_TYPE",
        "toColumn": "CRNCY_TYPE_KEY"
      },
      {
        "name": "39dea071-50a8-47c3-88b0-8263d8fb47a6",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "CRNCY_KEY",
        "toTable": "DIM_SOURCE_CRNCY",
        "toColumn": "CRNCY_KEY"
      },
      {
        "name": "54cac30a-42e7-46c2-aee8-3601226aec39",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "CUST_KEY",
        "toTable": "DIM_CUSTOMER_SHIP_TO",
        "toColumn": "CUST_KEY"
      },
      {
        "name": "878b7ad7-e8b5-4b2f-84ce-c436a36087fa",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "MEASURE_TYPE_KEY",
        "toTable": "Contolling Key Figure Category Type",
        "toColumn": "Controlling Key Figure Category Type Key"
      },
      {
        "name": "16a2f9c7-45a9-4f26-8acc-e06278adf717",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "UOM_KEY",
        "toTable": "DIM_UNIT_OF_MEASURE",
        "toColumn": "UOM_KEY"
      },
      {
        "name": "0776199e-deac-49e4-8406-6c5d0ba4fcf0",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "DETAIL_VALUE_TYPE_KEY",
        "toTable": "Controlling Value Type Details",
        "toColumn": "Controlling  Value Type Details Key"
      },
      {
        "name": "138aee16-52f0-42bc-afbe-cd364fb54e6b",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "STATISTICS_KEY",
        "toTable": "Controlling Value Type Statistics",
        "toColumn": "Controlling Value Type Statistics Key"
      },
      {
        "name": "cbb3ec91-2e26-4c03-b2c9-48344fd2814c",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "CONTROLLING_VERSION_KEY",
        "toTable": "Controlling Version",
        "toColumn": "Controlling Version Key"
      },
      {
        "name": "0fe56146-ed4d-40fa-8f73-a09ad8dee5f5",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "VALUATION_VIEW_KEY",
        "toTable": "Controlling Valuation View",
        "toColumn": "Controlling Valuation View Key"
      },
      {
        "name": "796c539a-b09e-4eb4-bc72-18d8fca5e141",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "SENDER_RECEIVER_KEY",
        "toTable": "Controlling Debit Credit Type",
        "toColumn": "Controlling Debit Credit Type Key"
      },
      {
        "name": "e9bcf4d1-614b-4bcd-bbeb-fdea172c944d",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "FUNCL_AREA_KEY",
        "toTable": "DIM_FUNCL_AREA",
        "toColumn": "FUNCL_AREA_KEY"
      },
      {
        "name": "10481ce5-0555-4bdb-b42d-a49c374fad99",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "PRTNR_FUNCL_AREA_KEY",
        "toTable": "Partner Functional Area",
        "toColumn": "FUNCL_AREA_KEY"
      },
      {
        "name": "f215fc28-b179-4995-9624-ea9140556dc3",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "COMPANY_KEY",
        "toTable": "DIM_COMPANY",
        "toColumn": "COMPANY_KEY"
      },
      {
        "name": "2a4b70ac-8b2b-49ab-9f88-abaef5d4cd56",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "BUSINESS_AREA_KEY",
        "toTable": "Controlling Business Area",
        "toColumn": "Controlling Business Area Key"
      },
      {
        "name": "eda4c066-7d43-4e16-bf71-afb83436cf9e",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "PLANT_KEY",
        "toTable": "DIM_PLANT",
        "toColumn": "PLANT_KEY"
      },
      {
        "name": "0e160494-80ba-4ef8-bc11-52ab80dd8c1d",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "MATL_KEY",
        "toTable": "DIM_MATL",
        "toColumn": "MATL_KEY"
      },
      {
        "name": "958a802f-ea63-41c8-be6d-88b3aa171073",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "VENDOR_KEY",
        "toTable": "Vendor",
        "toColumn": "Vendor Key"
      },
      {
        "name": "ac81b462-58af-4b87-bd14-c65334f6c081",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "GL_ACCOUNT_MASTER_COA_KEY",
        "toTable": "GL Account by Chart Of Accounts",
        "toColumn": "G/L Account Master COA Key"
      },
      {
        "name": "98a8154b-642a-48e4-a3c5-b9954d36424f",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "COST_CTR_ELIM_IBV_KEY",
        "toTable": "Cost Center IBV",
        "toColumn": "Cost Center Key"
      },
      {
        "name": "f3a47793-1703-4834-b912-a205011498f9",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "COST_ACCNTNG_DOCMNT_KEY",
        "toTable": "Accounting Document",
        "toColumn": "Accounting Document Key"
      },
      {
        "name": "3df34349-2581-49cb-a407-d404bb1fcebd",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "PRTNR_OBJ_KEY",
        "toTable": "Partner Object",
        "toColumn": "Partner Object Key"
      },
      {
        "name": "bf952c9e-1f1b-4b05-b63a-b808a744c07f",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "PRTNR_COMPANY_KEY",
        "toTable": "Partner Company",
        "toColumn": "COMPANY_KEY"
      },
      {
        "name": "08271884-9601-4c59-ba67-5fd82daa51e9",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "POSTING_DATE_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY",
        "isActive": false
      },
      {
        "name": "596c1e28-be0b-494c-86b8-20d2d25108c4",
        "fromTable": "FACT_CCA_ACTUALS",
        "fromColumn": "DOCUMENT_DATE_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY",
        "isActive": false
      },
      {
        "name": "1a8cb42e-7597-43c2-986a-d3778fc1eb10",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "BLLNG_PRCSNG_STAT_KEY",
        "toTable": "Billing Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "49e9a854-2da6-4fdf-bd80-b8c2fbacfa34",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "CREDIT_HOLD_STATUS_KEY",
        "toTable": "Credit Hold Status",
        "toColumn": "Credit Hold Status Key"
      },
      {
        "name": "5770dfba-f68d-4579-8c49-ca6d0252073c",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "PARTL_DLVRY_GRP_KEY",
        "toTable": "Delivery Group",
        "toColumn": "Delivery Group Key"
      },
      {
        "name": "95adee1f-643c-4275-889e-24de891ccf0d",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_DOC_CAT_KEY",
        "toTable": "Sales Document Category",
        "toColumn": "Sales Document Category Key"
      },
      {
        "name": "3f3ca984-6bdb-4b8f-8e00-ce5e101d2210",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "ORD_ITM_DLVRY_PRTY_KEY",
        "toTable": "Order Item Delivery Priority",
        "toColumn": "Order Item Delivery Priority Key"
      },
      {
        "name": "a25b92bf-5d11-4d73-9303-d2a6b40cc4e8",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "MATL_STOCK_STATUS_KEY",
        "toTable": "Material Stock Status",
        "toColumn": "Material Stock Status Key"
      },
      {
        "name": "5b1c6ed6-4b34-4ded-a23c-22caa7de4fa3",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "MFGNG_REQRMT_TYPE_KEY",
        "toTable": "Manufacturing Requirement Type",
        "toColumn": "Manufacturing Requirement Type Key"
      },
      {
        "name": "7d4422d2-a9bb-49c6-a85f-6504099f3fff",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SHIPPING_ROUTE_KEY",
        "toTable": "Shipping Route",
        "toColumn": "Shipping Route Key"
      },
      {
        "name": "7f38ca98-02b9-45b2-97d6-db2ac88e32af",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "ORD_ITM_REJECTION_REASON_KEY",
        "toTable": "Order Item Rejection Reason",
        "toColumn": "Order Item Rejection Reason Key"
      },
      {
        "name": "92381009-8bb0-4dc9-805e-a05df95839c3",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SHIPPING_CONDITION_KEY",
        "toTable": "Shipping Condition",
        "toColumn": "Shipping Condition Key"
      },
      {
        "name": "741351c1-5301-41d8-8626-0c94949429c8",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SHIPPING_POINT_KEY",
        "toTable": "Shipping Point",
        "toColumn": "Shipping Point Key"
      },
      {
        "name": "acc13347-0870-4528-9a19-a2c45d51ee4f",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_DOC_ITM_CAT_KEY",
        "toTable": "Sales Document Item Category",
        "toColumn": "Sales Document Item Category Key"
      },
      {
        "name": "2c5fa7cf-1678-4d25-8b4d-defeb2b38748",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "PLANT_STORAGE_LOCATION_KEY",
        "toTable": "Plant Storage Location",
        "toColumn": "Plant Storage Location Key"
      },
      {
        "name": "f9c9f882-4247-482c-bd50-44f027f539e3",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "ORD_REASON_KEY",
        "toTable": "Order Reason",
        "toColumn": "Order Reason Key"
      },
      {
        "name": "7fa8ef03-587b-4a13-ac40-47e3e439688e",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SCHED_LINE_CAT_KEY",
        "toTable": "Schedule Line Category",
        "toColumn": "Schedule Line Category Key"
      },
      {
        "name": "703648e5-f74b-4502-a25c-9eefa13483ff",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_ORD_DELIVERY_BLOCK_KEY",
        "toTable": "Sales Order Delivery Block",
        "toColumn": "Sales Order Delivery Block Key"
      },
      {
        "name": "7413b953-b483-499a-8970-d66a9a351a0a",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "CUST_PURCHASE_ORD_KEY",
        "toTable": "Customer Purchase Order",
        "toColumn": "Customer Purchase Order Key"
      },
      {
        "name": "dfff0e3a-068e-4d1c-ace5-d74fff040d40",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "BOOKING_DOC_KEY",
        "toTable": "Booking Document",
        "toColumn": "Booking Document Key"
      },
      {
        "name": "ed57a9d0-2922-4213-9a14-7a6977afb0bc",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "CUST_COLLECTIVE_NO_KEY",
        "toTable": "Customer Collective Number",
        "toColumn": "Customer Collective Number Key"
      },
      {
        "name": "362e12f8-041a-4dfa-adf2-29af547ad1cc",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_ORD_INFO_KEY",
        "toTable": "Sales Order Information",
        "toColumn": "Sales Order Info Key"
      },
      {
        "name": "c2920cf4-357d-4bf3-86c9-e37ef257e55c",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_ORD_SFTWR_SHPMNT_KEY",
        "toTable": "Sales Order Software Shipment",
        "toColumn": "Sales Order Software Shipment Key"
      },
      {
        "name": "73b91fed-b5eb-4504-9a51-da807c47d5ea",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "INTERNAL_ORD_NO_KEY",
        "toTable": "Internal Order Number",
        "toColumn": "Internal Order Number Key"
      },
      {
        "name": "0502fe46-a2a1-47e9-9f3c-4a0e8680c93b",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "BKD_QTY_UOM_KEY",
        "toTable": "Booked Quantity Unit of Measure",
        "toColumn": "UOM_KEY"
      },
      {
        "name": "0d91a3a3-0df1-4226-b5f1-dea6a5fffb49",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SHIP_TO_BP_BUSI_ADDR_KEY",
        "toTable": "Business Address Ship To",
        "toColumn": "Business Address Key"
      },
      {
        "name": "35d3585c-4a76-4177-9296-a608cad87386",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SOLD_TO_BP_BUSI_ADDR_KEY",
        "toTable": "Business Address Sold To",
        "toColumn": "Business Address Key"
      },
      {
        "name": "c997b34a-5451-4c38-9194-868c3ddb61a5",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "DLVRY_RELTD_BLLNG_PRCSNG_STAT_KEY",
        "toTable": "Delivery Related Billing Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "20e5a31d-d43b-47a4-9165-af0669d92fdd",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "MATL_BASE_UOM_KEY",
        "toTable": "Material Base Unit of Measure",
        "toColumn": "UOM_KEY"
      },
      {
        "name": "37090f2f-9f60-42a1-8eb8-9aa13572ddcb",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "ITM_RJCTN_PRCSNG_STAT_KEY",
        "toTable": "Item Rejection Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "12de2971-b043-41ac-83fd-bf396fe2a9cb",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "ORD_COMPLT_DLVRY_IND_VAL_KEY",
        "toTable": "Order Complete Delivery Indicator Values",
        "toColumn": "Indicator Values Key"
      },
      {
        "name": "ea50a827-ce45-428e-b9e1-89f7ae7f11af",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "ORD_ITM_PHYSCL_DLVRY_IND_VAL_KEY",
        "toTable": "Order Item Physical Delivery Indicator Values",
        "toColumn": "Indicator Values Key"
      },
      {
        "name": "8810bd79-17bc-4579-a33f-a6a7e388f726",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_ORD_ITM_DLVRY_BLOCK_KEY",
        "toTable": "Sales Order Item Delivery Block",
        "toColumn": "Sales Order Delivery Block Key"
      },
      {
        "name": "d48815f9-5b4e-42b6-ad63-8f9fb5b2727f",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "ORD_RELTD_BLLNG_PRCSNG_STAT_KEY",
        "toTable": "Order Related Billing Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "f2e6105d-4c4d-4873-8b1d-40365747fc32",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "PAYR_BP_KEY",
        "toTable": "Payer Business Partner",
        "toColumn": "BUSI_PRTNR_KEY"
      },
      {
        "name": "be2a84f8-b69d-493e-865a-fdf8f420604e",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SHPMNT_COMPLT_IND_VAL_KEY",
        "toTable": "Shipment Complete Indicator values",
        "toColumn": "Indicator Values Key"
      },
      {
        "name": "afa8a819-0a42-48b1-a15e-b0b45713299a",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_ORD_DLVRY_PRCSNG_STAT_KEY",
        "toTable": "Sales Order Delivery Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "f3c469e8-170e-4f5b-a9cf-2a6d30720be9",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_ORD_ITM_DLVRY_PRCSNG_STAT_KEY",
        "toTable": "Sales Order Item Delivery Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "c7c8e5a3-1228-4770-8fb9-f4f082a3c765",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_ORD_ITM_OVRLL_DLVRY_PRCSNG_STAT_KEY",
        "toTable": "Sales Order Item Overall Delivery Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "e9ca96eb-2fc3-4719-a643-c1da743c7f5e",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_ORD_OVRLL_DLVRY_PRCSNG_STAT_KEY",
        "toTable": "Sales Order Overall Delivery Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "10bca799-0793-4004-b09f-73ea6f7452ad",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_QTY_UOM_KEY",
        "toTable": "DIM_UNIT_OF_MEASURE",
        "toColumn": "UOM_KEY"
      },
      {
        "name": "5f8e2922-2067-40bd-9ee9-3c9062aac3ec",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "PRFT_CTR_KEY",
        "toTable": "DIM_PRFT_CTR",
        "toColumn": "PRFT_CTR_KEY"
      },
      {
        "name": "c121d091-4bbd-4bd5-8ba1-98cf51167b4d",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "MATL_KEY",
        "toTable": "DIM_MATL",
        "toColumn": "MATL_KEY"
      },
      {
        "name": "0df3ea4d-e0cf-4b3f-b813-7ea2c14a8a88",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "PROD_HRCHY_KEY",
        "toTable": "DIM_PROD_HRCHY",
        "toColumn": "PROD_HRCHY_KEY"
      },
      {
        "name": "2530c536-281c-400b-9217-01adedaf32b0",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "PLANT_KEY",
        "toTable": "DIM_PLANT",
        "toColumn": "PLANT_KEY"
      },
      {
        "name": "0fa4f62e-5a6d-420e-af1a-f25176ecaeac",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_ORG_KEY",
        "toTable": "DIM_SLS_ORG",
        "toColumn": "SLS_ORG_KEY"
      },
      {
        "name": "85ed2fe7-8d78-4415-9a43-5cb63a1ed28f",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "COMPANY_KEY",
        "toTable": "DIM_COMPANY",
        "toColumn": "COMPANY_KEY"
      },
      {
        "name": "3bca70bc-cd13-41e8-b65b-8880a4aa137e",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_DOC_TYPE_KEY",
        "toTable": "DIM_SLS_DOC_TYPE",
        "toColumn": "SLS_DOC_TYPE_KEY"
      },
      {
        "name": "fff68740-ce97-40a6-96f1-6c1e504ab782",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_OFFICE_KEY",
        "toTable": "DIM_SLS_OFFICE",
        "toColumn": "SLS_OFFICE_KEY"
      },
      {
        "name": "a7edb336-aa35-4d4b-8f68-26ac810e27bf",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_DIST_KEY",
        "toTable": "DIM_SLS_DIST",
        "toColumn": "SLS_DIST_KEY"
      },
      {
        "name": "4b9b54bb-b1c6-425a-9d7a-9cfdcaf1dbeb",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "CONTROLLING_AREA_KEY",
        "toTable": "Controlling Area",
        "toColumn": "Controlling Area Key"
      },
      {
        "name": "f75483e3-7f3a-4301-aa7b-fb6a02351bae",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "CUST_ACCT_ASGNMT_GRP_KEY",
        "toTable": "DIM_CUST_ACCT_ASGNMT_GRP",
        "toColumn": "CUST_ACCT_ASGNMT_GRP_KEY"
      },
      {
        "name": "57df6f05-fb5d-4097-82d0-ee2b5bf99399",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "MATL_GRP_KEY",
        "toTable": "DIM_MATL_GRP",
        "toColumn": "MATL_GRP_KEY"
      },
      {
        "name": "f0d48548-97c3-49aa-88ce-9e2be59c0887",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "INCOTERMS_KEY",
        "toTable": "DIM_INCOTERMS",
        "toColumn": "INCOTERMS_KEY"
      },
      {
        "name": "1d0a278b-9744-4f81-a606-e2fe0ebca0f7",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "ORD_ITM_CREATD_DTE_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY"
      },
      {
        "name": "e972a964-74e0-4856-9271-57634d44ba12",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "BLLNG_DTE_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY",
        "isActive": false
      },
      {
        "name": "99b795aa-ca96-4861-9e53-bac608c59871",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "ORD_ITM_PLND_GOODS_ISS_DTE_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY",
        "isActive": false
      },
      {
        "name": "1e49a484-c736-445c-9f4a-8092967b9b80",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SLS_ORD_ITM_MATL_AVAIL_DTE_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY",
        "isActive": false
      },
      {
        "name": "06816055-6cfb-49d4-9f81-6733b6aa21bf",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "CMTD_DLVRY_DTE_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY",
        "isActive": false
      },
      {
        "name": "129c6093-f1dd-4076-8585-778f3da52f02",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "CNFRMD_DLVRY_DTE_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY",
        "isActive": false
      },
      {
        "name": "c052e182-b9a1-4911-b7ba-b6c526e3a9a0",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "REQSTD_DLVRY_DTE_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY",
        "isActive": false
      },
      {
        "name": "d0cd20e8-ef47-4346-bfa0-612af5908520",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "ORD_ITM_LST_GOODS_ISS_DTE_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY",
        "isActive": false
      },
      {
        "name": "2cf78115-8688-48ad-b606-bfe600213687",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "BKNG_DOC_DTE_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY",
        "isActive": false
      },
      {
        "name": "38d2e2e0-4f48-4b5c-9d90-eb55d4551d24",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "CRNCY_KEY",
        "toTable": "DIM_SOURCE_CRNCY",
        "toColumn": "CRNCY_KEY"
      },
      {
        "name": "dfbdc8de-a2f9-468c-bd43-6a514aadc58b",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "CUST_SLS_KEY",
        "toTable": "DIM_CUST_SLS",
        "toColumn": "CUST_SLS_KEY"
      },
      {
        "name": "ba99c17e-21e7-4626-8e8c-d976b27b5ae7",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "MATL_SLS_KEY",
        "toTable": "DIM_MATL_SLS",
        "toColumn": "MATL_SLS_KEY"
      },
      {
        "name": "a81098f6-fab7-42f5-90ad-a8319943d907",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "MATL_TYPE_KEY",
        "toTable": "DIM_MATL_TYPE",
        "toColumn": "MATL_TYPE_KEY"
      },
      {
        "name": "832844aa-d74c-4cfb-b91b-c3e12af90f89",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "PRFT_CTR_HRCHY_KEY",
        "toTable": "DIM_PRFT_CTR_HRCHY",
        "toColumn": "PRFT_CTR_HRCHY_KEY"
      },
      {
        "name": "7334fa79-e1ef-48ee-908b-cb0fbffad06a",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SOLD_TO_BP_KEY",
        "toTable": "DIM_BUSINESS_PARTNER_SOLD_TO",
        "toColumn": "BUSI_PRTNR_KEY"
      },
      {
        "name": "b73b9a27-b927-40ae-9f90-93932dc813aa",
        "fromTable": "Sales Orders Facts",
        "fromColumn": "SHIP_TO_BP_KEY",
        "toTable": "DIM_BUSINESS_PARTNER_SHIP_TO",
        "toColumn": "BUSI_PRTNR_KEY"
      },
      {
        "name": "523834fc-2fdd-4960-94cb-4e546f70a303",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "BOOKING_DOC_KEY",
        "toTable": "Booking Document",
        "toColumn": "Booking Document Key"
      },
      {
        "name": "f3c3919d-7989-4b0f-9a40-1bfa1b85ada1",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "CRNCY_KEY",
        "toTable": "DIM_SOURCE_CRNCY",
        "toColumn": "CRNCY_KEY"
      },
      {
        "name": "830d5ed0-f876-4c8d-8793-9792cbd7961b",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "PRFT_CTR_KEY",
        "toTable": "DIM_PRFT_CTR",
        "toColumn": "PRFT_CTR_KEY"
      },
      {
        "name": "b5a0bb8f-d5d2-4f1e-a88a-5e423f69add8",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "PRFT_CTR_HRCHY_KEY",
        "toTable": "DIM_PRFT_CTR_HRCHY",
        "toColumn": "PRFT_CTR_HRCHY_KEY"
      },
      {
        "name": "b5f6fecb-1ced-46d1-9a5d-48d97767ef20",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "MATL_KEY",
        "toTable": "DIM_MATL",
        "toColumn": "MATL_KEY"
      },
      {
        "name": "cac5eb9a-567c-4523-b9f2-aa3f838df972",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "MATL_TYPE_KEY",
        "toTable": "DIM_MATL_TYPE",
        "toColumn": "MATL_TYPE_KEY"
      },
      {
        "name": "e888c818-8fc2-4c3e-848b-bcd9a39158f3",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "MATL_SLS_KEY",
        "toTable": "DIM_MATL_SLS",
        "toColumn": "MATL_SLS_KEY"
      },
      {
        "name": "47c78885-6b5b-4b44-b554-297942b78b25",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "PROD_HRCHY_KEY",
        "toTable": "DIM_PROD_HRCHY",
        "toColumn": "PROD_HRCHY_KEY"
      },
      {
        "name": "ac68bf62-cc45-4c9b-8441-980d5a52e933",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "PLANT_KEY",
        "toTable": "DIM_PLANT",
        "toColumn": "PLANT_KEY"
      },
      {
        "name": "d3cf8d89-c850-4e82-ac4e-76764fa74c12",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "ORD_ITM_DLVRY_PRTY_KEY",
        "toTable": "Order Item Delivery Priority",
        "toColumn": "Order Item Delivery Priority Key"
      },
      {
        "name": "8d56936b-187c-4369-94e4-4f0373dd81b8",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "MATL_STOCK_STATUS_KEY",
        "toTable": "Material Stock Status",
        "toColumn": "Material Stock Status Key"
      },
      {
        "name": "3470f91b-1e95-417a-b5b9-a1668eb8ebde",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "MFGNG_REQRMT_TYPE_KEY",
        "toTable": "Manufacturing Requirement Type",
        "toColumn": "Manufacturing Requirement Type Key"
      },
      {
        "name": "d14e0ec9-7d7e-4981-ac08-1895571d42e8",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "ORD_ITM_REJECTION_REASON_KEY",
        "toTable": "Order Item Rejection Reason",
        "toColumn": "Order Item Rejection Reason Key"
      },
      {
        "name": "8886edd3-9523-4bde-9eb4-22001e1f650e",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SHIPPING_POINT_KEY",
        "toTable": "Shipping Point",
        "toColumn": "Shipping Point Key"
      },
      {
        "name": "8215aaf2-9604-4b4d-bcb1-a6c301214791",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SHIPPING_ROUTE_KEY",
        "toTable": "Shipping Route",
        "toColumn": "Shipping Route Key"
      },
      {
        "name": "5ec2a3c1-1a28-4c80-a1a7-aed043e5cc0f",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "PLANT_STORAGE_LOCATION_KEY",
        "toTable": "Plant Storage Location",
        "toColumn": "Plant Storage Location Key"
      },
      {
        "name": "1e0ea62f-a52b-4bac-8de8-31cda6614fca",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_ORG_KEY",
        "toTable": "DIM_SLS_ORG",
        "toColumn": "SLS_ORG_KEY"
      },
      {
        "name": "d2da1ee0-7dab-41aa-8c88-bbe4134471cb",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "COMPANY_KEY",
        "toTable": "DIM_COMPANY",
        "toColumn": "COMPANY_KEY"
      },
      {
        "name": "ad9d821d-10ff-4751-85a3-2b669ce1b1c2",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_OFFICE_KEY",
        "toTable": "DIM_SLS_OFFICE",
        "toColumn": "SLS_OFFICE_KEY"
      },
      {
        "name": "68f682f0-3072-42b0-9aac-dbe5961bac9b",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SHIPPING_CONDITION_KEY",
        "toTable": "Shipping Condition",
        "toColumn": "Shipping Condition Key"
      },
      {
        "name": "4fffdd4d-26d1-4f90-a07e-36cea9703ead",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_ORD_DELIVERY_BLOCK_KEY",
        "toTable": "Sales Order Delivery Block",
        "toColumn": "Sales Order Delivery Block Key"
      },
      {
        "name": "a75cfcda-d3c2-47c3-b84d-13d344e6ac22",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_DOC_TYPE_KEY",
        "toTable": "DIM_SLS_DOC_TYPE",
        "toColumn": "SLS_DOC_TYPE_KEY"
      },
      {
        "name": "832f97cb-f89d-4630-87f2-8c4023b63e88",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_DOC_CAT_KEY",
        "toTable": "Sales Document Category",
        "toColumn": "Sales Document Category Key"
      },
      {
        "name": "aa8a4da5-777b-4411-9d1f-4dade0bde06b",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_DIST_KEY",
        "toTable": "DIM_SLS_DIST",
        "toColumn": "SLS_DIST_KEY"
      },
      {
        "name": "8283f5c6-0ba9-406d-86f3-0ee57a416b97",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "CONTROLLING_AREA_KEY",
        "toTable": "Controlling Area",
        "toColumn": "Controlling Area Key"
      },
      {
        "name": "8037f220-baf5-4f76-a056-daeda07df5b7",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "CREDIT_HOLD_STATUS_KEY",
        "toTable": "Credit Hold Status",
        "toColumn": "Credit Hold Status Key"
      },
      {
        "name": "6927615d-37f5-493c-83f9-307dea73586a",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "CUST_COLLECTIVE_NO_KEY",
        "toTable": "Customer Collective Number",
        "toColumn": "Customer Collective Number Key"
      },
      {
        "name": "7f32011c-7835-4bb1-add8-361147693ff7",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "CUST_PURCHASE_ORD_KEY",
        "toTable": "Customer Purchase Order",
        "toColumn": "Customer Purchase Order Key"
      },
      {
        "name": "a4b8eaf0-b02e-4774-8adb-000f7e247fce",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "CUST_SLS_KEY",
        "toTable": "DIM_CUST_SLS",
        "toColumn": "CUST_SLS_KEY"
      },
      {
        "name": "bc863815-2e6f-4f07-9569-2ef0478a92ab",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "BLLNG_PRCSNG_STAT_KEY",
        "toTable": "Billing Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "001aa45a-5d41-4ad7-8602-54ba0259284c",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "CUST_ACCT_ASGNMT_GRP_KEY",
        "toTable": "DIM_CUST_ACCT_ASGNMT_GRP",
        "toColumn": "CUST_ACCT_ASGNMT_GRP_KEY"
      },
      {
        "name": "38ae858f-4929-42af-b4b2-a7d5b2c7a192",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_ORD_DLVRY_PRCSNG_STAT_KEY",
        "toTable": "Sales Order Delivery Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "1ce6e54c-f33c-4d7e-bcf4-c97aaa7f0be0",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_ORD_OVRLL_DLVRY_PRCSNG_STAT_KEY",
        "toTable": "Sales Order Overall Delivery Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "017feb7d-c7d5-43e7-9447-2dc6a45c9e0b",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "DLVRY_RELTD_BLLNG_PRCSNG_STAT_KEY",
        "toTable": "Delivery Related Billing Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "96342deb-5a38-41a9-b653-adad7b970058",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "ORD_RELTD_BLLNG_PRCSNG_STAT_KEY",
        "toTable": "Order Related Billing Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "ecb5ff60-73b5-414d-b730-ae6f02570da7",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_ORD_ITM_DLVRY_PRCSNG_STAT_KEY",
        "toTable": "Sales Order Item Delivery Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "e92136e1-0c4d-4266-9ccf-21bbae4d0284",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_ORD_ITM_OVRLL_DLVRY_PRCSNG_STAT_KEY",
        "toTable": "Sales Order Item Overall Delivery Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "54d78455-cd1a-464b-a339-3d2a4497584d",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SOLD_TO_BP_KEY",
        "toTable": "DIM_CUSTOMER_SOLD_TO",
        "toColumn": "CUST_KEY"
      },
      {
        "name": "b921c0f5-06a2-4609-b260-8007c48b4789",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SOLD_TO_BP_BUSI_ADDR_KEY",
        "toTable": "Business Address Sold To",
        "toColumn": "Business Address Key"
      },
      {
        "name": "b2331b5a-10eb-4b5b-affc-86f6e759375e",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SHIP_TO_BP_KEY",
        "toTable": "DIM_CUSTOMER_SHIP_TO",
        "toColumn": "CUST_KEY"
      },
      {
        "name": "aeea6f4d-22cc-4425-9f02-297835fe025d",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SHIP_TO_BP_BUSI_ADDR_KEY",
        "toTable": "Business Address Ship To",
        "toColumn": "Business Address Key"
      },
      {
        "name": "3ff9dd12-29c3-4862-abf2-1e5e1f2ffbe4",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "MATL_GRP_KEY",
        "toTable": "DIM_MATL_GRP",
        "toColumn": "MATL_GRP_KEY"
      },
      {
        "name": "72c0623d-2a3e-4479-81b8-a17b743b503c",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "INTERNAL_ORD_NO_KEY",
        "toTable": "Internal Order Number",
        "toColumn": "Internal Order Number Key"
      },
      {
        "name": "0b4b2b4e-c7d1-4c74-a492-661af046587a",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "ORD_REASON_KEY",
        "toTable": "Order Reason",
        "toColumn": "Order Reason Key"
      },
      {
        "name": "57151333-a94f-4bbc-b2f5-f48b441554b8",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_ORD_INFO_KEY",
        "toTable": "Sales Order Information",
        "toColumn": "Sales Order Info Key"
      },
      {
        "name": "e88021e1-85ac-45fd-8da6-8b304d6faf34",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "PAYR_BP_KEY",
        "toTable": "Payer Business Partner",
        "toColumn": "BUSI_PRTNR_KEY"
      },
      {
        "name": "62489f63-0866-4281-96df-b2c0d25b1ec4",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "PARTL_DLVRY_GRP_KEY",
        "toTable": "Delivery Group",
        "toColumn": "Delivery Group Key"
      },
      {
        "name": "88c5b07d-9210-4ba4-8880-56ad74b1bbfe",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_ORD_SFTWR_SHPMNT_KEY",
        "toTable": "Sales Order Software Shipment",
        "toColumn": "Sales Order Software Shipment Key"
      },
      {
        "name": "bdd1da07-2b78-44e6-915a-8156f078e9ac",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "ORD_ITM_PHYSCL_DLVRY_IND_VAL_KEY",
        "toTable": "Order Item Physical Delivery Indicator Values",
        "toColumn": "Indicator Values Key"
      },
      {
        "name": "8a63aac5-42fc-4a1a-aec5-91749cb5d4b9",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "ITM_RJCTN_PRCSNG_STAT_KEY",
        "toTable": "Item Rejection Status",
        "toColumn": "Processing Status Key"
      },
      {
        "name": "6bd87bca-07e5-4898-b9a4-217c8b1056fe",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SCHED_LINE_CAT_KEY",
        "toTable": "Schedule Line Category",
        "toColumn": "Schedule Line Category Key"
      },
      {
        "name": "ddeb6bc2-7318-4a71-8bf8-c3a922cd09b4",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SHPMNT_COMPLT_IND_VAL_KEY",
        "toTable": "Shipment Complete Indicator values",
        "toColumn": "Indicator Values Key"
      },
      {
        "name": "9e3742bf-5c76-4631-a771-0628a6d1d06c",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_QTY_UOM_KEY",
        "toTable": "DIM_UNIT_OF_MEASURE",
        "toColumn": "UOM_KEY"
      },
      {
        "name": "6e6eba41-3cab-446c-804a-8cf5e9bf7fd4",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "MATL_BASE_UOM_KEY",
        "toTable": "Material Base Unit of Measure",
        "toColumn": "UOM_KEY"
      },
      {
        "name": "64ac2dac-b651-4ec6-b72a-5d7ee31bf7d3",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "BKD_QTY_UOM_KEY",
        "toTable": "Booked Quantity Unit of Measure",
        "toColumn": "UOM_KEY"
      },
      {
        "name": "0cfd1051-be73-43c8-a365-d5a254a31e39",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "ORD_COMPLT_DLVRY_IND_VAL_KEY",
        "toTable": "Order Complete Delivery Indicator Values",
        "toColumn": "Indicator Values Key"
      },
      {
        "name": "863060a3-1db6-482a-8d63-ffd551a3258d",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "INCOTERMS_KEY",
        "toTable": "DIM_INCOTERMS",
        "toColumn": "INCOTERMS_KEY"
      },
      {
        "name": "cf07839c-24fb-40f9-9eae-4a435be07347",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "ORD_ITM_CREATD_DTE_KEY",
        "toTable": "DIM_DATE",
        "toColumn": "DATE_INT_KEY"
      },
      {
        "name": "e15da3f2-9018-403c-b8ac-02797fcf2c2d",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_ORD_ITM_DLVRY_BLOCK_KEY",
        "toTable": "Sales Order Item Delivery Block",
        "toColumn": "Sales Order Delivery Block Key"
      },
      {
        "name": "fed54121-c3e9-44a8-849d-cd19cdcb0554",
        "fromTable": "Monthly Backlog Facts",
        "fromColumn": "SLS_DOC_ITM_CAT_KEY",
        "toTable": "Sales Document Item Category",
        "toColumn": "Sales Document Item Category Key"
      }
    ],
    "roles": [
      {
        "name": "READ_FIN_COPA_R",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "VNEXT01@ROCKWELLAUTOMATION.COM",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "vnext02@rockwellautomation.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "vNext03@rockwellautomation.com",
            "identityProvider": "AzureAD"
          },
          {
            "memberName": "DATA_AAS_READ_FIN_COPA_R@rockwellautomation.com",
            "identityProvider": "AzureAD"
          }
        ],
        "tablePermissions": [
          {
            "name": "DIM_COMPANY",
            "filterExpression": [
              "CONTAINS(DIM_SECURITY_COPA,DIM_SECURITY_COPA[USER_PRNCPL_NAME],USERPRINCIPALNAME(),DIM_SECURITY_COPA[VARIABLE_NAME],\"ZCOMPCODE\",DIM_SECURITY_COPA[LOW_VALUE],DIM_COMPANY[Company Code])",
              "",
              ""
            ]
          },
          {
            "name": "DIM_PRFT_CTR",
            "filterExpression": "CONTAINS(DIM_SECURITY_COPA,DIM_SECURITY_COPA[USER_PRNCPL_NAME],USERPRINCIPALNAME(),DIM_SECURITY_COPA[VARIABLE_NAME],\"ZPRFTCTR\",DIM_SECURITY_COPA[LOW_VALUE],DIM_PRFT_CTR[Profit Center])"
          },
          {
            "name": "DIM_SECURITY_COPA",
            "filterExpression": "FALSE()"
          },
          {
            "name": "Controlling Value Type",
            "columnPermissions": [
              {
                "name": "Controlling Value Type Key"
              },
              {
                "name": "Value Type Code"
              },
              {
                "name": "Value Type Short Description"
              },
              {
                "name": "Value Type Medium Description"
              }
            ]
          },
          {
            "name": "FACT_CCA_PLAN_ACTUALS",
            "columnPermissions": [
              {
                "name": "CRNCY_KEY"
              },
              {
                "name": "CONTROLLING_AREA_KEY"
              },
              {
                "name": "PERIOD_KEY"
              },
              {
                "name": "COST_CTR_KEY"
              },
              {
                "name": "COST_CTR_HIERARCHY_KEY"
              },
              {
                "name": "PRFT_CTR_KEY"
              },
              {
                "name": "PRFT_CTR_HRCHY_KEY"
              },
              {
                "name": "COST_ELEMENT_COA_KEY"
              },
              {
                "name": "COST_ELEMENT_CONTROLLING_AREA_KEY"
              },
              {
                "name": "COST_ELEMENT_HIERARCHY_KEY"
              },
              {
                "name": "CRNCY_TYPE_KEY"
              },
              {
                "name": "MEASURE_TYPE_KEY"
              },
              {
                "name": "UOM_KEY"
              },
              {
                "name": "DETAIL_VALUE_TYPE_KEY"
              },
              {
                "name": "STATISTICS_KEY"
              },
              {
                "name": "CONTROLLING_VERSION_KEY"
              },
              {
                "name": "VALUATION_VIEW_KEY"
              },
              {
                "name": "SENDER_RECEIVER_KEY"
              },
              {
                "name": "FUNCL_AREA_KEY"
              },
              {
                "name": "PRTNR_FUNCL_AREA_KEY"
              },
              {
                "name": "COMPANY_KEY"
              },
              {
                "name": "COST_CTR_ELIM_IBV_KEY"
              },
              {
                "name": "PLANT_KEY"
              },
              {
                "name": "PRTNR_OBJ_KEY"
              },
              {
                "name": "ACTUAL_CONSUMPTION_QTY"
              },
              {
                "name": "ACTUAL_FIX_CONSUMPTION_QTY"
              },
              {
                "name": "ACTUAL_VAR_CONSUMPTION_QTY"
              },
              {
                "name": "PLAN_CONSUMPTION_QTY"
              },
              {
                "name": "PLAN_FIX_CONSUMPTION_QTY"
              },
              {
                "name": "PLAN_VAR_CONSUMPTION_QTY"
              },
              {
                "name": "DATE_DTE_KEY"
              },
              {
                "name": "CONTROLLING_PLAN_VERSION_KEY"
              },
              {
                "name": "CONTROLLING_AREA_ACTIVITY_TYPE_KEY"
              },
              {
                "name": "CONTROLLING_VALUE_TYPE_KEY"
              },
              {
                "name": "ACTUAL_AMT"
              },
              {
                "name": "ACTUAL_FIXED_AMT"
              },
              {
                "name": "ACTUAL_VARIABLE_AMT"
              },
              {
                "name": "PLAN_AMT"
              },
              {
                "name": "PLAN_FIXED_AMT"
              },
              {
                "name": "PLAN_VARIABLE_AMT"
              },
              {
                "name": "PRFT_CTR_HRCHY_TAX_KEY"
              },
              {
                "name": "PRFT_CTR_HRCHY_REGION_KEY"
              },
              {
                "name": "COST_CTR_HIERARCHY_REGION_KEY"
              }
            ]
          },
          {
            "name": "FACT_CCA_ACTUALS",
            "columnPermissions": [
              {
                "name": "PERIOD_KEY"
              },
              {
                "name": "CONTROLLING_AREA_KEY"
              },
              {
                "name": "COST_CTR_KEY"
              },
              {
                "name": "PRFT_CTR_KEY"
              },
              {
                "name": "PRFT_CTR_HRCHY_KEY"
              },
              {
                "name": "PRFT_CTR_HRCHY_TAX_KEY"
              },
              {
                "name": "PRFT_CTR_HRCHY_REGION_KEY"
              },
              {
                "name": "COST_CTR_HIERARCHY_KEY"
              },
              {
                "name": "COST_CTR_HIERARCHY_REGION_KEY"
              },
              {
                "name": "COST_ELEMENT_HIERARCHY_KEY"
              },
              {
                "name": "COST_ELEMENT_COA_KEY"
              },
              {
                "name": "COST_ELEMENT_CONTROLLING_AREA_KEY"
              },
              {
                "name": "CONTROLLING_AREA_ACTIVITY_TYPE_KEY"
              },
              {
                "name": "CONTROLLING_VALUE_TYPE_KEY"
              },
              {
                "name": "CRNCY_TYPE_KEY"
              },
              {
                "name": "CRNCY_KEY"
              },
              {
                "name": "CUST_KEY"
              },
              {
                "name": "MEASURE_TYPE_KEY"
              },
              {
                "name": "UOM_KEY"
              },
              {
                "name": "DETAIL_VALUE_TYPE_KEY"
              },
              {
                "name": "STATISTICS_KEY"
              },
              {
                "name": "CONTROLLING_VERSION_KEY"
              },
              {
                "name": "VALUATION_VIEW_KEY"
              },
              {
                "name": "SENDER_RECEIVER_KEY"
              },
              {
                "name": "FUNCL_AREA_KEY"
              },
              {
                "name": "PRTNR_FUNCL_AREA_KEY"
              },
              {
                "name": "COMPANY_KEY"
              },
              {
                "name": "PRTNR_COMPANY_KEY"
              },
              {
                "name": "BUSINESS_AREA_KEY"
              },
              {
                "name": "PLANT_KEY"
              },
              {
                "name": "MATL_KEY"
              },
              {
                "name": "VENDOR_KEY"
              },
              {
                "name": "DOCUMENT_DATE_KEY"
              },
              {
                "name": "POSTING_DATE_KEY"
              },
              {
                "name": "GL_ACCOUNT_MASTER_COA_KEY"
              },
              {
                "name": "COST_CTR_ELIM_IBV_KEY"
              },
              {
                "name": "COST_ACCNTNG_DOCMNT_KEY"
              },
              {
                "name": "PRTNR_OBJ_KEY"
              },
              {
                "name": "ACTUAL_AMT"
              },
              {
                "name": "ACTUAL_FIXED_AMT"
              },
              {
                "name": "ACTUAL_VARIABLE_AMT"
              },
              {
                "name": "ACTUAL_CONSUMPTION_QTY"
              },
              {
                "name": "ACTUAL_FIX_CONSUMPTION_QTY"
              },
              {
                "name": "ACTUAL_VARIABLE_CONSUMPTION_QTY"
              },
              {
                "name": "DATE_DTE_KEY"
              }
            ]
          },
          {
            "name": "Partner Company",
            "columnPermissions": [
              {
                "name": "COMPANY_KEY"
              },
              {
                "name": "Company Code"
              },
              {
                "name": "Company Country Code"
              },
              {
                "name": "List Price Currency Code"
              },
              {
                "name": "Chart Of Accounts Code"
              },
              {
                "name": "Credit Control Area Code"
              },
              {
                "name": "Fiscal Year Variant"
              },
              {
                "name": "Company Code Description"
              },
              {
                "name": "Company Code And Description"
              }
            ]
          },
          {
            "name": "Cost Element Hierarchy Standard",
            "columnPermissions": [
              {
                "name": "COST_ELEMNT_HRCHY_KEY"
              },
              {
                "name": "SAP Client Number"
              },
              {
                "name": "Level 1 Code"
              },
              {
                "name": "Level 2 Code"
              },
              {
                "name": "Level 2 Description"
              },
              {
                "name": "Level 3 Code"
              },
              {
                "name": "Level 3 Description"
              },
              {
                "name": "Level 4 Code"
              },
              {
                "name": "Level 4 Description"
              },
              {
                "name": "Level 5 Code"
              },
              {
                "name": "Level 5 Description"
              },
              {
                "name": "Level 6 Code"
              },
              {
                "name": "Level 6 Description"
              },
              {
                "name": "Level 7 Code"
              },
              {
                "name": "Level 7 Description"
              },
              {
                "name": "Level 8 Code"
              },
              {
                "name": "Level 8 Description"
              },
              {
                "name": "Level 9 Code"
              },
              {
                "name": "Level 9 Description"
              },
              {
                "name": "Level 10 Code"
              },
              {
                "name": "Level 10 Description"
              },
              {
                "name": "Cost Element"
              }
            ]
          },
          {
            "name": "Cost Center Hierarchy Region",
            "columnPermissions": [
              {
                "name": "COST_CTR_HRCHY_KEY_REGION"
              },
              {
                "name": "SAP Client Number"
              },
              {
                "name": "Level 1 Code"
              },
              {
                "name": "Level 2 Code"
              },
              {
                "name": "Level 2 Description"
              },
              {
                "name": "Level 3 Code"
              },
              {
                "name": "Level 3 Description"
              },
              {
                "name": "Level 4 Code"
              },
              {
                "name": "Level 4 Description"
              },
              {
                "name": "Level 5 Code"
              },
              {
                "name": "Level 5 Description"
              },
              {
                "name": "Level 6 Code"
              },
              {
                "name": "Level 6 Description"
              },
              {
                "name": "Level 7 Code"
              },
              {
                "name": "Level 7 Description"
              },
              {
                "name": "Level 8 Code"
              },
              {
                "name": "Level 8 Description"
              },
              {
                "name": "Level 9 Code"
              },
              {
                "name": "Level 9 Description"
              },
              {
                "name": "Level 10 Code"
              },
              {
                "name": "Level 10 Description"
              },
              {
                "name": "Cost Center"
              }
            ]
          },
          {
            "name": "Cost Center Hierarchy Standard",
            "columnPermissions": [
              {
                "name": "COST_CTR_HRCHY_KEY"
              },
              {
                "name": "SAP Client Number"
              },
              {
                "name": "Level 1 Code"
              },
              {
                "name": "Level 2 Code"
              },
              {
                "name": "Level 2 Description"
              },
              {
                "name": "Level 3 Code"
              },
              {
                "name": "Level 3 Description"
              },
              {
                "name": "Level 4 Code"
              },
              {
                "name": "Level 4 Description"
              },
              {
                "name": "Level 5 Code"
              },
              {
                "name": "Level 5 Description"
              },
              {
                "name": "Level 6 Code"
              },
              {
                "name": "Level 6 Description"
              },
              {
                "name": "Level 7 Code"
              },
              {
                "name": "Level 7 Description"
              },
              {
                "name": "Level 8 Code"
              },
              {
                "name": "Level 8 Description"
              },
              {
                "name": "Level 9 Code"
              },
              {
                "name": "Level 9 Description"
              },
              {
                "name": "Level 10 Code"
              },
              {
                "name": "Level 10 Description"
              },
              {
                "name": "Cost Center"
              }
            ]
          },
          {
            "name": "Profit Center Hierarchy Tax",
            "columnPermissions": [
              {
                "name": "PRFT_CTR_HRCHY_TAX_KEY"
              },
              {
                "name": "SAP Client Number"
              },
              {
                "name": "Level 1 Code"
              },
              {
                "name": "Level 2 Code"
              },
              {
                "name": "Level 2 Description"
              },
              {
                "name": "Level 3 Code"
              },
              {
                "name": "Level 3 Description"
              },
              {
                "name": "Level 4 Code"
              },
              {
                "name": "Level 4 Description"
              },
              {
                "name": "Level 5 Code"
              },
              {
                "name": "Level 5 Description"
              },
              {
                "name": "Level 6 Code"
              },
              {
                "name": "Level 6 Description"
              },
              {
                "name": "Level 7 Code"
              },
              {
                "name": "Level 7 Description"
              },
              {
                "name": "Level 8 Code"
              },
              {
                "name": "Level 8 Description"
              },
              {
                "name": "Level 9 Code"
              },
              {
                "name": "Level 9 Description"
              },
              {
                "name": "Level 10 Code"
              },
              {
                "name": "Level 10 Description"
              },
              {
                "name": "Profit Center"
              }
            ]
          },
          {
            "name": "Profit Center Hierarchy Region",
            "columnPermissions": [
              {
                "name": "PRFT_CTR_HRCHY_REGION_KEY"
              },
              {
                "name": "SAP Client Number"
              },
              {
                "name": "Level 1 Code"
              },
              {
                "name": "Level 2 Code"
              },
              {
                "name": "Level 2 Description"
              },
              {
                "name": "Level 3 Code"
              },
              {
                "name": "Level 3 Description"
              },
              {
                "name": "Level 4 Code"
              },
              {
                "name": "Level 4 Description"
              },
              {
                "name": "Level 5 Code"
              },
              {
                "name": "Level 5 Description"
              },
              {
                "name": "Level 6 Code"
              },
              {
                "name": "Level 6 Description"
              },
              {
                "name": "Level 7 Code"
              },
              {
                "name": "Level 7 Description"
              },
              {
                "name": "Level 8 Code"
              },
              {
                "name": "Level 8 Description"
              },
              {
                "name": "Level 9 Code"
              },
              {
                "name": "Level 9 Description"
              },
              {
                "name": "Level 10 Code"
              },
              {
                "name": "Level 10 Description"
              },
              {
                "name": "Profit Center"
              }
            ]
          },
          {
            "name": "Controlling Version Plan",
            "columnPermissions": [
              {
                "name": "Controlling Version Key"
              },
              {
                "name": "Plan Version Code"
              },
              {
                "name": "Plan Version Name"
              }
            ]
          },
          {
            "name": "Cost Center IBV",
            "columnPermissions": [
              {
                "name": "Cost Center Key"
              },
              {
                "name": "Controlling Area Code"
              },
              {
                "name": "Cost Center Code"
              },
              {
                "name": "Cost Center Effective To Date"
              },
              {
                "name": "Cost Center Effective From Date"
              },
              {
                "name": "Actual Primary Postings Lock Indicator"
              },
              {
                "name": "Planned Primary Costs Lock Indicator"
              },
              {
                "name": "Company Code"
              },
              {
                "name": "Cost Center Category Code"
              },
              {
                "name": "Cost Center Currency Code"
              },
              {
                "name": "Cost Sheet Description"
              },
              {
                "name": "Tax Jurisdiction Code"
              },
              {
                "name": "Profit Center"
              },
              {
                "name": "Plant Code"
              },
              {
                "name": "Actual Secondary Costs Lock Indicator"
              },
              {
                "name": "Actual Revenue Postings Lock Indicator"
              },
              {
                "name": "Commitment Update Lock Indicator"
              },
              {
                "name": "Planned Secondary Costs Lock Indicator"
              },
              {
                "name": "Allocation Methods Allowed Indicator"
              },
              {
                "name": "Record Consumption Quantity Indicator"
              },
              {
                "name": "Cost Center Department Name"
              },
              {
                "name": "CO-CCA Overhead Code"
              },
              {
                "name": "Country Code"
              },
              {
                "name": "Business Partner Name 1"
              },
              {
                "name": "Business Partner Name 2"
              },
              {
                "name": "Business Partner Name 3"
              },
              {
                "name": "Business Partner Name 4"
              },
              {
                "name": "Business Partner City Name"
              },
              {
                "name": "Business Partner District Name"
              },
              {
                "name": "Business Partner Street Address"
              },
              {
                "name": "Business Partner PO Box"
              },
              {
                "name": "Business Partner Postal Code"
              },
              {
                "name": "Business Partner PO Box Postal Code"
              },
              {
                "name": "Region (State Province County) Code"
              },
              {
                "name": "First telephone number"
              },
              {
                "name": "Second telephone number"
              },
              {
                "name": "Cost Center Hierarchy Code"
              },
              {
                "name": "Cost Center Statistical Indicator "
              },
              {
                "name": "Object number"
              },
              {
                "name": "Functional Area Code"
              },
              {
                "name": "Cost Center Name"
              },
              {
                "name": "Cost Center Description"
              },
              {
                "name": "Cost Center Short Description"
              }
            ]
          },
          {
            "name": "Partner Functional Area",
            "columnPermissions": [
              {
                "name": "FUNCL_AREA_KEY"
              },
              {
                "name": "Functional Area Code"
              },
              {
                "name": "Functional Area Description"
              }
            ]
          },
          {
            "name": "Partner Object",
            "columnPermissions": [
              {
                "name": "Partner Object Key"
              },
              {
                "name": "Partner Object Code"
              },
              {
                "name": "Partner Object Value"
              }
            ]
          },
          {
            "name": "Accounting Document",
            "columnPermissions": [
              {
                "name": "Accounting Document Key"
              },
              {
                "name": "Cost Accounting Document Identifier"
              },
              {
                "name": "Cost Accounting Document Line Item Number"
              },
              {
                "name": "Cost Accounting Document Line Item Number Description"
              },
              {
                "name": "Posting Date"
              },
              {
                "name": "Document Date"
              }
            ]
          },
          {
            "name": "Controlling Debit Credit Type",
            "columnPermissions": [
              {
                "name": "Controlling Debit Credit Type Key"
              },
              {
                "name": "Debit Credit Type Code"
              },
              {
                "name": "Debit Credit Type Long Description"
              }
            ]
          },
          {
            "name": "Vendor",
            "columnPermissions": [
              {
                "name": "Vendor Key"
              },
              {
                "name": "Country Code"
              },
              {
                "name": "Vendor Name 1"
              },
              {
                "name": "Vendor Name 2"
              },
              {
                "name": "Business Partner City Name"
              },
              {
                "name": "Business Partner District Name"
              },
              {
                "name": "Business Partner PO Box"
              },
              {
                "name": "Business Partner PO Box Postal Code"
              },
              {
                "name": "Business Partner Postal Code"
              },
              {
                "name": "Vendor Business Partner Street Address"
              },
              {
                "name": "Vendor Business Address Services Identifier"
              },
              {
                "name": "Business Partner SIC Code"
              },
              {
                "name": "Vendor Account Group Code"
              },
              {
                "name": "Vendor Central Deletion Indicator"
              },
              {
                "name": "Vendor Central Posting Block Indicator"
              },
              {
                "name": "Trading Partner Company Identifier"
              },
              {
                "name": "VAT Registration Number"
              },
              {
                "name": "Business Partner PO Box City Name"
              },
              {
                "name": "Plant Code"
              },
              {
                "name": "Tax Jurisdiction Code"
              },
              {
                "name": "Vendor Payment Block Indicator"
              },
              {
                "name": "Tax Number Type"
              },
              {
                "name": "Vendor Business Type Description"
              },
              {
                "name": "Vendor Industry Type Description"
              },
              {
                "name": "Business Purpose Completion Indicator"
              },
              {
                "name": "Sold to Business Partner Identifier"
              },
              {
                "name": "Region (State Province County) Code"
              },
              {
                "name": "Vendor Business Partner Identifier"
              },
              {
                "name": "Vendor Imposed Central Purchasing Block Indicator"
              }
            ]
          },
          {
            "name": "Controlling Area",
            "columnPermissions": [
              {
                "name": "Controlling Area Key"
              },
              {
                "name": "Controlling Area Code"
              },
              {
                "name": "Controlling Area Name"
              },
              {
                "name": "List Price Currency Code"
              },
              {
                "name": "Chart of Accounts"
              },
              {
                "name": "Fiscal Year Variant Code"
              },
              {
                "name": "Cost Center Hierarchy Code"
              },
              {
                "name": "Operating Concern Code"
              },
              {
                "name": "Profit Center Hierarchy Area Code"
              },
              {
                "name": "Valuation View Code"
              },
              {
                "name": "Calculation Base Valuation View Code"
              }
            ]
          },
          {
            "name": "Cost Element By Chart Of Accounts",
            "columnPermissions": [
              {
                "name": "Cost Element COA Key"
              },
              {
                "name": "Chart Of Accounts Code"
              },
              {
                "name": "Cost Element Code"
              },
              {
                "name": "Cost Element Created Date"
              },
              {
                "name": "Functional Area Code"
              },
              {
                "name": "Cost Element COA Name"
              },
              {
                "name": "Cost Element COA Long Description"
              },
              {
                "name": "Cost Element COA Short Description"
              }
            ]
          },
          {
            "name": "Controlling Business Area",
            "columnPermissions": [
              {
                "name": "Controlling Business Area Key"
              },
              {
                "name": "Business Area Code"
              },
              {
                "name": "Business Area Description"
              }
            ]
          },
          {
            "name": "GL Account by Chart Of Accounts",
            "columnPermissions": [
              {
                "name": "G/L Account Master COA Key"
              },
              {
                "name": "Chart of Accounts"
              },
              {
                "name": "G/L Account Number"
              },
              {
                "name": "Balance Sheet Account Indicator"
              },
              {
                "name": "G/L Account Number Significant Length"
              },
              {
                "name": "Group Account Number"
              },
              {
                "name": "P&L Account Indicator"
              },
              {
                "name": "G/L Account Group Code"
              },
              {
                "name": "Trading Partner Company Identifier"
              },
              {
                "name": "G/L Account Deletion Indicator"
              },
              {
                "name": "G/L Account Creation Blocked Indicator"
              },
              {
                "name": "G/L Account Posting Blocked Indicator"
              },
              {
                "name": "G/L Account Planning Blocked Indicator"
              },
              {
                "name": "Functional Area Code"
              },
              {
                "name": "G/L Account Short Description"
              },
              {
                "name": "G/L Account Long Description"
              }
            ]
          },
          {
            "name": "Cost Element By Controlling Area",
            "columnPermissions": [
              {
                "name": "Cost Element Controlling Area key"
              },
              {
                "name": "Controlling Area Code"
              },
              {
                "name": "Cost Element Code"
              },
              {
                "name": "Cost Element Effective To Date"
              },
              {
                "name": "Cost Element Effective From Date"
              },
              {
                "name": "Cost Element Category Code"
              },
              {
                "name": "Cost Element Attributes Description"
              },
              {
                "name": "Cost Center Code"
              },
              {
                "name": "Order Number"
              },
              {
                "name": "Cost Element Unit of Measure"
              },
              {
                "name": "Cost Element Deactivated Indicator"
              },
              {
                "name": "Cost Element Short Description"
              },
              {
                "name": "Cost Element Medium Description"
              },
              {
                "name": "Cost Element Deletion Indicator"
              }
            ]
          },
          {
            "name": "Controlling Area Activity Type",
            "columnPermissions": [
              {
                "name": "Controlling Area Activity Type Key"
              },
              {
                "name": "Controlling Area Code"
              },
              {
                "name": "Activity Type Code"
              },
              {
                "name": "Activity Type Effective To Date"
              },
              {
                "name": "Activity Type Effective From Date"
              },
              {
                "name": "Activity Type Unit Of Measure"
              },
              {
                "name": "Activity Type Category Indicator"
              },
              {
                "name": "Variant Activity Type Category for Actual Postings Indicator"
              },
              {
                "name": "Activity Type Created Date"
              },
              {
                "name": "Activity Type Created By Identifier"
              },
              {
                "name": "Activity Type Valid Cost Center Categories Indicator"
              },
              {
                "name": "Output Factor Unit of Measure"
              },
              {
                "name": "Output Factor"
              },
              {
                "name": "Allocation Cost Element"
              },
              {
                "name": "Activity Type Lock Indicator"
              },
              {
                "name": "Activity Type Name"
              },
              {
                "name": "Activity Type Long Description"
              },
              {
                "name": "Activity Type Short Description"
              }
            ]
          },
          {
            "name": "Cost Center",
            "columnPermissions": [
              {
                "name": "Cost Center Key"
              },
              {
                "name": "Controlling Area Code"
              },
              {
                "name": "Cost Center Code"
              },
              {
                "name": "Cost Center Effective To Date"
              },
              {
                "name": "Cost Center Effective From Date"
              },
              {
                "name": "Actual Primary Postings Lock Indicator"
              },
              {
                "name": "Planned Primary Costs Lock Indicator"
              },
              {
                "name": "Company Code"
              },
              {
                "name": "Cost Center Category Code"
              },
              {
                "name": "Cost Center Currency Code"
              },
              {
                "name": "Cost Sheet Description"
              },
              {
                "name": "Tax Jurisdiction Code"
              },
              {
                "name": "Profit Center"
              },
              {
                "name": "Plant Code"
              },
              {
                "name": "Actual Secondary Costs Lock Indicator"
              },
              {
                "name": "Actual Revenue Postings Lock Indicator"
              },
              {
                "name": "Commitment Update Lock Indicator"
              },
              {
                "name": "Planned Secondary Costs Lock Indicator"
              },
              {
                "name": "Allocation Methods Allowed Indicator"
              },
              {
                "name": "Record Consumption Quantity Indicator"
              },
              {
                "name": "CO-CCA Overhead Code"
              },
              {
                "name": "Country Code"
              },
              {
                "name": "Business Partner Name 1"
              },
              {
                "name": "Business Partner Name 2"
              },
              {
                "name": "Business Partner Name 3"
              },
              {
                "name": "Business Partner Name 4"
              },
              {
                "name": "Business Partner City Name"
              },
              {
                "name": "Business Partner District Name"
              },
              {
                "name": "Business Partner Street Address"
              },
              {
                "name": "Business Partner PO Box"
              },
              {
                "name": "Business Partner Postal Code"
              },
              {
                "name": "Business Partner PO Box Postal Code"
              },
              {
                "name": "Region (State Province County) Code"
              },
              {
                "name": "First telephone number"
              },
              {
                "name": "Second telephone number"
              },
              {
                "name": "Cost Center Hierarchy Code"
              },
              {
                "name": "Cost Center Statistical Indicator "
              },
              {
                "name": "Object number"
              },
              {
                "name": "Functional Area Code"
              },
              {
                "name": "Cost Center Name"
              },
              {
                "name": "Cost Center Description"
              },
              {
                "name": "Cost Center Short Description"
              },
              {
                "name": "Cost Center Department Name"
              }
            ]
          },
          {
            "name": "Controlling Valuation View",
            "columnPermissions": [
              {
                "name": "Controlling Valuation View Key"
              },
              {
                "name": "Valuation View Code"
              },
              {
                "name": "Valuation View Long Description"
              }
            ]
          },
          {
            "name": "Controlling Value Type Statistics",
            "columnPermissions": [
              {
                "name": "Controlling Value Type Statistics Key"
              },
              {
                "name": "Value Type Code"
              },
              {
                "name": "Value Type Statistical Indicator"
              },
              {
                "name": "Value Type Statistics Code Short Description"
              },
              {
                "name": "Value Type Statistics Code Medium Description"
              }
            ]
          },
          {
            "name": "Controlling Value Type Details",
            "columnPermissions": [
              {
                "name": "Controlling  Value Type Details Key"
              },
              {
                "name": "Value Type Code"
              },
              {
                "name": "Key Figure Category Type Code"
              },
              {
                "name": "Detail Value Type Code"
              },
              {
                "name": "Detail Value Type short description"
              },
              {
                "name": "Detail Value Type medium description"
              }
            ]
          },
          {
            "name": "Controlling Version",
            "columnPermissions": [
              {
                "name": "Controlling Version Key"
              },
              {
                "name": "Plan Version Code"
              },
              {
                "name": "Plan Version Name"
              }
            ]
          },
          {
            "name": "Contolling Key Figure Category Type",
            "columnPermissions": [
              {
                "name": "Controlling Key Figure Category Type Key"
              },
              {
                "name": "Key Figure Category Type Code"
              },
              {
                "name": "Key Figure Category Type Short Description"
              },
              {
                "name": "Key Figure Category Type Medium Description"
              }
            ]
          },
          {
            "name": "DIM_SLS_ORG",
            "filterExpression": "CONTAINS(DIM_SECURITY_COPA,DIM_SECURITY_COPA[USER_PRNCPL_NAME],USERPRINCIPALNAME(),DIM_SECURITY_COPA[VARIABLE_NAME],\"ZSORGAUTH\",DIM_SECURITY_COPA[LOW_VALUE],DIM_SLS_ORG[Sales Organization Code])"
          }
        ]
      },
      {
        "name": "READ_FIN_CCA",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "DATA_AAS_READ_FIN_CCA@rockwellautomation.com",
            "identityProvider": "AzureAD"
          }
        ],
        "tablePermissions": [
          {
            "name": "DIM_COMPANY",
            "filterExpression": [
              "CONTAINS(DIM_SECURITY_COPA,DIM_SECURITY_COPA[USER_PRNCPL_NAME],USERPRINCIPALNAME(),DIM_SECURITY_COPA[VARIABLE_NAME],\"ZCOMPCODE\",DIM_SECURITY_COPA[LOW_VALUE],DIM_COMPANY[Company Code])",
              "",
              ""
            ]
          },
          {
            "name": "DIM_PRFT_CTR",
            "filterExpression": "CONTAINS(DIM_SECURITY_COPA,DIM_SECURITY_COPA[USER_PRNCPL_NAME],USERPRINCIPALNAME(),DIM_SECURITY_COPA[VARIABLE_NAME],\"ZPRFTCTR\",DIM_SECURITY_COPA[LOW_VALUE],DIM_PRFT_CTR[Profit Center])"
          },
          {
            "name": "DIM_SECURITY_COPA",
            "filterExpression": "FALSE()"
          },
          {
            "name": "FACT_COPA",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_BUSI_ACCT_TYPE",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_COPA",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_CUST_ACCT_ASGNMT_GRP",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_INCOTERMS",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_MATL_SLS",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_MATL_TYPE",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_MATL_GRP",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_MIDRANGE",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_PROD_HRCHY",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_SLS_DIST",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_SLS_DOC_TYPE",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_SLS_ORG",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_COPA_CODES_2",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_COPA_HEADER",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_COPA_TEXT",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_CUST_SLS",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_COPA_CODES_1",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_RPTG_CAT",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_SLS_OFFICE",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_CNTRY_SUBDIV",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_COUNTRY",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_COPA_HEADER_2",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_COPA_HEADER_3",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_COUNTRY_REGION",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_HYPERION_PRFT_CTR_HRCHY",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_BUSINESS_PARTNER_SHIP_TO",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_CUSTOMER_SOLD_TO",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_CUSTOMER_END",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_BUSINESS_PARTNER_SOLD_TO",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_BUSINESS_PARTNER_END_CUSTOMER",
            "metadataPermission": "none"
          },
          {
            "name": "Sales Orders Facts",
            "metadataPermission": "none"
          },
          {
            "name": "Billing Status",
            "metadataPermission": "none"
          },
          {
            "name": "Order Item Physical Delivery Indicator Values",
            "metadataPermission": "none"
          },
          {
            "name": "Delivery Group",
            "metadataPermission": "none"
          },
          {
            "name": "Credit Hold Status",
            "metadataPermission": "none"
          },
          {
            "name": "Sales Document Category",
            "metadataPermission": "none"
          },
          {
            "name": "Order Item Delivery Priority",
            "metadataPermission": "none"
          },
          {
            "name": "Material Stock Status",
            "metadataPermission": "none"
          },
          {
            "name": "Manufacturing Requirement Type",
            "metadataPermission": "none"
          },
          {
            "name": "Order Item Rejection Reason",
            "metadataPermission": "none"
          },
          {
            "name": "Sales Document Item Category",
            "metadataPermission": "none"
          },
          {
            "name": "Shipping Condition",
            "metadataPermission": "none"
          },
          {
            "name": "Shipping Route",
            "metadataPermission": "none"
          },
          {
            "name": "Shipping Point",
            "metadataPermission": "none"
          },
          {
            "name": "Plant Storage Location",
            "metadataPermission": "none"
          },
          {
            "name": "Order Reason",
            "metadataPermission": "none"
          },
          {
            "name": "Sales Order Delivery Block",
            "metadataPermission": "none"
          },
          {
            "name": "Schedule Line Category",
            "metadataPermission": "none"
          },
          {
            "name": "Business Address Ship To",
            "metadataPermission": "none"
          },
          {
            "name": "Booking Document",
            "metadataPermission": "none"
          },
          {
            "name": "Customer Purchase Order",
            "metadataPermission": "none"
          },
          {
            "name": "Customer Collective Number",
            "metadataPermission": "none"
          },
          {
            "name": "Sales Order Information",
            "metadataPermission": "none"
          },
          {
            "name": "Internal Order Number",
            "metadataPermission": "none"
          },
          {
            "name": "Sales Order Software Shipment",
            "metadataPermission": "none"
          },
          {
            "name": "Booked Quantity Unit of Measure",
            "metadataPermission": "none"
          },
          {
            "name": "Business Address Sold To",
            "metadataPermission": "none"
          },
          {
            "name": "Delivery Related Billing Status",
            "metadataPermission": "none"
          },
          {
            "name": "Material Base Unit of Measure",
            "metadataPermission": "none"
          },
          {
            "name": "Item Rejection Status",
            "metadataPermission": "none"
          },
          {
            "name": "Order Complete Delivery Indicator Values",
            "metadataPermission": "none"
          },
          {
            "name": "Sales Order Item Delivery Block",
            "metadataPermission": "none"
          },
          {
            "name": "Order Related Billing Status",
            "metadataPermission": "none"
          },
          {
            "name": "Payer Business Partner",
            "metadataPermission": "none"
          },
          {
            "name": "Shipment Complete Indicator values",
            "metadataPermission": "none"
          },
          {
            "name": "Sales Order Delivery Status",
            "metadataPermission": "none"
          },
          {
            "name": "Sales Order Item Delivery Status",
            "metadataPermission": "none"
          },
          {
            "name": "Sales Order Item Overall Delivery Status",
            "metadataPermission": "none"
          },
          {
            "name": "Sales Order Overall Delivery Status",
            "metadataPermission": "none"
          }
        ]
      },
      {
        "name": "READ_FIN_FOR_BU",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "DATA_AAS_READ_FIN_FOR_BU@rockwellautomation.com",
            "identityProvider": "AzureAD"
          }
        ],
        "tablePermissions": [
          {
            "name": "DIM_COMPANY",
            "filterExpression": [
              "CONTAINS(DIM_SECURITY_COPA,DIM_SECURITY_COPA[USER_PRNCPL_NAME],USERPRINCIPALNAME(),DIM_SECURITY_COPA[VARIABLE_NAME],\"ZCOMPCODE\",DIM_SECURITY_COPA[LOW_VALUE],DIM_COMPANY[Company Code])",
              "",
              ""
            ]
          },
          {
            "name": "DIM_PRFT_CTR",
            "filterExpression": "CONTAINS(DIM_SECURITY_COPA,DIM_SECURITY_COPA[USER_PRNCPL_NAME],USERPRINCIPALNAME(),DIM_SECURITY_COPA[VARIABLE_NAME],\"ZPRFTCTR\",DIM_SECURITY_COPA[LOW_VALUE],DIM_PRFT_CTR[Profit Center])"
          },
          {
            "name": "DIM_SECURITY_COPA",
            "filterExpression": "FALSE()"
          },
          {
            "name": "Partner Company",
            "metadataPermission": "none"
          },
          {
            "name": "FACT_CCA_ACTUALS",
            "metadataPermission": "none"
          },
          {
            "name": "Cost Element Hierarchy Standard",
            "metadataPermission": "none"
          },
          {
            "name": "Cost Center Hierarchy Region",
            "metadataPermission": "none"
          },
          {
            "name": "Cost Center Hierarchy Standard",
            "metadataPermission": "none"
          },
          {
            "name": "Profit Center Hierarchy Tax",
            "metadataPermission": "none"
          },
          {
            "name": "Profit Center Hierarchy Region",
            "metadataPermission": "none"
          },
          {
            "name": "Controlling Version Plan",
            "metadataPermission": "none"
          },
          {
            "name": "Cost Center IBV",
            "metadataPermission": "none"
          },
          {
            "name": "Partner Functional Area",
            "metadataPermission": "none"
          },
          {
            "name": "FACT_CCA_PLAN_ACTUALS",
            "metadataPermission": "none"
          },
          {
            "name": "Partner Object",
            "metadataPermission": "none"
          },
          {
            "name": "Accounting Document",
            "metadataPermission": "none"
          },
          {
            "name": "Controlling Debit Credit Type",
            "metadataPermission": "none"
          },
          {
            "name": "Vendor",
            "metadataPermission": "none"
          },
          {
            "name": "Controlling Area",
            "metadataPermission": "none"
          },
          {
            "name": "Cost Element By Chart Of Accounts",
            "metadataPermission": "none"
          },
          {
            "name": "Controlling Business Area",
            "metadataPermission": "none"
          },
          {
            "name": "GL Account by Chart Of Accounts",
            "metadataPermission": "none"
          },
          {
            "name": "Cost Element By Controlling Area",
            "metadataPermission": "none"
          },
          {
            "name": "Controlling Area Activity Type",
            "metadataPermission": "none"
          },
          {
            "name": "Cost Center",
            "metadataPermission": "none"
          },
          {
            "name": "Controlling Valuation View",
            "metadataPermission": "none"
          },
          {
            "name": "Controlling Value Type Statistics",
            "metadataPermission": "none"
          },
          {
            "name": "Controlling Value Type Details",
            "metadataPermission": "none"
          },
          {
            "name": "Controlling Version",
            "metadataPermission": "none"
          },
          {
            "name": "Contolling Key Figure Category Type",
            "metadataPermission": "none"
          },
          {
            "name": "Controlling Value Type",
            "metadataPermission": "none"
          },
          {
            "name": "DIM_SLS_ORG",
            "filterExpression": "CONTAINS(DIM_SECURITY_COPA,DIM_SECURITY_COPA[USER_PRNCPL_NAME],USERPRINCIPALNAME(),DIM_SECURITY_COPA[VARIABLE_NAME],\"ZSORGAUTH\",DIM_SECURITY_COPA[LOW_VALUE],DIM_SLS_ORG[Sales Organization Code])"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "TabularEditor_SerializeOptions",
        "value": "{\"IgnoreInferredObjects\":true,\"IgnoreInferredProperties\":true,\"IgnoreTimestamps\":true,\"SplitMultilineStrings\":true,\"PrefixFilenames\":false,\"LocalTranslations\":false,\"LocalPerspectives\":false,\"LocalRelationships\":false,\"Levels\":[\"Data Sources\",\"Perspectives\",\"Relationships\",\"Roles\",\"Tables\",\"Tables/Calculation Items\",\"Tables/Columns\",\"Tables/Hierarchies\",\"Tables/Measures\",\"Tables/Partitions\",\"Translations\"]}"
      }
    ]
  }
}